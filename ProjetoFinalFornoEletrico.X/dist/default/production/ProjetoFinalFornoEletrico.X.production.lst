

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 14:29:46 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     _TRISCbits	set	3988
    71  0000                     _PORTCbits	set	3970
    72  0000                     _T2CON	set	4042
    73  0000                     _CCP2CON	set	4026
    74  0000                     _CCPR2L	set	4027
    75  0000                     _CCP1CON	set	4029
    76  0000                     _CCPR1L	set	4030
    77  0000                     _PR2	set	4043
    78  0000                     _ADRESL	set	4035
    79  0000                     _ADRESH	set	4036
    80  0000                     _ADCON0bits	set	4034
    81  0000                     _ADCON2	set	4032
    82  0000                     _ADCON1	set	4033
    83  0000                     _ADCON0	set	4034
    84  0000                     _TRISE	set	3990
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISC	set	3988
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISA	set	3986
    89  0000                     _PORTE	set	3972
    90  0000                     _PORTD	set	3971
    91  0000                     _PORTC	set	3970
    92  0000                     _PORTB	set	3969
    93  0000                     _PORTA	set	3968
    94                           
    95                           	psect	smallconst
    96  000600                     __psmallconst:
    97                           	callstack 0
    98  000600  00                 	db	0
    99  000601                     STR_1:
   100  000601  56                 	db	86	;'V'
   101  000602  61                 	db	97	;'a'
   102  000603  6D                 	db	109	;'m'
   103  000604  6F                 	db	111	;'o'
   104  000605  73                 	db	115	;'s'
   105  000606  20                 	db	32
   106  000607  69                 	db	105	;'i'
   107  000608  6E                 	db	110	;'n'
   108  000609  69                 	db	105	;'i'
   109  00060A  63                 	db	99	;'c'
   110  00060B  69                 	db	105	;'i'
   111  00060C  61                 	db	97	;'a'
   112  00060D  72                 	db	114	;'r'
   113  00060E  21                 	db	33
   114  00060F  00                 	db	0
   115  000610                     STR_2:
   116  000610  43                 	db	67	;'C'
   117  000611  6C                 	db	108	;'l'
   118  000612  69                 	db	105	;'i'
   119  000613  71                 	db	113	;'q'
   120  000614  75                 	db	117	;'u'
   121  000615  65                 	db	101	;'e'
   122  000616  20                 	db	32
   123  000617  65                 	db	101	;'e'
   124  000618  6D                 	db	109	;'m'
   125  000619  20                 	db	32
   126  00061A  28                 	db	40
   127  00061B  31                 	db	49	;'1'
   128  00061C  29                 	db	41
   129  00061D  00                 	db	0
   130  00061E                     STR_6:
   131  00061E  46                 	db	70	;'F'
   132  00061F  75                 	db	117	;'u'
   133  000620  6E                 	db	110	;'n'
   134  000621  63                 	db	99	;'c'
   135  000622  69                 	db	105	;'i'
   136  000623  6F                 	db	111	;'o'
   137  000624  6E                 	db	110	;'n'
   138  000625  61                 	db	97	;'a'
   139  000626  6E                 	db	110	;'n'
   140  000627  64                 	db	100	;'d'
   141  000628  6F                 	db	111	;'o'
   142  000629  21                 	db	33
   143  00062A  00                 	db	0
   144  00062B                     STR_3:
   145  00062B  54                 	db	84	;'T'
   146  00062C  65                 	db	101	;'e'
   147  00062D  6D                 	db	109	;'m'
   148  00062E  70                 	db	112	;'p'
   149  00062F  65                 	db	101	;'e'
   150  000630  72                 	db	114	;'r'
   151  000631  61                 	db	97	;'a'
   152  000632  74                 	db	116	;'t'
   153  000633  75                 	db	117	;'u'
   154  000634  72                 	db	114	;'r'
   155  000635  61                 	db	97	;'a'
   156  000636  3A                 	db	58	;':'
   157  000637  00                 	db	0
   158  000638                     STR_4:
   159  000638  54                 	db	84	;'T'
   160  000639  65                 	db	101	;'e'
   161  00063A  6D                 	db	109	;'m'
   162  00063B  70                 	db	112	;'p'
   163  00063C  6F                 	db	111	;'o'
   164  00063D  3A                 	db	58	;':'
   165  00063E  00                 	db	0
   166  00063F                     STR_5:
   167  00063F  6D                 	db	109	;'m'
   168  000640  69                 	db	105	;'i'
   169  000641  6E                 	db	110	;'n'
   170  000642  00                 	db	0
   171  000643                     STR_8:
   172  000643  43                 	db	67	;'C'
   173  000644  00                 	db	0
   174  000645  00                 	db	0	; dummy byte at the end
   175  0000                     
   176                           ; #config settings
   177                           
   178                           	psect	cinit
   179  001646                     __pcinit:
   180                           	callstack 0
   181  001646                     start_initialization:
   182                           	callstack 0
   183  001646                     __initialization:
   184                           	callstack 0
   185                           
   186                           ; Clear objects allocated to COMRAM (12 bytes)
   187  001646  EE00  F045         	lfsr	0,__pbssCOMRAM
   188  00164A  0E0C               	movlw	12
   189  00164C                     clear_0:
   190  00164C  6AEE               	clrf	postinc0,c
   191  00164E  06E8               	decf	wreg,f,c
   192  001650  E1FD               	bnz	clear_0
   193  001652                     end_of_initialization:
   194                           	callstack 0
   195  001652                     __end_of__initialization:
   196                           	callstack 0
   197  001652  0E00               	movlw	low (__Lmediumconst shr (0+16))
   198  001654  6EF8               	movwf	tblptru,c
   199  001656  0100               	movlb	0
   200  001658  EF23  F003         	goto	_main	;jump to C main() function
   201                           
   202                           	psect	bssCOMRAM
   203  000045                     __pbssCOMRAM:
   204                           	callstack 0
   205  000045                     kpDebounce@valorAntigo:
   206                           	callstack 0
   207  000045                     	ds	2
   208  000047                     kpDebounce@valorNovo:
   209                           	callstack 0
   210  000047                     	ds	2
   211  000049                     _valor:
   212                           	callstack 0
   213  000049                     	ds	2
   214  00004B                     _tmin:
   215                           	callstack 0
   216  00004B                     	ds	1
   217  00004C                     _tmax:
   218                           	callstack 0
   219  00004C                     	ds	1
   220  00004D                     _perc:
   221                           	callstack 0
   222  00004D                     	ds	1
   223  00004E                     _cnt:
   224                           	callstack 0
   225  00004E                     	ds	1
   226  00004F                     _i:
   227                           	callstack 0
   228  00004F                     	ds	1
   229  000050                     kpDebounce@tempo:
   230                           	callstack 0
   231  000050                     	ds	1
   232                           
   233                           	psect	cstackCOMRAM
   234  000001                     __pcstackCOMRAM:
   235                           	callstack 0
   236  000001                     ??_kpDebounce:
   237  000001                     ?_kpRead:
   238                           	callstack 0
   239  000001                     ?_adc_amostra:
   240                           	callstack 0
   241  000001                     ?___lwmod:
   242                           	callstack 0
   243  000001                     Delay40us@i:
   244                           	callstack 0
   245  000001                     digitalWrite@pin:
   246                           	callstack 0
   247  000001                     pinMode@pin:
   248                           	callstack 0
   249  000001                     atraso_ms@t:
   250                           	callstack 0
   251  000001                     ___lwmod@dividend:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x0
   255  000001                     	ds	1
   256  000002                     Delay2ms@i:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260  000002                     	ds	1
   261  000003                     ??_adc_amostra:
   262  000003                     digitalWrite@value:
   263                           	callstack 0
   264  000003                     pinMode@type:
   265                           	callstack 0
   266  000003                     atraso_ms@i:
   267                           	callstack 0
   268  000003                     ___lwmod@divisor:
   269                           	callstack 0
   270                           
   271                           ; 2 bytes @ 0x2
   272  000003                     	ds	2
   273  000005                     ??_digitalWrite:
   274  000005                     ??_pinMode:
   275  000005                     atraso_ms@j:
   276                           	callstack 0
   277  000005                     ___lwmod@counter:
   278                           	callstack 0
   279                           
   280                           ; 1 bytes @ 0x4
   281  000005                     	ds	1
   282  000006                     kpDebounce@old_D:
   283                           	callstack 0
   284  000006                     atraso_ms@k:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x5
   288  000006                     	ds	1
   289  000007                     lcdCommand@old_D:
   290                           	callstack 0
   291  000007                     lcdData@valor:
   292                           	callstack 0
   293  000007                     adc_amostra@canal:
   294                           	callstack 0
   295  000007                     kpDebounce@k:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x6
   299  000007                     	ds	1
   300  000008                     ?___wmul:
   301                           	callstack 0
   302  000008                     lcdCommand@cmd:
   303                           	callstack 0
   304  000008                     lcdData@old_D:
   305                           	callstack 0
   306  000008                     ___wmul@multiplier:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x7
   310  000008                     	ds	1
   311  000009                     kpDebounce@j:
   312                           	callstack 0
   313  000009                     lcdPosition@coluna:
   314                           	callstack 0
   315  000009                     lcd_str@str:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x8
   319  000009                     	ds	1
   320  00000A                     kpDebounce@i:
   321                           	callstack 0
   322  00000A                     lcdPosition@comando:
   323                           	callstack 0
   324  00000A                     ___wmul@multiplicand:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x9
   328  00000A                     	ds	1
   329  00000B                     ??_lcd_str:
   330  00000B                     lcdPosition@linha:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0xA
   334  00000B                     	ds	1
   335  00000C                     ___wmul@product:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0xB
   339  00000C                     	ds	1
   340  00000D                     lcd_str@i:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0xC
   344  00000D                     	ds	1
   345  00000E                     ?___lwdiv:
   346                           	callstack 0
   347  00000E                     ___lwdiv@dividend:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0xD
   351  00000E                     	ds	2
   352  000010                     ___lwdiv@divisor:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xF
   356  000010                     	ds	2
   357  000012                     ___lwdiv@quotient:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x11
   361  000012                     	ds	2
   362  000014                     ___lwdiv@counter:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x13
   366  000014                     	ds	1
   367  000015                     ??_pwmSet1:
   368  000015                     itoa@val:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x14
   372  000015                     	ds	2
   373  000017                     pwmSet1@porcento:
   374                           	callstack 0
   375  000017                     itoa@str:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379  000017                     	ds	1
   380  000018                     pwmSet1@val:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x17
   384  000018                     	ds	1
   385  000019                     ?_setTemperature:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x18
   389  000019                     	ds	2
   390  00001B                     ??_setTemperature:
   391                           
   392                           ; 1 bytes @ 0x1A
   393  00001B                     	ds	2
   394  00001D                     setTemperature@str:
   395                           	callstack 0
   396                           
   397                           ; 6 bytes @ 0x1C
   398  00001D                     	ds	6
   399  000023                     setTemperature@tmp:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x22
   403  000023                     	ds	1
   404  000024                     setTemperature@temperatura:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x23
   408  000024                     	ds	2
   409  000026                     ??_main:
   410                           
   411                           ; 1 bytes @ 0x25
   412  000026                     	ds	2
   413  000028                     main@tempoRelogio:
   414                           	callstack 0
   415                           
   416                           ; 6 bytes @ 0x27
   417  000028                     	ds	6
   418  00002E                     main@temperaturaMaxima:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x2D
   422  00002E                     	ds	2
   423  000030                     main@temperaturaMinima:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2F
   427  000030                     	ds	2
   428  000032                     main@tmpi:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x31
   432  000032                     	ds	2
   433  000034                     main@str:
   434                           	callstack 0
   435                           
   436                           ; 6 bytes @ 0x33
   437  000034                     	ds	6
   438  00003A                     main@temperatura:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x39
   442  00003A                     	ds	2
   443  00003C                     main@minutosCentena:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x3B
   447  00003C                     	ds	1
   448  00003D                     main@minutosDezena:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x3C
   452  00003D                     	ds	1
   453  00003E                     main@minutosUnidade:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x3D
   457  00003E                     	ds	1
   458  00003F                     main@temperaturaLcd:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x3E
   462  00003F                     	ds	2
   463  000041                     main@tempoTotal:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x40
   467  000041                     	ds	2
   468  000043                     main@tecla:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x42
   472  000043                     	ds	2
   473                           
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 17 in file "main.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  str             6   51[COMRAM] unsigned char [6]
   484 ;;  tempoRelogio    6   39[COMRAM] unsigned char [6]
   485 ;;  tecla           2   66[COMRAM] unsigned int 
   486 ;;  tempoTotal      2   64[COMRAM] unsigned int 
   487 ;;  temperaturaL    2   62[COMRAM] unsigned int 
   488 ;;  temperatura     2   57[COMRAM] unsigned int 
   489 ;;  tmpi            2   49[COMRAM] unsigned int 
   490 ;;  temperaturaM    2   47[COMRAM] unsigned int 
   491 ;;  temperaturaM    2   45[COMRAM] unsigned int 
   492 ;;  minutosUnida    1   61[COMRAM] unsigned char 
   493 ;;  minutosDezen    1   60[COMRAM] unsigned char 
   494 ;;  minutosCente    1   59[COMRAM] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   504 ;;      Params:         0       0       0       0       0       0       0
   505 ;;      Locals:        29       0       0       0       0       0       0
   506 ;;      Temps:          2       0       0       0       0       0       0
   507 ;;      Totals:        31       0       0       0       0       0       0
   508 ;;Total ram usage:       31 bytes
   509 ;; Hardware stack levels required when called: 5
   510 ;; This function calls:
   511 ;;		___lwdiv
   512 ;;		___wmul
   513 ;;		_adc_amostra
   514 ;;		_atraso_ms
   515 ;;		_itoa
   516 ;;		_kpDebounce
   517 ;;		_kpInit
   518 ;;		_kpRead
   519 ;;		_lcdCommand
   520 ;;		_lcdData
   521 ;;		_lcdInit
   522 ;;		_lcdPosition
   523 ;;		_lcd_str
   524 ;;		_pwmInit
   525 ;;		_pwmSet1
   526 ;;		_setTemperature
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533  000646                     __ptext0:
   534                           	callstack 0
   535  000646                     _main:
   536                           	callstack 26
   537  000646                     
   538                           ;main.c: 18:     unsigned int tecla = 16;
   539  000646  0E00               	movlw	0
   540  000648  6E44               	movwf	(main@tecla+1)^0,c
   541  00064A  0E10               	movlw	16
   542  00064C  6E43               	movwf	main@tecla^0,c
   543                           
   544                           ;main.c: 19:     unsigned int temperatura = 180, temperaturaMaxima, temperaturaMinima;
   545  00064E  0E00               	movlw	0
   546  000650  6E3B               	movwf	(main@temperatura+1)^0,c
   547  000652  0EB4               	movlw	180
   548  000654  6E3A               	movwf	main@temperatura^0,c
   549                           
   550                           ;main.c: 20:     char minutosCentena = 48, minutosDezena = 48, minutosUnidade = 48;
   551  000656  0E30               	movlw	48
   552  000658  6E3C               	movwf	main@minutosCentena^0,c
   553  00065A  0E30               	movlw	48
   554  00065C  6E3D               	movwf	main@minutosDezena^0,c
   555  00065E  0E30               	movlw	48
   556  000660  6E3E               	movwf	main@minutosUnidade^0,c
   557                           
   558                           ;main.c: 22:     char str[6];;main.c: 23:     char tempoRelogio[6];;main.c: 24:     unsi
      +                          gned int tmpi, temperaturaLcd, tempoTotal = 0;
   559  000662  0E00               	movlw	0
   560  000664  6E42               	movwf	(main@tempoTotal+1)^0,c
   561  000666  0E00               	movlw	0
   562  000668  6E41               	movwf	main@tempoTotal^0,c
   563                           
   564                           ;main.c: 26:     TRISA = 0x07;
   565  00066A  0E07               	movlw	7
   566  00066C  6E92               	movwf	146,c	;volatile
   567                           
   568                           ;main.c: 27:     TRISB = 0x00;
   569  00066E  0E00               	movlw	0
   570  000670  6E93               	movwf	147,c	;volatile
   571                           
   572                           ;main.c: 28:     TRISC = 0x00;
   573  000672  0E00               	movlw	0
   574  000674  6E94               	movwf	148,c	;volatile
   575  000676                     
   576                           ;main.c: 30:     lcdInit();
   577  000676  EC77  F009         	call	_lcdInit	;wreg free
   578  00067A                     
   579                           ;main.c: 31:     kpInit();
   580  00067A  EC3D  F00B         	call	_kpInit	;wreg free
   581  00067E                     l1902:
   582                           
   583                           ;main.c: 34:         lcdPosition(0, 1);
   584  00067E  0E01               	movlw	1
   585  000680  6E09               	movwf	lcdPosition@coluna^0,c
   586  000682  0E00               	movlw	0
   587  000684  ECD9  F00A         	call	_lcdPosition
   588  000688                     
   589                           ;main.c: 36:         lcd_str("Vamos iniciar!");
   590  000688  0E01               	movlw	low STR_1
   591  00068A  6E09               	movwf	lcd_str@str^0,c
   592  00068C  0E06               	movlw	high STR_1
   593  00068E  6E0A               	movwf	(lcd_str@str+1)^0,c
   594  000690  ECB1  F00A         	call	_lcd_str	;wreg free
   595  000694                     
   596                           ;main.c: 37:         lcdPosition(1, 1);
   597  000694  0E01               	movlw	1
   598  000696  6E09               	movwf	lcdPosition@coluna^0,c
   599  000698  0E01               	movlw	1
   600  00069A  ECD9  F00A         	call	_lcdPosition
   601  00069E                     
   602                           ;main.c: 38:         lcd_str("Clique em (1)");
   603  00069E  0E10               	movlw	low STR_2
   604  0006A0  6E09               	movwf	lcd_str@str^0,c
   605  0006A2  0E06               	movlw	high STR_2
   606  0006A4  6E0A               	movwf	(lcd_str@str+1)^0,c
   607  0006A6  ECB1  F00A         	call	_lcd_str	;wreg free
   608  0006AA                     
   609                           ;main.c: 40:         kpDebounce();
   610  0006AA  EC6E  F007         	call	_kpDebounce	;wreg free
   611  0006AE                     
   612                           ;main.c: 41:         if (kpRead() != tecla) {
   613  0006AE  EC38  F00B         	call	_kpRead	;wreg free
   614  0006B2  5043               	movf	main@tecla^0,w,c
   615  0006B4  1801               	xorwf	?_kpRead^0,w,c
   616  0006B6  E109               	bnz	u1510
   617  0006B8  5044               	movf	(main@tecla+1)^0,w,c
   618  0006BA  1802               	xorwf	(?_kpRead+1)^0,w,c
   619  0006BC  B4D8               	btfsc	status,2,c
   620  0006BE  EF63  F003         	goto	u1511
   621  0006C2  EF65  F003         	goto	u1510
   622  0006C6                     u1511:
   623  0006C6  EF3F  F003         	goto	l1902
   624  0006CA                     u1510:
   625  0006CA                     
   626                           ;main.c: 42:             tecla = kpRead();
   627  0006CA  EC38  F00B         	call	_kpRead	;wreg free
   628  0006CE  C001  F043         	movff	?_kpRead,main@tecla
   629  0006D2  C002  F044         	movff	?_kpRead+1,main@tecla+1
   630  0006D6                     
   631                           ;main.c: 45:             if (((tecla) & (1<<(3)))) {
   632  0006D6  A643               	btfss	main@tecla^0,3,c
   633  0006D8  EF70  F003         	goto	u1521
   634  0006DC  EF72  F003         	goto	u1520
   635  0006E0                     u1521:
   636  0006E0  EF3F  F003         	goto	l1902
   637  0006E4                     u1520:
   638  0006E4                     
   639                           ;main.c: 46:                 lcdCommand(0x01);
   640  0006E4  0E01               	movlw	1
   641  0006E6  EC38  F009         	call	_lcdCommand
   642                           
   643                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   644  0006EA  EF0C  F004         	goto	l1970
   645  0006EE                     l1920:
   646                           
   647                           ;main.c: 52:                     lcdPosition(0, 0);
   648  0006EE  0E00               	movlw	0
   649  0006F0  6E09               	movwf	lcdPosition@coluna^0,c
   650  0006F2  0E00               	movlw	0
   651  0006F4  ECD9  F00A         	call	_lcdPosition
   652  0006F8                     
   653                           ;main.c: 53:                     lcd_str("Temperatura:");
   654  0006F8  0E2B               	movlw	low STR_3
   655  0006FA  6E09               	movwf	lcd_str@str^0,c
   656  0006FC  0E06               	movlw	high STR_3
   657  0006FE  6E0A               	movwf	(lcd_str@str+1)^0,c
   658  000700  ECB1  F00A         	call	_lcd_str	;wreg free
   659  000704                     
   660                           ;main.c: 54:                     temperatura = setTemperature();
   661  000704  ECF7  F008         	call	_setTemperature	;wreg free
   662  000708  C019  F03A         	movff	?_setTemperature,main@temperatura
   663  00070C  C01A  F03B         	movff	?_setTemperature+1,main@temperatura+1
   664  000710                     
   665                           ;main.c: 58:                     lcdPosition(1, 0);
   666  000710  0E00               	movlw	0
   667  000712  6E09               	movwf	lcdPosition@coluna^0,c
   668  000714  0E01               	movlw	1
   669  000716  ECD9  F00A         	call	_lcdPosition
   670  00071A                     
   671                           ;main.c: 59:                     lcd_str("Tempo:");
   672  00071A  0E38               	movlw	low STR_4
   673  00071C  6E09               	movwf	lcd_str@str^0,c
   674  00071E  0E06               	movlw	high STR_4
   675  000720  6E0A               	movwf	(lcd_str@str+1)^0,c
   676  000722  ECB1  F00A         	call	_lcd_str	;wreg free
   677  000726                     
   678                           ;main.c: 60:                     lcdPosition(1, 6);
   679  000726  0E06               	movlw	6
   680  000728  6E09               	movwf	lcdPosition@coluna^0,c
   681  00072A  0E01               	movlw	1
   682  00072C  ECD9  F00A         	call	_lcdPosition
   683  000730                     
   684                           ;main.c: 61:                     lcdData((char)minutosCentena);
   685  000730  503C               	movf	main@minutosCentena^0,w,c
   686  000732  EC87  F00A         	call	_lcdData
   687  000736                     
   688                           ;main.c: 62:                     lcdData((char)minutosDezena);
   689  000736  503D               	movf	main@minutosDezena^0,w,c
   690  000738  EC87  F00A         	call	_lcdData
   691  00073C                     
   692                           ;main.c: 63:                     lcdData((char)minutosUnidade);
   693  00073C  503E               	movf	main@minutosUnidade^0,w,c
   694  00073E  EC87  F00A         	call	_lcdData
   695  000742                     
   696                           ;main.c: 64:                     lcd_str("min");
   697  000742  0E3F               	movlw	low STR_5
   698  000744  6E09               	movwf	lcd_str@str^0,c
   699  000746  0E06               	movlw	high STR_5
   700  000748  6E0A               	movwf	(lcd_str@str+1)^0,c
   701  00074A  ECB1  F00A         	call	_lcd_str	;wreg free
   702  00074E                     
   703                           ;main.c: 66:                     kpDebounce();
   704  00074E  EC6E  F007         	call	_kpDebounce	;wreg free
   705  000752                     
   706                           ;main.c: 67:                     if (kpRead() != tecla) {
   707  000752  EC38  F00B         	call	_kpRead	;wreg free
   708  000756  5043               	movf	main@tecla^0,w,c
   709  000758  1801               	xorwf	?_kpRead^0,w,c
   710  00075A  E109               	bnz	u1530
   711  00075C  5044               	movf	(main@tecla+1)^0,w,c
   712  00075E  1802               	xorwf	(?_kpRead+1)^0,w,c
   713  000760  B4D8               	btfsc	status,2,c
   714  000762  EFB5  F003         	goto	u1531
   715  000766  EFB7  F003         	goto	u1530
   716  00076A                     u1531:
   717  00076A  EF0C  F004         	goto	l1970
   718  00076E                     u1530:
   719  00076E                     
   720                           ;main.c: 68:                         tecla = kpRead();
   721  00076E  EC38  F00B         	call	_kpRead	;wreg free
   722  000772  C001  F043         	movff	?_kpRead,main@tecla
   723  000776  C002  F044         	movff	?_kpRead+1,main@tecla+1
   724  00077A                     
   725                           ;main.c: 69:                         if (((tecla) & (1<<(1)))) {
   726  00077A  A243               	btfss	main@tecla^0,1,c
   727  00077C  EFC2  F003         	goto	u1541
   728  000780  EFC4  F003         	goto	u1540
   729  000784                     u1541:
   730  000784  EFD8  F003         	goto	l289
   731  000788                     u1540:
   732  000788                     
   733                           ;main.c: 70:                             if (minutosCentena == 57) {
   734  000788  0E39               	movlw	57
   735  00078A  183C               	xorwf	main@minutosCentena^0,w,c
   736  00078C  A4D8               	btfss	status,2,c
   737  00078E  EFCB  F003         	goto	u1551
   738  000792  EFCD  F003         	goto	u1550
   739  000796                     u1551:
   740  000796  EFD1  F003         	goto	l1952
   741  00079A                     u1550:
   742  00079A                     
   743                           ;main.c: 71:                                 minutosCentena = 48;
   744  00079A  0E30               	movlw	48
   745  00079C  6E3C               	movwf	main@minutosCentena^0,c
   746                           
   747                           ;main.c: 72:                             } else {
   748  00079E  EF0C  F004         	goto	l1970
   749  0007A2                     l1952:
   750                           
   751                           ;main.c: 73:                                 minutosCentena += 1;
   752  0007A2  2A3C               	incf	main@minutosCentena^0,f,c
   753  0007A4                     
   754                           ;main.c: 74:                                 tempoTotal += 100;
   755  0007A4  0E64               	movlw	100
   756  0007A6  2641               	addwf	main@tempoTotal^0,f,c
   757  0007A8  0E00               	movlw	0
   758  0007AA  2242               	addwfc	(main@tempoTotal+1)^0,f,c
   759  0007AC  EF0C  F004         	goto	l1970
   760  0007B0                     l289:
   761  0007B0  AA43               	btfss	main@tecla^0,5,c
   762  0007B2  EFDD  F003         	goto	u1561
   763  0007B6  EFDF  F003         	goto	u1560
   764  0007BA                     u1561:
   765  0007BA  EFF3  F003         	goto	l293
   766  0007BE                     u1560:
   767  0007BE                     
   768                           ;main.c: 77:                             if (minutosDezena == 57) {
   769  0007BE  0E39               	movlw	57
   770  0007C0  183D               	xorwf	main@minutosDezena^0,w,c
   771  0007C2  A4D8               	btfss	status,2,c
   772  0007C4  EFE6  F003         	goto	u1571
   773  0007C8  EFE8  F003         	goto	u1570
   774  0007CC                     u1571:
   775  0007CC  EFEC  F003         	goto	l1960
   776  0007D0                     u1570:
   777  0007D0                     
   778                           ;main.c: 78:                                 minutosDezena = 48;
   779  0007D0  0E30               	movlw	48
   780  0007D2  6E3D               	movwf	main@minutosDezena^0,c
   781                           
   782                           ;main.c: 79:                             } else {
   783  0007D4  EF0C  F004         	goto	l1970
   784  0007D8                     l1960:
   785                           
   786                           ;main.c: 80:                                 minutosDezena += 1;
   787  0007D8  2A3D               	incf	main@minutosDezena^0,f,c
   788  0007DA                     
   789                           ;main.c: 81:                                 tempoTotal += 10;
   790  0007DA  0E0A               	movlw	10
   791  0007DC  2641               	addwf	main@tempoTotal^0,f,c
   792  0007DE  0E00               	movlw	0
   793  0007E0  2242               	addwfc	(main@tempoTotal+1)^0,f,c
   794  0007E2  EF0C  F004         	goto	l1970
   795  0007E6                     l293:
   796  0007E6  A244               	btfss	(main@tecla+1)^0,1,c
   797  0007E8  EFF8  F003         	goto	u1581
   798  0007EC  EFFA  F003         	goto	u1580
   799  0007F0                     u1581:
   800  0007F0  EF0C  F004         	goto	l288
   801  0007F4                     u1580:
   802  0007F4                     
   803                           ;main.c: 84:                             if (minutosUnidade == 57) {
   804  0007F4  0E39               	movlw	57
   805  0007F6  183E               	xorwf	main@minutosUnidade^0,w,c
   806  0007F8  A4D8               	btfss	status,2,c
   807  0007FA  EF01  F004         	goto	u1591
   808  0007FE  EF03  F004         	goto	u1590
   809  000802                     u1591:
   810  000802  EF07  F004         	goto	l1968
   811  000806                     u1590:
   812  000806                     
   813                           ;main.c: 85:                                 minutosUnidade = 48;
   814  000806  0E30               	movlw	48
   815  000808  6E3E               	movwf	main@minutosUnidade^0,c
   816                           
   817                           ;main.c: 86:                             } else {
   818  00080A  EF0C  F004         	goto	l1970
   819  00080E                     l1968:
   820                           
   821                           ;main.c: 87:                                 minutosUnidade += 1;
   822  00080E  2A3E               	incf	main@minutosUnidade^0,f,c
   823                           
   824                           ;main.c: 88:                                 tempoTotal += 1;
   825  000810  4A41               	infsnz	main@tempoTotal^0,f,c
   826  000812  2A42               	incf	(main@tempoTotal+1)^0,f,c
   827  000814  EF0C  F004         	goto	l1970
   828  000818                     l288:
   829  000818                     l1970:
   830                           
   831                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   832  000818  A043               	btfss	main@tecla^0,0,c
   833  00081A  EF11  F004         	goto	u1601
   834  00081E  EF13  F004         	goto	u1600
   835  000822                     u1601:
   836  000822  EF77  F003         	goto	l1920
   837  000826                     u1600:
   838  000826                     
   839                           ;main.c: 96:                 if (((tecla) & (1<<(0)))) {
   840  000826  A043               	btfss	main@tecla^0,0,c
   841  000828  EF18  F004         	goto	u1611
   842  00082C  EF1A  F004         	goto	u1610
   843  000830                     u1611:
   844  000830  EF12  F005         	goto	l2042
   845  000834                     u1610:
   846  000834                     
   847                           ;main.c: 97:                     lcdCommand(0x01);
   848  000834  0E01               	movlw	1
   849  000836  EC38  F009         	call	_lcdCommand
   850  00083A                     
   851                           ;main.c: 100:                     temperaturaMaxima = temperatura + 10;
   852  00083A  0E0A               	movlw	10
   853  00083C  243A               	addwf	main@temperatura^0,w,c
   854  00083E  6E2E               	movwf	main@temperaturaMaxima^0,c
   855  000840  0E00               	movlw	0
   856  000842  203B               	addwfc	(main@temperatura+1)^0,w,c
   857  000844  6E2F               	movwf	(main@temperaturaMaxima+1)^0,c
   858  000846                     
   859                           ;main.c: 101:                     temperaturaMinima = temperatura - 10;
   860  000846  0EF6               	movlw	246
   861  000848  243A               	addwf	main@temperatura^0,w,c
   862  00084A  6E30               	movwf	main@temperaturaMinima^0,c
   863  00084C  0EFF               	movlw	255
   864  00084E  203B               	addwfc	(main@temperatura+1)^0,w,c
   865  000850  6E31               	movwf	(main@temperaturaMinima+1)^0,c
   866                           
   867                           ;main.c: 104:                     pwmInit();
   868  000852  EC2E  F00B         	call	_pwmInit	;wreg free
   869  000856                     
   870                           ;main.c: 105:                     pwmSet1(30);
   871  000856  0E1E               	movlw	30
   872  000858  ECED  F009         	call	_pwmSet1
   873  00085C                     
   874                           ;main.c: 108:                     PORTB = 0xFF;
   875  00085C  6881               	setf	129,c	;volatile
   876                           
   877                           ;main.c: 111:                     while ((!((tecla) & (1<<(4))) && (tempoTotal > 0))) {
   878  00085E  EF02  F005         	goto	l2038
   879  000862                     l1982:
   880                           
   881                           ;main.c: 112:                         lcdCommand(0x01);
   882  000862  0E01               	movlw	1
   883  000864  EC38  F009         	call	_lcdCommand
   884                           
   885                           ;main.c: 114:                         lcdPosition(0, 2);
   886  000868  0E02               	movlw	2
   887  00086A  6E09               	movwf	lcdPosition@coluna^0,c
   888  00086C  0E00               	movlw	0
   889  00086E  ECD9  F00A         	call	_lcdPosition
   890  000872                     
   891                           ;main.c: 115:                         lcd_str("Funcionando!");
   892  000872  0E1E               	movlw	low STR_6
   893  000874  6E09               	movwf	lcd_str@str^0,c
   894  000876  0E06               	movlw	high STR_6
   895  000878  6E0A               	movwf	(lcd_str@str+1)^0,c
   896  00087A  ECB1  F00A         	call	_lcd_str	;wreg free
   897  00087E                     
   898                           ;main.c: 118:                         lcdPosition(1, 9);
   899  00087E  0E09               	movlw	9
   900  000880  6E09               	movwf	lcdPosition@coluna^0,c
   901  000882  0E01               	movlw	1
   902  000884  ECD9  F00A         	call	_lcdPosition
   903  000888                     
   904                           ;main.c: 119:                         itoa(tempoTotal, tempoRelogio);
   905  000888  C041  F015         	movff	main@tempoTotal,itoa@val
   906  00088C  C042  F016         	movff	main@tempoTotal+1,itoa@val+1
   907  000890  0E28               	movlw	low main@tempoRelogio
   908  000892  6E17               	movwf	itoa@str^0,c
   909  000894  0E00               	movlw	high main@tempoRelogio
   910  000896  6E18               	movwf	(itoa@str+1)^0,c
   911  000898  EC2B  F008         	call	_itoa	;wreg free
   912  00089C                     
   913                           ;main.c: 120:                         lcdData(tempoRelogio[2]);
   914  00089C  502A               	movf	(main@tempoRelogio+2)^0,w,c
   915  00089E  EC87  F00A         	call	_lcdData
   916  0008A2                     
   917                           ;main.c: 121:                         lcdData(tempoRelogio[3]);
   918  0008A2  502B               	movf	(main@tempoRelogio+3)^0,w,c
   919  0008A4  EC87  F00A         	call	_lcdData
   920  0008A8                     
   921                           ;main.c: 122:                         lcdData(tempoRelogio[4]);
   922  0008A8  502C               	movf	(main@tempoRelogio+4)^0,w,c
   923  0008AA  EC87  F00A         	call	_lcdData
   924  0008AE                     
   925                           ;main.c: 123:                         lcd_str("min");
   926  0008AE  0E3F               	movlw	low STR_5
   927  0008B0  6E09               	movwf	lcd_str@str^0,c
   928  0008B2  0E06               	movlw	high STR_5
   929  0008B4  6E0A               	movwf	(lcd_str@str+1)^0,c
   930  0008B6  ECB1  F00A         	call	_lcd_str	;wreg free
   931  0008BA                     
   932                           ;main.c: 124:                         tempoTotal--;
   933  0008BA  0641               	decf	main@tempoTotal^0,f,c
   934  0008BC  A0D8               	btfss	status,0,c
   935  0008BE  0642               	decf	(main@tempoTotal+1)^0,f,c
   936  0008C0                     
   937                           ;main.c: 127:                         tmpi = (adc_amostra(1)*10) / 2;
   938  0008C0  0E01               	movlw	1
   939  0008C2  ECAF  F008         	call	_adc_amostra
   940  0008C6  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   941  0008CA  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   942  0008CE  0E00               	movlw	0
   943  0008D0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   944  0008D2  0E0A               	movlw	10
   945  0008D4  6E0A               	movwf	___wmul@multiplicand^0,c
   946  0008D6  ECF6  F00A         	call	___wmul	;wreg free
   947  0008DA  90D8               	bcf	status,0,c
   948  0008DC  3009               	rrcf	(?___wmul+1)^0,w,c
   949  0008DE  6E26               	movwf	??_main^0,c
   950  0008E0  3008               	rrcf	?___wmul^0,w,c
   951  0008E2  6E32               	movwf	main@tmpi^0,c
   952  0008E4  C026  F033         	movff	??_main,main@tmpi+1
   953  0008E8                     
   954                           ;main.c: 128:                         temperaturaLcd = ((tmpi - 280) * 222 / 46) + 280;
   955  0008E8  0EE8               	movlw	232
   956  0008EA  2432               	addwf	main@tmpi^0,w,c
   957  0008EC  6E08               	movwf	___wmul@multiplier^0,c
   958  0008EE  0EFE               	movlw	254
   959  0008F0  2033               	addwfc	(main@tmpi+1)^0,w,c
   960  0008F2  6E09               	movwf	(___wmul@multiplier+1)^0,c
   961  0008F4  0E00               	movlw	0
   962  0008F6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   963  0008F8  0EDE               	movlw	222
   964  0008FA  6E0A               	movwf	___wmul@multiplicand^0,c
   965  0008FC  ECF6  F00A         	call	___wmul	;wreg free
   966  000900  C008  F00E         	movff	?___wmul,___lwdiv@dividend
   967  000904  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
   968  000908  0E00               	movlw	0
   969  00090A  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   970  00090C  0E2E               	movlw	46
   971  00090E  6E10               	movwf	___lwdiv@divisor^0,c
   972  000910  ECB3  F009         	call	___lwdiv	;wreg free
   973  000914  0E18               	movlw	24
   974  000916  240E               	addwf	?___lwdiv^0,w,c
   975  000918  6E3F               	movwf	main@temperaturaLcd^0,c
   976  00091A  0E01               	movlw	1
   977  00091C  200F               	addwfc	(?___lwdiv+1)^0,w,c
   978  00091E  6E40               	movwf	(main@temperaturaLcd+1)^0,c
   979  000920                     
   980                           ;main.c: 131:                         lcdPosition(1, 1);
   981  000920  0E01               	movlw	1
   982  000922  6E09               	movwf	lcdPosition@coluna^0,c
   983  000924  0E01               	movlw	1
   984  000926  ECD9  F00A         	call	_lcdPosition
   985  00092A                     
   986                           ;main.c: 132:                         itoa(temperaturaLcd, str);
   987  00092A  C03F  F015         	movff	main@temperaturaLcd,itoa@val
   988  00092E  C040  F016         	movff	main@temperaturaLcd+1,itoa@val+1
   989  000932  0E34               	movlw	low main@str
   990  000934  6E17               	movwf	itoa@str^0,c
   991  000936  0E00               	movlw	high main@str
   992  000938  6E18               	movwf	(itoa@str+1)^0,c
   993  00093A  EC2B  F008         	call	_itoa	;wreg free
   994  00093E                     
   995                           ;main.c: 133:                         lcdData(str[1]);
   996  00093E  5035               	movf	(main@str+1)^0,w,c
   997  000940  EC87  F00A         	call	_lcdData
   998  000944                     
   999                           ;main.c: 134:                         lcdData(str[2]);
  1000  000944  5036               	movf	(main@str+2)^0,w,c
  1001  000946  EC87  F00A         	call	_lcdData
  1002  00094A                     
  1003                           ;main.c: 135:                         lcdData(str[3]);
  1004  00094A  5037               	movf	(main@str+3)^0,w,c
  1005  00094C  EC87  F00A         	call	_lcdData
  1006  000950                     
  1007                           ;main.c: 136:                         lcdData(',');
  1008  000950  0E2C               	movlw	44
  1009  000952  EC87  F00A         	call	_lcdData
  1010  000956                     
  1011                           ;main.c: 137:                         lcdData(str[4]);
  1012  000956  5038               	movf	(main@str+4)^0,w,c
  1013  000958  EC87  F00A         	call	_lcdData
  1014  00095C                     
  1015                           ;main.c: 138:                         lcd_str("C");
  1016  00095C  0E43               	movlw	low STR_8
  1017  00095E  6E09               	movwf	lcd_str@str^0,c
  1018  000960  0E06               	movlw	high STR_8
  1019  000962  6E0A               	movwf	(lcd_str@str+1)^0,c
  1020  000964  ECB1  F00A         	call	_lcd_str	;wreg free
  1021  000968                     
  1022                           ;main.c: 140:                         atraso_ms(1000);
  1023  000968  0E03               	movlw	3
  1024  00096A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1025  00096C  0EE8               	movlw	232
  1026  00096E  6E01               	movwf	atraso_ms@t^0,c
  1027  000970  EC55  F00A         	call	_atraso_ms	;wreg free
  1028  000974                     
  1029                           ;main.c: 143:                         if (temperaturaLcd > temperaturaMaxima * 10) {
  1030  000974  C02E  F008         	movff	main@temperaturaMaxima,___wmul@multiplier
  1031  000978  C02F  F009         	movff	main@temperaturaMaxima+1,___wmul@multiplier+1
  1032  00097C  0E00               	movlw	0
  1033  00097E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1034  000980  0E0A               	movlw	10
  1035  000982  6E0A               	movwf	___wmul@multiplicand^0,c
  1036  000984  ECF6  F00A         	call	___wmul	;wreg free
  1037  000988  503F               	movf	main@temperaturaLcd^0,w,c
  1038  00098A  5C08               	subwf	?___wmul^0,w,c
  1039  00098C  5040               	movf	(main@temperaturaLcd+1)^0,w,c
  1040  00098E  5809               	subwfb	(?___wmul+1)^0,w,c
  1041  000990  B0D8               	btfsc	status,0,c
  1042  000992  EFCD  F004         	goto	u1621
  1043  000996  EFCF  F004         	goto	u1620
  1044  00099A                     u1621:
  1045  00099A  EFD6  F004         	goto	l2028
  1046  00099E                     u1620:
  1047  00099E                     
  1048                           ;main.c: 144:                             atraso_ms(100);
  1049  00099E  0E00               	movlw	0
  1050  0009A0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1051  0009A2  0E64               	movlw	100
  1052  0009A4  6E01               	movwf	atraso_ms@t^0,c
  1053  0009A6  EC55  F00A         	call	_atraso_ms	;wreg free
  1054  0009AA                     
  1055                           ;main.c: 145:                             PORTCbits.RC5 = 0;
  1056  0009AA  9A82               	bcf	130,5,c	;volatile
  1057  0009AC                     l2028:
  1058                           
  1059                           ;main.c: 147:                         if (temperaturaLcd < temperaturaMinima * 10) {
  1060  0009AC  C030  F008         	movff	main@temperaturaMinima,___wmul@multiplier
  1061  0009B0  C031  F009         	movff	main@temperaturaMinima+1,___wmul@multiplier+1
  1062  0009B4  0E00               	movlw	0
  1063  0009B6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1064  0009B8  0E0A               	movlw	10
  1065  0009BA  6E0A               	movwf	___wmul@multiplicand^0,c
  1066  0009BC  ECF6  F00A         	call	___wmul	;wreg free
  1067  0009C0  5008               	movf	?___wmul^0,w,c
  1068  0009C2  5C3F               	subwf	main@temperaturaLcd^0,w,c
  1069  0009C4  5009               	movf	(?___wmul+1)^0,w,c
  1070  0009C6  5840               	subwfb	(main@temperaturaLcd+1)^0,w,c
  1071  0009C8  B0D8               	btfsc	status,0,c
  1072  0009CA  EFE9  F004         	goto	u1631
  1073  0009CE  EFEB  F004         	goto	u1630
  1074  0009D2                     u1631:
  1075  0009D2  EFEC  F004         	goto	l2032
  1076  0009D6                     u1630:
  1077  0009D6                     
  1078                           ;main.c: 148:                             PORTCbits.RC5 = 1;
  1079  0009D6  8A82               	bsf	130,5,c	;volatile
  1080  0009D8                     l2032:
  1081                           
  1082                           ;main.c: 152:                         kpDebounce();
  1083  0009D8  EC6E  F007         	call	_kpDebounce	;wreg free
  1084  0009DC                     
  1085                           ;main.c: 153:                         if (kpRead() != tecla) {
  1086  0009DC  EC38  F00B         	call	_kpRead	;wreg free
  1087  0009E0  5043               	movf	main@tecla^0,w,c
  1088  0009E2  1801               	xorwf	?_kpRead^0,w,c
  1089  0009E4  E109               	bnz	u1640
  1090  0009E6  5044               	movf	(main@tecla+1)^0,w,c
  1091  0009E8  1802               	xorwf	(?_kpRead+1)^0,w,c
  1092  0009EA  B4D8               	btfsc	status,2,c
  1093  0009EC  EFFA  F004         	goto	u1641
  1094  0009F0  EFFC  F004         	goto	u1640
  1095  0009F4                     u1641:
  1096  0009F4  EF02  F005         	goto	l2038
  1097  0009F8                     u1640:
  1098  0009F8                     
  1099                           ;main.c: 154:                             tecla = kpRead();
  1100  0009F8  EC38  F00B         	call	_kpRead	;wreg free
  1101  0009FC  C001  F043         	movff	?_kpRead,main@tecla
  1102  000A00  C002  F044         	movff	?_kpRead+1,main@tecla+1
  1103  000A04                     l2038:
  1104                           
  1105                           ;main.c: 111:                     while ((!((tecla) & (1<<(4))) && (tempoTotal > 0))) {
  1106  000A04  B843               	btfsc	main@tecla^0,4,c
  1107  000A06  EF07  F005         	goto	u1651
  1108  000A0A  EF09  F005         	goto	u1650
  1109  000A0E                     u1651:
  1110  000A0E  EF12  F005         	goto	l2042
  1111  000A12                     u1650:
  1112  000A12  5041               	movf	main@tempoTotal^0,w,c
  1113  000A14  1042               	iorwf	(main@tempoTotal+1)^0,w,c
  1114  000A16  A4D8               	btfss	status,2,c
  1115  000A18  EF10  F005         	goto	u1661
  1116  000A1C  EF12  F005         	goto	u1660
  1117  000A20                     u1661:
  1118  000A20  EF31  F004         	goto	l1982
  1119  000A24                     u1660:
  1120  000A24                     l2042:
  1121                           
  1122                           ;main.c: 159:                 lcdCommand(0x01);
  1123  000A24  0E01               	movlw	1
  1124  000A26  EC38  F009         	call	_lcdCommand
  1125  000A2A                     
  1126                           ;main.c: 160:                 PORTB = 0x00;
  1127  000A2A  0E00               	movlw	0
  1128  000A2C  6E81               	movwf	129,c	;volatile
  1129  000A2E                     
  1130                           ;main.c: 161:                 PORTCbits.RC5 = 0;
  1131  000A2E  9A82               	bcf	130,5,c	;volatile
  1132  000A30                     
  1133                           ;main.c: 162:                 TRISCbits.TRISC0 = 0;
  1134  000A30  9094               	bcf	148,0,c	;volatile
  1135  000A32                     
  1136                           ;main.c: 163:                 pwmSet1(0);
  1137  000A32  0E00               	movlw	0
  1138  000A34  ECED  F009         	call	_pwmSet1
  1139  000A38  EF3F  F003         	goto	l1902
  1140  000A3C  EF00  F000         	goto	start
  1141  000A40                     __end_of_main:
  1142                           	callstack 0
  1143                           
  1144 ;; *************** function _setTemperature *****************
  1145 ;; Defined at:
  1146 ;;		line 7 in file "temperaturaForno.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;  str             6   28[COMRAM] unsigned char [6]
  1151 ;;  temperatura     2   35[COMRAM] int 
  1152 ;;  i               2    0        int 
  1153 ;;  tmp             1   34[COMRAM] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2   24[COMRAM] int 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1163 ;;      Params:         2       0       0       0       0       0       0
  1164 ;;      Locals:         9       0       0       0       0       0       0
  1165 ;;      Temps:          2       0       0       0       0       0       0
  1166 ;;      Totals:        13       0       0       0       0       0       0
  1167 ;;Total ram usage:       13 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 4
  1170 ;; This function calls:
  1171 ;;		___lwdiv
  1172 ;;		___wmul
  1173 ;;		_adc_amostra
  1174 ;;		_itoa
  1175 ;;		_lcdData
  1176 ;;		_lcdPosition
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text1
  1183  0011EE                     __ptext1:
  1184                           	callstack 0
  1185  0011EE                     _setTemperature:
  1186                           	callstack 26
  1187  0011EE                     
  1188                           ;temperaturaForno.c: 8:     char str[6];;temperaturaForno.c: 9:     unsigned char tmp;;t
      +                          emperaturaForno.c: 10:     int i, temperatura;;temperaturaForno.c: 12:     tmp = (adc_am
      +                          ostra(0)*10) / 204;
  1189  0011EE  0E00               	movlw	0
  1190  0011F0  ECAF  F008         	call	_adc_amostra
  1191  0011F4  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
  1192  0011F8  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
  1193  0011FC  0E00               	movlw	0
  1194  0011FE  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1195  001200  0E0A               	movlw	10
  1196  001202  6E0A               	movwf	___wmul@multiplicand^0,c
  1197  001204  ECF6  F00A         	call	___wmul	;wreg free
  1198  001208  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1199  00120C  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1200  001210  0E00               	movlw	0
  1201  001212  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1202  001214  0ECC               	movlw	204
  1203  001216  6E10               	movwf	___lwdiv@divisor^0,c
  1204  001218  ECB3  F009         	call	___lwdiv	;wreg free
  1205  00121C  500E               	movf	?___lwdiv^0,w,c
  1206  00121E  6E23               	movwf	setTemperature@tmp^0,c
  1207  001220                     
  1208                           ;temperaturaForno.c: 13:     temperatura = (((int) tmp) * 4) + 50;
  1209  001220  5023               	movf	setTemperature@tmp^0,w,c
  1210  001222  0D04               	mullw	4
  1211  001224  CFF3 F01B          	movff	prodl,??_setTemperature
  1212  001228  CFF4 F01C          	movff	prodh,??_setTemperature+1
  1213  00122C  0E32               	movlw	50
  1214  00122E  241B               	addwf	??_setTemperature^0,w,c
  1215  001230  6E24               	movwf	setTemperature@temperatura^0,c
  1216  001232  0E00               	movlw	0
  1217  001234  201C               	addwfc	(??_setTemperature+1)^0,w,c
  1218  001236  6E25               	movwf	(setTemperature@temperatura+1)^0,c
  1219  001238                     
  1220                           ;temperaturaForno.c: 15:     itoa((char) temperatura, str);
  1221  001238  C024  F015         	movff	setTemperature@temperatura,itoa@val
  1222  00123C  6A16               	clrf	(itoa@val+1)^0,c
  1223  00123E  0E1D               	movlw	low setTemperature@str
  1224  001240  6E17               	movwf	itoa@str^0,c
  1225  001242  0E00               	movlw	high setTemperature@str
  1226  001244  6E18               	movwf	(itoa@str+1)^0,c
  1227  001246  EC2B  F008         	call	_itoa	;wreg free
  1228  00124A                     
  1229                           ;temperaturaForno.c: 17:     lcdPosition(0, 12);
  1230  00124A  0E0C               	movlw	12
  1231  00124C  6E09               	movwf	lcdPosition@coluna^0,c
  1232  00124E  0E00               	movlw	0
  1233  001250  ECD9  F00A         	call	_lcdPosition
  1234  001254                     
  1235                           ;temperaturaForno.c: 18:     lcdData(str[2]);
  1236  001254  501F               	movf	(setTemperature@str+2)^0,w,c
  1237  001256  EC87  F00A         	call	_lcdData
  1238  00125A                     
  1239                           ;temperaturaForno.c: 19:     lcdData(str[3]);
  1240  00125A  5020               	movf	(setTemperature@str+3)^0,w,c
  1241  00125C  EC87  F00A         	call	_lcdData
  1242  001260                     
  1243                           ;temperaturaForno.c: 20:     lcdData(str[4]);
  1244  001260  5021               	movf	(setTemperature@str+4)^0,w,c
  1245  001262  EC87  F00A         	call	_lcdData
  1246  001266                     
  1247                           ;temperaturaForno.c: 22:     return temperatura;
  1248  001266  C024  F019         	movff	setTemperature@temperatura,?_setTemperature
  1249  00126A  C025  F01A         	movff	setTemperature@temperatura+1,?_setTemperature+1
  1250  00126E  0012               	return		;funcret
  1251  001270                     __end_of_setTemperature:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _lcdPosition *****************
  1255 ;; Defined at:
  1256 ;;		line 118 in file "lcd.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  linha           1    wreg     unsigned char 
  1259 ;;  coluna          1    8[COMRAM] unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  linha           1   10[COMRAM] unsigned char 
  1262 ;;  comando         1    9[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1272 ;;      Params:         1       0       0       0       0       0       0
  1273 ;;      Locals:         2       0       0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0
  1275 ;;      Totals:         3       0       0       0       0       0       0
  1276 ;;Total ram usage:        3 bytes
  1277 ;; Hardware stack levels used: 1
  1278 ;; Hardware stack levels required when called: 3
  1279 ;; This function calls:
  1280 ;;		_lcdCommand
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;;		_setTemperature
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text2
  1288  0015B2                     __ptext2:
  1289                           	callstack 0
  1290  0015B2                     _lcdPosition:
  1291                           	callstack 26
  1292                           
  1293                           ;incstack = 0
  1294                           ;lcdPosition@linha stored from wreg
  1295  0015B2  6E0B               	movwf	lcdPosition@linha^0,c
  1296  0015B4                     
  1297                           ;lcd.c: 119:     char comando = 0;
  1298  0015B4  0E00               	movlw	0
  1299  0015B6  6E0A               	movwf	lcdPosition@comando^0,c
  1300  0015B8                     
  1301                           ;lcd.c: 121:     if(linha == 0) comando = 0x80 + coluna;
  1302  0015B8  500B               	movf	lcdPosition@linha^0,w,c
  1303  0015BA  A4D8               	btfss	status,2,c
  1304  0015BC  EFE2  F00A         	goto	u1431
  1305  0015C0  EFE4  F00A         	goto	u1430
  1306  0015C4                     u1431:
  1307  0015C4  EFE7  F00A         	goto	l146
  1308  0015C8                     u1430:
  1309  0015C8  5009               	movf	lcdPosition@coluna^0,w,c
  1310  0015CA  0F80               	addlw	128
  1311  0015CC  6E0A               	movwf	lcdPosition@comando^0,c
  1312  0015CE                     l146:
  1313                           
  1314                           ;lcd.c: 122:     if(linha == 1) comando = 0xC0 + coluna;
  1315  0015CE  040B               	decf	lcdPosition@linha^0,w,c
  1316  0015D0  A4D8               	btfss	status,2,c
  1317  0015D2  EFED  F00A         	goto	u1441
  1318  0015D6  EFEF  F00A         	goto	u1440
  1319  0015DA                     u1441:
  1320  0015DA  EFF2  F00A         	goto	l1756
  1321  0015DE                     u1440:
  1322  0015DE  5009               	movf	lcdPosition@coluna^0,w,c
  1323  0015E0  0FC0               	addlw	192
  1324  0015E2  6E0A               	movwf	lcdPosition@comando^0,c
  1325  0015E4                     l1756:
  1326                           
  1327                           ;lcd.c: 124:     lcdCommand(comando);
  1328  0015E4  500A               	movf	lcdPosition@comando^0,w,c
  1329  0015E6  EC38  F009         	call	_lcdCommand
  1330  0015EA  0012               	return		;funcret
  1331  0015EC                     __end_of_lcdPosition:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _itoa *****************
  1335 ;; Defined at:
  1336 ;;		line 26 in file "itoa.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  val             2   20[COMRAM] unsigned int 
  1339 ;;  str             2   22[COMRAM] PTR unsigned char 
  1340 ;;		 -> setTemperature@str(6), main@str(6), main@tempoRelogio(6), 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1352 ;;      Params:         4       0       0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0
  1355 ;;      Totals:         4       0       0       0       0       0       0
  1356 ;;Total ram usage:        4 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; Hardware stack levels required when called: 1
  1359 ;; This function calls:
  1360 ;;		___lwdiv
  1361 ;;		___lwmod
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;;		_setTemperature
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text3
  1369  001056                     __ptext3:
  1370                           	callstack 0
  1371  001056                     _itoa:
  1372                           	callstack 28
  1373  001056                     
  1374                           ;itoa.c: 26: void itoa(unsigned int val, char* str );itoa.c: 27: {;itoa.c: 28:   str[0]=
      +                          (val/10000)+0x30;
  1375  001056  C015  F00E         	movff	itoa@val,___lwdiv@dividend
  1376  00105A  C016  F00F         	movff	itoa@val+1,___lwdiv@dividend+1
  1377  00105E  0E27               	movlw	39
  1378  001060  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1379  001062  0E10               	movlw	16
  1380  001064  6E10               	movwf	___lwdiv@divisor^0,c
  1381  001066  ECB3  F009         	call	___lwdiv	;wreg free
  1382  00106A  500E               	movf	?___lwdiv^0,w,c
  1383  00106C  0F30               	addlw	48
  1384  00106E  C017  FFD9         	movff	itoa@str,fsr2l
  1385  001072  C018  FFDA         	movff	itoa@str+1,fsr2h
  1386  001076  6EDF               	movwf	indf2,c
  1387                           
  1388                           ;itoa.c: 29:   str[1]=((val%10000)/1000)+0x30;
  1389  001078  EE20 F001          	lfsr	2,1
  1390  00107C  5017               	movf	itoa@str^0,w,c
  1391  00107E  26D9               	addwf	fsr2l,f,c
  1392  001080  5018               	movf	(itoa@str+1)^0,w,c
  1393  001082  22DA               	addwfc	fsr2h,f,c
  1394  001084  0E27               	movlw	39
  1395  001086  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1396  001088  0E10               	movlw	16
  1397  00108A  6E03               	movwf	___lwmod@divisor^0,c
  1398  00108C  C015  F001         	movff	itoa@val,___lwmod@dividend
  1399  001090  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1400  001094  EC23  F00A         	call	___lwmod	;wreg free
  1401  001098  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1402  00109C  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1403  0010A0  0E03               	movlw	3
  1404  0010A2  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1405  0010A4  0EE8               	movlw	232
  1406  0010A6  6E10               	movwf	___lwdiv@divisor^0,c
  1407  0010A8  ECB3  F009         	call	___lwdiv	;wreg free
  1408  0010AC  500E               	movf	?___lwdiv^0,w,c
  1409  0010AE  0F30               	addlw	48
  1410  0010B0  6EDF               	movwf	indf2,c
  1411                           
  1412                           ;itoa.c: 30:   str[2]=((val%1000)/100)+0x30;
  1413  0010B2  EE20 F002          	lfsr	2,2
  1414  0010B6  5017               	movf	itoa@str^0,w,c
  1415  0010B8  26D9               	addwf	fsr2l,f,c
  1416  0010BA  5018               	movf	(itoa@str+1)^0,w,c
  1417  0010BC  22DA               	addwfc	fsr2h,f,c
  1418  0010BE  0E03               	movlw	3
  1419  0010C0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1420  0010C2  0EE8               	movlw	232
  1421  0010C4  6E03               	movwf	___lwmod@divisor^0,c
  1422  0010C6  C015  F001         	movff	itoa@val,___lwmod@dividend
  1423  0010CA  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1424  0010CE  EC23  F00A         	call	___lwmod	;wreg free
  1425  0010D2  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1426  0010D6  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1427  0010DA  0E00               	movlw	0
  1428  0010DC  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1429  0010DE  0E64               	movlw	100
  1430  0010E0  6E10               	movwf	___lwdiv@divisor^0,c
  1431  0010E2  ECB3  F009         	call	___lwdiv	;wreg free
  1432  0010E6  500E               	movf	?___lwdiv^0,w,c
  1433  0010E8  0F30               	addlw	48
  1434  0010EA  6EDF               	movwf	indf2,c
  1435                           
  1436                           ;itoa.c: 31:   str[3]=((val%100)/10)+0x30;
  1437  0010EC  EE20 F003          	lfsr	2,3
  1438  0010F0  5017               	movf	itoa@str^0,w,c
  1439  0010F2  26D9               	addwf	fsr2l,f,c
  1440  0010F4  5018               	movf	(itoa@str+1)^0,w,c
  1441  0010F6  22DA               	addwfc	fsr2h,f,c
  1442  0010F8  0E00               	movlw	0
  1443  0010FA  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1444  0010FC  0E64               	movlw	100
  1445  0010FE  6E03               	movwf	___lwmod@divisor^0,c
  1446  001100  C015  F001         	movff	itoa@val,___lwmod@dividend
  1447  001104  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1448  001108  EC23  F00A         	call	___lwmod	;wreg free
  1449  00110C  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1450  001110  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1451  001114  0E00               	movlw	0
  1452  001116  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1453  001118  0E0A               	movlw	10
  1454  00111A  6E10               	movwf	___lwdiv@divisor^0,c
  1455  00111C  ECB3  F009         	call	___lwdiv	;wreg free
  1456  001120  500E               	movf	?___lwdiv^0,w,c
  1457  001122  0F30               	addlw	48
  1458  001124  6EDF               	movwf	indf2,c
  1459                           
  1460                           ;itoa.c: 32:   str[4]=(val%10)+0x30;
  1461  001126  EE20 F004          	lfsr	2,4
  1462  00112A  5017               	movf	itoa@str^0,w,c
  1463  00112C  26D9               	addwf	fsr2l,f,c
  1464  00112E  5018               	movf	(itoa@str+1)^0,w,c
  1465  001130  22DA               	addwfc	fsr2h,f,c
  1466  001132  C015  F001         	movff	itoa@val,___lwmod@dividend
  1467  001136  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1468  00113A  0E00               	movlw	0
  1469  00113C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1470  00113E  0E0A               	movlw	10
  1471  001140  6E03               	movwf	___lwmod@divisor^0,c
  1472  001142  EC23  F00A         	call	___lwmod	;wreg free
  1473  001146  5001               	movf	?___lwmod^0,w,c
  1474  001148  0F30               	addlw	48
  1475  00114A  6EDF               	movwf	indf2,c
  1476  00114C                     
  1477                           ;itoa.c: 33:   str[5]=0;
  1478  00114C  EE20 F005          	lfsr	2,5
  1479  001150  5017               	movf	itoa@str^0,w,c
  1480  001152  26D9               	addwf	fsr2l,f,c
  1481  001154  5018               	movf	(itoa@str+1)^0,w,c
  1482  001156  22DA               	addwfc	fsr2h,f,c
  1483  001158  0E00               	movlw	0
  1484  00115A  6EDF               	movwf	indf2,c
  1485  00115C  0012               	return		;funcret
  1486  00115E                     __end_of_itoa:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function ___lwmod *****************
  1490 ;; Defined at:
  1491 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  dividend        2    0[COMRAM] unsigned int 
  1494 ;;  divisor         2    2[COMRAM] unsigned int 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  counter         1    4[COMRAM] unsigned char 
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  2    0[COMRAM] unsigned int 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2, status,0
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1506 ;;      Params:         4       0       0       0       0       0       0
  1507 ;;      Locals:         1       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0
  1509 ;;      Totals:         5       0       0       0       0       0       0
  1510 ;;Total ram usage:        5 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; This function calls:
  1513 ;;		Nothing
  1514 ;; This function is called by:
  1515 ;;		_itoa
  1516 ;; This function uses a non-reentrant model
  1517 ;;
  1518                           
  1519                           	psect	text4
  1520  001446                     __ptext4:
  1521                           	callstack 0
  1522  001446                     ___lwmod:
  1523                           	callstack 28
  1524  001446  5003               	movf	___lwmod@divisor^0,w,c
  1525  001448  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1526  00144A  B4D8               	btfsc	status,2,c
  1527  00144C  EF2A  F00A         	goto	u1201
  1528  001450  EF2C  F00A         	goto	u1200
  1529  001454                     u1201:
  1530  001454  EF50  F00A         	goto	l826
  1531  001458                     u1200:
  1532  001458  0E01               	movlw	1
  1533  00145A  6E05               	movwf	___lwmod@counter^0,c
  1534  00145C  EF34  F00A         	goto	l1682
  1535  001460                     l1680:
  1536  001460  90D8               	bcf	status,0,c
  1537  001462  3603               	rlcf	___lwmod@divisor^0,f,c
  1538  001464  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1539  001466  2A05               	incf	___lwmod@counter^0,f,c
  1540  001468                     l1682:
  1541  001468  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1542  00146A  EF39  F00A         	goto	u1211
  1543  00146E  EF3B  F00A         	goto	u1210
  1544  001472                     u1211:
  1545  001472  EF30  F00A         	goto	l1680
  1546  001476                     u1210:
  1547  001476                     l1684:
  1548  001476  5003               	movf	___lwmod@divisor^0,w,c
  1549  001478  5C01               	subwf	___lwmod@dividend^0,w,c
  1550  00147A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1551  00147C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1552  00147E  A0D8               	btfss	status,0,c
  1553  001480  EF44  F00A         	goto	u1221
  1554  001484  EF46  F00A         	goto	u1220
  1555  001488                     u1221:
  1556  001488  EF4A  F00A         	goto	l1688
  1557  00148C                     u1220:
  1558  00148C  5003               	movf	___lwmod@divisor^0,w,c
  1559  00148E  5E01               	subwf	___lwmod@dividend^0,f,c
  1560  001490  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1561  001492  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1562  001494                     l1688:
  1563  001494  90D8               	bcf	status,0,c
  1564  001496  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1565  001498  3203               	rrcf	___lwmod@divisor^0,f,c
  1566  00149A  2E05               	decfsz	___lwmod@counter^0,f,c
  1567  00149C  EF3B  F00A         	goto	l1684
  1568  0014A0                     l826:
  1569  0014A0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1570  0014A4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1571  0014A8  0012               	return		;funcret
  1572  0014AA                     __end_of___lwmod:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _adc_amostra *****************
  1576 ;; Defined at:
  1577 ;;		line 44 in file "adc.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;  canal           1    wreg     unsigned char 
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;  canal           1    6[COMRAM] unsigned char 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2    0[COMRAM] unsigned int 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1591 ;;      Params:         2       0       0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0       0       0
  1593 ;;      Temps:          4       0       0       0       0       0       0
  1594 ;;      Totals:         7       0       0       0       0       0       0
  1595 ;;Total ram usage:        7 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;;		_setTemperature
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text5
  1606  00115E                     __ptext5:
  1607                           	callstack 0
  1608  00115E                     _adc_amostra:
  1609                           	callstack 29
  1610                           
  1611                           ;incstack = 0
  1612                           ;adc_amostra@canal stored from wreg
  1613  00115E  6E07               	movwf	adc_amostra@canal^0,c
  1614  001160                     
  1615                           ;adc.c: 44: unsigned int adc_amostra(unsigned char canal);adc.c: 45: {;adc.c: 62:      s
      +                          witch(canal)
  1616  001160  EFBE  F008         	goto	l1768
  1617  001164                     l1760:
  1618                           
  1619                           ;adc.c: 65:         ADCON0=0x01;
  1620  001164  0E01               	movlw	1
  1621  001166  6EC2               	movwf	194,c	;volatile
  1622                           
  1623                           ;adc.c: 66:         break;
  1624  001168  EFD7  F008         	goto	l184
  1625  00116C                     l1762:
  1626                           
  1627                           ;adc.c: 68:         ADCON0=0x09;
  1628  00116C  0E09               	movlw	9
  1629  00116E  6EC2               	movwf	194,c	;volatile
  1630                           
  1631                           ;adc.c: 69:         break;
  1632  001170  EFD7  F008         	goto	l184
  1633  001174                     l1764:
  1634                           
  1635                           ;adc.c: 71:         ADCON0=0x11;
  1636  001174  0E11               	movlw	17
  1637  001176  6EC2               	movwf	194,c	;volatile
  1638                           
  1639                           ;adc.c: 72:         break;
  1640  001178  EFD7  F008         	goto	l184
  1641  00117C                     l1768:
  1642  00117C  5007               	movf	adc_amostra@canal^0,w,c
  1643  00117E  6E03               	movwf	??_adc_amostra^0,c
  1644  001180  6A04               	clrf	(??_adc_amostra+1)^0,c
  1645                           
  1646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1647                           ; Switch size 1, requested type "simple"
  1648                           ; Number of cases is 1, Range of values is 0 to 0
  1649                           ; switch strategies available:
  1650                           ; Name         Instructions Cycles
  1651                           ; simple_byte            4     3 (average)
  1652                           ;	Chosen strategy is simple_byte
  1653  001182  5004               	movf	(??_adc_amostra+1)^0,w,c
  1654  001184  0A00               	xorlw	0	; case 0
  1655  001186  B4D8               	btfsc	status,2,c
  1656  001188  EFC8  F008         	goto	l2056
  1657  00118C  EFD7  F008         	goto	l184
  1658  001190                     l2056:
  1659                           
  1660                           ; Switch size 1, requested type "simple"
  1661                           ; Number of cases is 3, Range of values is 0 to 2
  1662                           ; switch strategies available:
  1663                           ; Name         Instructions Cycles
  1664                           ; simple_byte           10     6 (average)
  1665                           ;	Chosen strategy is simple_byte
  1666  001190  5003               	movf	??_adc_amostra^0,w,c
  1667  001192  0A00               	xorlw	0	; case 0
  1668  001194  B4D8               	btfsc	status,2,c
  1669  001196  EFB2  F008         	goto	l1760
  1670  00119A  0A01               	xorlw	1	; case 1
  1671  00119C  B4D8               	btfsc	status,2,c
  1672  00119E  EFB6  F008         	goto	l1762
  1673  0011A2  0A03               	xorlw	3	; case 2
  1674  0011A4  B4D8               	btfsc	status,2,c
  1675  0011A6  EFBA  F008         	goto	l1764
  1676  0011AA  EFD7  F008         	goto	l184
  1677  0011AE                     l184:
  1678                           
  1679                           ;adc.c: 77:     ADCON0bits.GO=1;
  1680  0011AE  82C2               	bsf	194,1,c	;volatile
  1681  0011B0                     l187:
  1682  0011B0  B2C2               	btfsc	194,1,c	;volatile
  1683  0011B2  EFDD  F008         	goto	u1451
  1684  0011B6  EFDF  F008         	goto	u1450
  1685  0011BA                     u1451:
  1686  0011BA  EFD8  F008         	goto	l187
  1687  0011BE                     u1450:
  1688  0011BE                     
  1689                           ;adc.c: 80:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1690  0011BE  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1691  0011C2  0E06               	movlw	6
  1692  0011C4  6E04               	movwf	(??_adc_amostra+1)^0,c
  1693  0011C6                     u1465:
  1694  0011C6  90D8               	bcf	status,0,c
  1695  0011C8  3203               	rrcf	??_adc_amostra^0,f,c
  1696  0011CA  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1697  0011CC  EFE3  F008         	goto	u1465
  1698  0011D0  5003               	movf	??_adc_amostra^0,w,c
  1699  0011D2  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1700  0011D6  6A06               	clrf	(??_adc_amostra+3)^0,c
  1701  0011D8  90D8               	bcf	status,0,c
  1702  0011DA  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1703  0011DC  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1704  0011DE  90D8               	bcf	status,0,c
  1705  0011E0  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1706  0011E2  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1707  0011E4  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1708  0011E6  6E01               	movwf	?_adc_amostra^0,c
  1709  0011E8  5006               	movf	(??_adc_amostra+3)^0,w,c
  1710  0011EA  6E02               	movwf	(?_adc_amostra+1)^0,c
  1711  0011EC  0012               	return		;funcret
  1712  0011EE                     __end_of_adc_amostra:
  1713                           	callstack 0
  1714                           
  1715 ;; *************** function _pwmSet1 *****************
  1716 ;; Defined at:
  1717 ;;		line 24 in file "pwm.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  porcento        1    wreg     unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  porcento        1   22[COMRAM] unsigned char 
  1722 ;;  val             2   23[COMRAM] unsigned int 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1732 ;;      Params:         0       0       0       0       0       0       0
  1733 ;;      Locals:         3       0       0       0       0       0       0
  1734 ;;      Temps:          2       0       0       0       0       0       0
  1735 ;;      Totals:         5       0       0       0       0       0       0
  1736 ;;Total ram usage:        5 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 1
  1739 ;; This function calls:
  1740 ;;		___lwdiv
  1741 ;;		___wmul
  1742 ;; This function is called by:
  1743 ;;		_main
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text6
  1748  0013DA                     __ptext6:
  1749                           	callstack 0
  1750  0013DA                     _pwmSet1:
  1751                           	callstack 29
  1752                           
  1753                           ;incstack = 0
  1754                           ;pwmSet1@porcento stored from wreg
  1755  0013DA  6E17               	movwf	pwmSet1@porcento^0,c
  1756  0013DC                     
  1757                           ;pwm.c: 24: void pwmSet1(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int v
      +                          al = ((unsigned int)porcento) *(PR2+1);
  1758  0013DC  0E01               	movlw	1
  1759  0013DE  24CB               	addwf	203,w,c	;volatile
  1760  0013E0  6E08               	movwf	___wmul@multiplier^0,c
  1761  0013E2  6A09               	clrf	(___wmul@multiplier+1)^0,c
  1762  0013E4  0E00               	movlw	0
  1763  0013E6  2209               	addwfc	(___wmul@multiplier+1)^0,f,c
  1764  0013E8  C017  F00A         	movff	pwmSet1@porcento,___wmul@multiplicand
  1765  0013EC  6A0B               	clrf	(___wmul@multiplicand+1)^0,c
  1766  0013EE  ECF6  F00A         	call	___wmul	;wreg free
  1767  0013F2  C008  F018         	movff	?___wmul,pwmSet1@val
  1768  0013F6  C009  F019         	movff	?___wmul+1,pwmSet1@val+1
  1769  0013FA                     
  1770                           ;pwm.c: 32:  val = val / 25;
  1771  0013FA  C018  F00E         	movff	pwmSet1@val,___lwdiv@dividend
  1772  0013FE  C019  F00F         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1773  001402  0E00               	movlw	0
  1774  001404  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1775  001406  0E19               	movlw	25
  1776  001408  6E10               	movwf	___lwdiv@divisor^0,c
  1777  00140A  ECB3  F009         	call	___lwdiv	;wreg free
  1778  00140E  C00E  F018         	movff	?___lwdiv,pwmSet1@val
  1779  001412  C00F  F019         	movff	?___lwdiv+1,pwmSet1@val+1
  1780  001416                     
  1781                           ;pwm.c: 34:  val &= 0x03ff;
  1782  001416  0EFF               	movlw	255
  1783  001418  1618               	andwf	pwmSet1@val^0,f,c
  1784  00141A  0E03               	movlw	3
  1785  00141C  1619               	andwf	(pwmSet1@val+1)^0,f,c
  1786  00141E                     
  1787                           ;pwm.c: 36:  CCPR1L = val >> 2;
  1788  00141E  C018  F015         	movff	pwmSet1@val,??_pwmSet1
  1789  001422  C019  F016         	movff	pwmSet1@val+1,??_pwmSet1+1
  1790  001426  90D8               	bcf	status,0,c
  1791  001428  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  1792  00142A  3215               	rrcf	??_pwmSet1^0,f,c
  1793  00142C  90D8               	bcf	status,0,c
  1794  00142E  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  1795  001430  3215               	rrcf	??_pwmSet1^0,f,c
  1796  001432  5015               	movf	??_pwmSet1^0,w,c
  1797  001434  6EBE               	movwf	190,c	;volatile
  1798  001436                     
  1799                           ;pwm.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  1800  001436  C018  F015         	movff	pwmSet1@val,??_pwmSet1	;volatile
  1801  00143A  0E03               	movlw	3
  1802  00143C  1615               	andwf	??_pwmSet1^0,f,c
  1803  00143E  3815               	swapf	??_pwmSet1^0,w,c
  1804  001440  0BF0               	andlw	240
  1805  001442  12BD               	iorwf	189,f,c	;volatile
  1806  001444  0012               	return		;funcret
  1807  001446                     __end_of_pwmSet1:
  1808                           	callstack 0
  1809                           
  1810 ;; *************** function ___wmul *****************
  1811 ;; Defined at:
  1812 ;;		line 15 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  multiplier      2    7[COMRAM] unsigned int 
  1815 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  product         2   11[COMRAM] unsigned int 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  2    7[COMRAM] unsigned int 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, prodl, prodh
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         4       0       0       0       0       0       0
  1828 ;;      Locals:         2       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:         6       0       0       0       0       0       0
  1831 ;;Total ram usage:        6 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_pwmSet1
  1837 ;;		_main
  1838 ;;		_setTemperature
  1839 ;;		_pwmSet2
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text7
  1844  0015EC                     __ptext7:
  1845                           	callstack 0
  1846  0015EC                     ___wmul:
  1847                           	callstack 29
  1848  0015EC  5008               	movf	___wmul@multiplier^0,w,c
  1849  0015EE  020A               	mulwf	___wmul@multiplicand^0,c
  1850  0015F0  CFF3 F00C          	movff	prodl,___wmul@product
  1851  0015F4  CFF4 F00D          	movff	prodh,___wmul@product+1
  1852  0015F8  5008               	movf	___wmul@multiplier^0,w,c
  1853  0015FA  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1854  0015FC  50F3               	movf	243,w,c
  1855  0015FE  260D               	addwf	(___wmul@product+1)^0,f,c
  1856  001600  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1857  001602  020A               	mulwf	___wmul@multiplicand^0,c
  1858  001604  50F3               	movf	243,w,c
  1859  001606  260D               	addwf	(___wmul@product+1)^0,f,c
  1860  001608  C00C  F008         	movff	___wmul@product,?___wmul
  1861  00160C  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1862  001610  0012               	return		;funcret
  1863  001612                     __end_of___wmul:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function ___lwdiv *****************
  1867 ;; Defined at:
  1868 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  dividend        2   13[COMRAM] unsigned int 
  1871 ;;  divisor         2   15[COMRAM] unsigned int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  quotient        2   17[COMRAM] unsigned int 
  1874 ;;  counter         1   19[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2   13[COMRAM] unsigned int 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1884 ;;      Params:         4       0       0       0       0       0       0
  1885 ;;      Locals:         3       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0
  1887 ;;      Totals:         7       0       0       0       0       0       0
  1888 ;;Total ram usage:        7 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_itoa
  1894 ;;		_pwmSet1
  1895 ;;		_main
  1896 ;;		_setTemperature
  1897 ;;		_pwmSet2
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text8
  1902  001366                     __ptext8:
  1903                           	callstack 0
  1904  001366                     ___lwdiv:
  1905                           	callstack 28
  1906  001366  0E00               	movlw	0
  1907  001368  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  1908  00136A  0E00               	movlw	0
  1909  00136C  6E12               	movwf	___lwdiv@quotient^0,c
  1910  00136E  5010               	movf	___lwdiv@divisor^0,w,c
  1911  001370  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1912  001372  B4D8               	btfsc	status,2,c
  1913  001374  EFBE  F009         	goto	u1171
  1914  001378  EFC0  F009         	goto	u1170
  1915  00137C                     u1171:
  1916  00137C  EFE8  F009         	goto	l816
  1917  001380                     u1170:
  1918  001380  0E01               	movlw	1
  1919  001382  6E14               	movwf	___lwdiv@counter^0,c
  1920  001384  EFC8  F009         	goto	l1662
  1921  001388                     l1660:
  1922  001388  90D8               	bcf	status,0,c
  1923  00138A  3610               	rlcf	___lwdiv@divisor^0,f,c
  1924  00138C  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1925  00138E  2A14               	incf	___lwdiv@counter^0,f,c
  1926  001390                     l1662:
  1927  001390  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  1928  001392  EFCD  F009         	goto	u1181
  1929  001396  EFCF  F009         	goto	u1180
  1930  00139A                     u1181:
  1931  00139A  EFC4  F009         	goto	l1660
  1932  00139E                     u1180:
  1933  00139E                     l1664:
  1934  00139E  90D8               	bcf	status,0,c
  1935  0013A0  3612               	rlcf	___lwdiv@quotient^0,f,c
  1936  0013A2  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1937  0013A4  5010               	movf	___lwdiv@divisor^0,w,c
  1938  0013A6  5C0E               	subwf	___lwdiv@dividend^0,w,c
  1939  0013A8  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1940  0013AA  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1941  0013AC  A0D8               	btfss	status,0,c
  1942  0013AE  EFDB  F009         	goto	u1191
  1943  0013B2  EFDD  F009         	goto	u1190
  1944  0013B6                     u1191:
  1945  0013B6  EFE2  F009         	goto	l1672
  1946  0013BA                     u1190:
  1947  0013BA  5010               	movf	___lwdiv@divisor^0,w,c
  1948  0013BC  5E0E               	subwf	___lwdiv@dividend^0,f,c
  1949  0013BE  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1950  0013C0  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1951  0013C2  8012               	bsf	___lwdiv@quotient^0,0,c
  1952  0013C4                     l1672:
  1953  0013C4  90D8               	bcf	status,0,c
  1954  0013C6  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1955  0013C8  3210               	rrcf	___lwdiv@divisor^0,f,c
  1956  0013CA  2E14               	decfsz	___lwdiv@counter^0,f,c
  1957  0013CC  EFCF  F009         	goto	l1664
  1958  0013D0                     l816:
  1959  0013D0  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  1960  0013D4  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1961  0013D8  0012               	return		;funcret
  1962  0013DA                     __end_of___lwdiv:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _pwmInit *****************
  1966 ;; Defined at:
  1967 ;;		line 60 in file "pwm.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1981 ;;      Params:         0       0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text9
  1995  00165C                     __ptext9:
  1996                           	callstack 0
  1997  00165C                     _pwmInit:
  1998                           	callstack 30
  1999  00165C                     
  2000                           ;pwm.c: 62:  ((TRISC) &= ~(1<<(1)));
  2001  00165C  9294               	bcf	148,1,c	;volatile
  2002                           
  2003                           ;pwm.c: 63:  ((TRISC) &= ~(1<<(2)));
  2004  00165E  9494               	bcf	148,2,c	;volatile
  2005  001660                     
  2006                           ;pwm.c: 65:  T2CON |= 0b00000011;
  2007  001660  0E03               	movlw	3
  2008  001662  12CA               	iorwf	202,f,c	;volatile
  2009  001664                     
  2010                           ;pwm.c: 66:  ((T2CON) |= (1<<(2)));
  2011  001664  84CA               	bsf	202,2,c	;volatile
  2012                           
  2013                           ;pwm.c: 69:  CCP1CON |= 0b00001100;
  2014  001666  0E0C               	movlw	12
  2015  001668  12BD               	iorwf	189,f,c	;volatile
  2016                           
  2017                           ;pwm.c: 70:  CCP2CON |= 0b00001100;
  2018  00166A  0E0C               	movlw	12
  2019  00166C  12BA               	iorwf	186,f,c	;volatile
  2020  00166E  0012               	return		;funcret
  2021  001670                     __end_of_pwmInit:
  2022                           	callstack 0
  2023                           
  2024 ;; *************** function _lcd_str *****************
  2025 ;; Defined at:
  2026 ;;		line 127 in file "lcd.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2029 ;;		 -> STR_8(2), STR_7(4), STR_6(13), STR_5(4), 
  2030 ;;		 -> STR_4(7), STR_3(13), STR_2(14), STR_1(15), 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  i               1   12[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  1    wreg      void 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2042 ;;      Params:         2       0       0       0       0       0       0
  2043 ;;      Locals:         1       0       0       0       0       0       0
  2044 ;;      Temps:          2       0       0       0       0       0       0
  2045 ;;      Totals:         5       0       0       0       0       0       0
  2046 ;;Total ram usage:        5 bytes
  2047 ;; Hardware stack levels used: 1
  2048 ;; Hardware stack levels required when called: 2
  2049 ;; This function calls:
  2050 ;;		_lcdData
  2051 ;; This function is called by:
  2052 ;;		_main
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text10
  2057  001562                     __ptext10:
  2058                           	callstack 0
  2059  001562                     _lcd_str:
  2060                           	callstack 28
  2061  001562                     
  2062                           ;lcd.c: 128:     unsigned char i=0;
  2063  001562  0E00               	movlw	0
  2064  001564  6E0D               	movwf	lcd_str@i^0,c
  2065                           
  2066                           ;lcd.c: 130:     while(str[i] != 0 ){
  2067  001566  EFC4  F00A         	goto	l1830
  2068  00156A                     l1826:
  2069                           
  2070                           ;lcd.c: 131:         lcdData(str[i]);
  2071  00156A  500D               	movf	lcd_str@i^0,w,c
  2072  00156C  2409               	addwf	lcd_str@str^0,w,c
  2073  00156E  6E0B               	movwf	??_lcd_str^0,c
  2074  001570  0E00               	movlw	0
  2075  001572  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2076  001574  6E0C               	movwf	(??_lcd_str+1)^0,c
  2077  001576  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2078  00157A  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2079  00157E                     	if	0	;tblptru may be non-zero
  2080  00157E                     	endif
  2081  00157E                     	if	0	;tblptru may be non-zero
  2082  00157E                     	endif
  2083  00157E  0008               	tblrd		*
  2084  001580  50F5               	movf	tablat,w,c
  2085  001582  EC87  F00A         	call	_lcdData
  2086  001586                     
  2087                           ;lcd.c: 132:         i++;
  2088  001586  2A0D               	incf	lcd_str@i^0,f,c
  2089  001588                     l1830:
  2090                           
  2091                           ;lcd.c: 130:     while(str[i] != 0 ){
  2092  001588  500D               	movf	lcd_str@i^0,w,c
  2093  00158A  2409               	addwf	lcd_str@str^0,w,c
  2094  00158C  6E0B               	movwf	??_lcd_str^0,c
  2095  00158E  0E00               	movlw	0
  2096  001590  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2097  001592  6E0C               	movwf	(??_lcd_str+1)^0,c
  2098  001594  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2099  001598  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2100  00159C                     	if	0	;tblptru may be non-zero
  2101  00159C                     	endif
  2102  00159C                     	if	0	;tblptru may be non-zero
  2103  00159C                     	endif
  2104  00159C  0008               	tblrd		*
  2105  00159E  50F5               	movf	tablat,w,c
  2106  0015A0  0900               	iorlw	0
  2107  0015A2  A4D8               	btfss	status,2,c
  2108  0015A4  EFD6  F00A         	goto	u1471
  2109  0015A8  EFD8  F00A         	goto	u1470
  2110  0015AC                     u1471:
  2111  0015AC  EFB5  F00A         	goto	l1826
  2112  0015B0                     u1470:
  2113  0015B0  0012               	return		;funcret
  2114  0015B2                     __end_of_lcd_str:
  2115                           	callstack 0
  2116                           
  2117 ;; *************** function _lcdData *****************
  2118 ;; Defined at:
  2119 ;;		line 74 in file "lcd.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;  valor           1    wreg     unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  valor           1    6[COMRAM] unsigned char 
  2124 ;;  old_D           1    7[COMRAM] unsigned char 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2134 ;;      Params:         0       0       0       0       0       0       0
  2135 ;;      Locals:         2       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0
  2137 ;;      Totals:         2       0       0       0       0       0       0
  2138 ;;Total ram usage:        2 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 1
  2141 ;; This function calls:
  2142 ;;		_Delay40us
  2143 ;;		_digitalWrite
  2144 ;; This function is called by:
  2145 ;;		_lcd_str
  2146 ;;		_main
  2147 ;;		_setTemperature
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           	psect	text11
  2152  00150E                     __ptext11:
  2153                           	callstack 0
  2154  00150E                     _lcdData:
  2155                           	callstack 28
  2156                           
  2157                           ;incstack = 0
  2158                           ;lcdData@valor stored from wreg
  2159  00150E  6E07               	movwf	lcdData@valor^0,c
  2160  001510                     
  2161                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2162  001510  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2163  001514                     
  2164                           ;lcd.c: 80:     TRISD = 0x00;
  2165  001514  0E00               	movlw	0
  2166  001516  6E95               	movwf	149,c	;volatile
  2167  001518                     
  2168                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2169  001518  0E00               	movlw	0
  2170  00151A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2171  00151C  0E22               	movlw	34
  2172  00151E  6E01               	movwf	digitalWrite@pin^0,c
  2173  001520  0E00               	movlw	0
  2174  001522  6E04               	movwf	(digitalWrite@value+1)^0,c
  2175  001524  0E01               	movlw	1
  2176  001526  6E03               	movwf	digitalWrite@value^0,c
  2177  001528  EC47  F006         	call	_digitalWrite	;wreg free
  2178  00152C                     
  2179                           ;lcd.c: 83:  PORTD = valor;
  2180  00152C  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2181  001530                     
  2182                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2183  001530  0E00               	movlw	0
  2184  001532  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2185  001534  0E21               	movlw	33
  2186  001536  6E01               	movwf	digitalWrite@pin^0,c
  2187  001538  0E00               	movlw	0
  2188  00153A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2189  00153C  0E01               	movlw	1
  2190  00153E  6E03               	movwf	digitalWrite@value^0,c
  2191  001540  EC47  F006         	call	_digitalWrite	;wreg free
  2192  001544                     
  2193                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2194  001544  0E00               	movlw	0
  2195  001546  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2196  001548  0E21               	movlw	33
  2197  00154A  6E01               	movwf	digitalWrite@pin^0,c
  2198  00154C  0E00               	movlw	0
  2199  00154E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2200  001550  0E00               	movlw	0
  2201  001552  6E03               	movwf	digitalWrite@value^0,c
  2202  001554  EC47  F006         	call	_digitalWrite	;wreg free
  2203  001558                     
  2204                           ;lcd.c: 88:     PORTD= old_D;
  2205  001558  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2206  00155C                     
  2207                           ;lcd.c: 90:  Delay40us();
  2208  00155C  EC17  F00B         	call	_Delay40us	;wreg free
  2209  001560  0012               	return		;funcret
  2210  001562                     __end_of_lcdData:
  2211                           	callstack 0
  2212                           
  2213 ;; *************** function _lcdInit *****************
  2214 ;; Defined at:
  2215 ;;		line 95 in file "lcd.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2229 ;;      Params:         0       0       0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 3
  2236 ;; This function calls:
  2237 ;;		_Delay2ms
  2238 ;;		_lcdCommand
  2239 ;;		_pinMode
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text12
  2246  0012EE                     __ptext12:
  2247                           	callstack 0
  2248  0012EE                     _lcdInit:
  2249                           	callstack 27
  2250  0012EE                     
  2251                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2252  0012EE  0E00               	movlw	0
  2253  0012F0  6E02               	movwf	(pinMode@pin+1)^0,c
  2254  0012F2  0E22               	movlw	34
  2255  0012F4  6E01               	movwf	pinMode@pin^0,c
  2256  0012F6  0E00               	movlw	0
  2257  0012F8  6E04               	movwf	(pinMode@type+1)^0,c
  2258  0012FA  0E00               	movlw	0
  2259  0012FC  6E03               	movwf	pinMode@type^0,c
  2260  0012FE  EC20  F005         	call	_pinMode	;wreg free
  2261                           
  2262                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2263  001302  0E00               	movlw	0
  2264  001304  6E02               	movwf	(pinMode@pin+1)^0,c
  2265  001306  0E21               	movlw	33
  2266  001308  6E01               	movwf	pinMode@pin^0,c
  2267  00130A  0E00               	movlw	0
  2268  00130C  6E04               	movwf	(pinMode@type+1)^0,c
  2269  00130E  0E00               	movlw	0
  2270  001310  6E03               	movwf	pinMode@type^0,c
  2271  001312  EC20  F005         	call	_pinMode	;wreg free
  2272  001316                     
  2273                           ;lcd.c: 99:  TRISD = 0x00;
  2274  001316  0E00               	movlw	0
  2275  001318  6E95               	movwf	149,c	;volatile
  2276  00131A                     
  2277                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2278  00131A  EC09  F00B         	call	_Delay2ms	;wreg free
  2279  00131E  EC09  F00B         	call	_Delay2ms	;wreg free
  2280  001322  EC09  F00B         	call	_Delay2ms	;wreg free
  2281  001326  EC09  F00B         	call	_Delay2ms	;wreg free
  2282  00132A  EC09  F00B         	call	_Delay2ms	;wreg free
  2283  00132E                     
  2284                           ;lcd.c: 104:     lcdCommand(0x38);
  2285  00132E  0E38               	movlw	56
  2286  001330  EC38  F009         	call	_lcdCommand
  2287  001334                     
  2288                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2289  001334  EC09  F00B         	call	_Delay2ms	;wreg free
  2290  001338  EC09  F00B         	call	_Delay2ms	;wreg free
  2291  00133C                     
  2292                           ;lcd.c: 106:     lcdCommand(0x38);
  2293  00133C  0E38               	movlw	56
  2294  00133E  EC38  F009         	call	_lcdCommand
  2295  001342                     
  2296                           ;lcd.c: 107:     Delay2ms();
  2297  001342  EC09  F00B         	call	_Delay2ms	;wreg free
  2298  001346                     
  2299                           ;lcd.c: 108:     lcdCommand(0x38);
  2300  001346  0E38               	movlw	56
  2301  001348  EC38  F009         	call	_lcdCommand
  2302  00134C                     
  2303                           ;lcd.c: 110:     lcdCommand(0x38);
  2304  00134C  0E38               	movlw	56
  2305  00134E  EC38  F009         	call	_lcdCommand
  2306  001352                     
  2307                           ;lcd.c: 111:     lcdCommand(0x06);
  2308  001352  0E06               	movlw	6
  2309  001354  EC38  F009         	call	_lcdCommand
  2310  001358                     
  2311                           ;lcd.c: 114:     lcdCommand(0x0C);
  2312  001358  0E0C               	movlw	12
  2313  00135A  EC38  F009         	call	_lcdCommand
  2314  00135E                     
  2315                           ;lcd.c: 115:     lcdCommand(0x01);
  2316  00135E  0E01               	movlw	1
  2317  001360  EC38  F009         	call	_lcdCommand
  2318  001364  0012               	return		;funcret
  2319  001366                     __end_of_lcdInit:
  2320                           	callstack 0
  2321                           
  2322 ;; *************** function _pinMode *****************
  2323 ;; Defined at:
  2324 ;;		line 54 in file "io.c"
  2325 ;; Parameters:    Size  Location     Type
  2326 ;;  pin             2    0[COMRAM] int 
  2327 ;;  type            2    2[COMRAM] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2339 ;;      Params:         4       0       0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0
  2341 ;;      Temps:          2       0       0       0       0       0       0
  2342 ;;      Totals:         6       0       0       0       0       0       0
  2343 ;;Total ram usage:        6 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; This function calls:
  2346 ;;		Nothing
  2347 ;; This function is called by:
  2348 ;;		_lcdInit
  2349 ;; This function uses a non-reentrant model
  2350 ;;
  2351                           
  2352                           	psect	text13
  2353  000A40                     __ptext13:
  2354                           	callstack 0
  2355  000A40                     _pinMode:
  2356                           	callstack 29
  2357  000A40                     
  2358                           ;io.c: 56:     if(pin <8){
  2359  000A40  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2360  000A42  EF2E  F005         	goto	u1230
  2361  000A46  5002               	movf	(pinMode@pin+1)^0,w,c
  2362  000A48  E107               	bnz	u1231
  2363  000A4A  0E08               	movlw	8
  2364  000A4C  5C01               	subwf	pinMode@pin^0,w,c
  2365  000A4E  B0D8               	btfsc	status,0,c
  2366  000A50  EF2C  F005         	goto	u1231
  2367  000A54  EF2E  F005         	goto	u1230
  2368  000A58                     u1231:
  2369  000A58  EF58  F005         	goto	l1700
  2370  000A5C                     u1230:
  2371  000A5C                     
  2372                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2373  000A5C  5003               	movf	pinMode@type^0,w,c
  2374  000A5E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2375  000A60  B4D8               	btfsc	status,2,c
  2376  000A62  EF35  F005         	goto	u1241
  2377  000A66  EF37  F005         	goto	u1240
  2378  000A6A                     u1241:
  2379  000A6A  EF47  F005         	goto	l1698
  2380  000A6E                     u1240:
  2381  000A6E  C001  F005         	movff	pinMode@pin,??_pinMode
  2382  000A72  0E01               	movlw	1
  2383  000A74  6E06               	movwf	(??_pinMode+1)^0,c
  2384  000A76  2A05               	incf	??_pinMode^0,f,c
  2385  000A78  EF40  F005         	goto	u1254
  2386  000A7C                     u1255:
  2387  000A7C  90D8               	bcf	status,0,c
  2388  000A7E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2389  000A80                     u1254:
  2390  000A80  2E05               	decfsz	??_pinMode^0,f,c
  2391  000A82  EF3E  F005         	goto	u1255
  2392  000A86  5006               	movf	(??_pinMode+1)^0,w,c
  2393  000A88  1292               	iorwf	146,f,c	;volatile
  2394  000A8A  EF46  F006         	goto	l76
  2395  000A8E                     l1698:
  2396  000A8E  C001  F005         	movff	pinMode@pin,??_pinMode
  2397  000A92  0E01               	movlw	1
  2398  000A94  6E06               	movwf	(??_pinMode+1)^0,c
  2399  000A96  2A05               	incf	??_pinMode^0,f,c
  2400  000A98  EF50  F005         	goto	u1264
  2401  000A9C                     u1265:
  2402  000A9C  90D8               	bcf	status,0,c
  2403  000A9E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2404  000AA0                     u1264:
  2405  000AA0  2E05               	decfsz	??_pinMode^0,f,c
  2406  000AA2  EF4E  F005         	goto	u1265
  2407  000AA6  5006               	movf	(??_pinMode+1)^0,w,c
  2408  000AA8  0AFF               	xorlw	255
  2409  000AAA  1692               	andwf	146,f,c	;volatile
  2410  000AAC  EF46  F006         	goto	l76
  2411  000AB0                     l1700:
  2412  000AB0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2413  000AB2  EF66  F005         	goto	u1270
  2414  000AB6  5002               	movf	(pinMode@pin+1)^0,w,c
  2415  000AB8  E107               	bnz	u1271
  2416  000ABA  0E10               	movlw	16
  2417  000ABC  5C01               	subwf	pinMode@pin^0,w,c
  2418  000ABE  B0D8               	btfsc	status,0,c
  2419  000AC0  EF64  F005         	goto	u1271
  2420  000AC4  EF66  F005         	goto	u1270
  2421  000AC8                     u1271:
  2422  000AC8  EF94  F005         	goto	l1708
  2423  000ACC                     u1270:
  2424  000ACC                     
  2425                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2426  000ACC  5003               	movf	pinMode@type^0,w,c
  2427  000ACE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2428  000AD0  B4D8               	btfsc	status,2,c
  2429  000AD2  EF6D  F005         	goto	u1281
  2430  000AD6  EF6F  F005         	goto	u1280
  2431  000ADA                     u1281:
  2432  000ADA  EF81  F005         	goto	l1706
  2433  000ADE                     u1280:
  2434  000ADE  C001  F005         	movff	pinMode@pin,??_pinMode
  2435  000AE2  0EF8               	movlw	-8
  2436  000AE4  2605               	addwf	??_pinMode^0,f,c
  2437  000AE6  0E01               	movlw	1
  2438  000AE8  6E06               	movwf	(??_pinMode+1)^0,c
  2439  000AEA  2A05               	incf	??_pinMode^0,f,c
  2440  000AEC  EF7A  F005         	goto	u1294
  2441  000AF0                     u1295:
  2442  000AF0  90D8               	bcf	status,0,c
  2443  000AF2  3606               	rlcf	(??_pinMode+1)^0,f,c
  2444  000AF4                     u1294:
  2445  000AF4  2E05               	decfsz	??_pinMode^0,f,c
  2446  000AF6  EF78  F005         	goto	u1295
  2447  000AFA  5006               	movf	(??_pinMode+1)^0,w,c
  2448  000AFC  1293               	iorwf	147,f,c	;volatile
  2449  000AFE  EF46  F006         	goto	l76
  2450  000B02                     l1706:
  2451  000B02  C001  F005         	movff	pinMode@pin,??_pinMode
  2452  000B06  0EF8               	movlw	-8
  2453  000B08  2605               	addwf	??_pinMode^0,f,c
  2454  000B0A  0E01               	movlw	1
  2455  000B0C  6E06               	movwf	(??_pinMode+1)^0,c
  2456  000B0E  2A05               	incf	??_pinMode^0,f,c
  2457  000B10  EF8C  F005         	goto	u1304
  2458  000B14                     u1305:
  2459  000B14  90D8               	bcf	status,0,c
  2460  000B16  3606               	rlcf	(??_pinMode+1)^0,f,c
  2461  000B18                     u1304:
  2462  000B18  2E05               	decfsz	??_pinMode^0,f,c
  2463  000B1A  EF8A  F005         	goto	u1305
  2464  000B1E  5006               	movf	(??_pinMode+1)^0,w,c
  2465  000B20  0AFF               	xorlw	255
  2466  000B22  1693               	andwf	147,f,c	;volatile
  2467  000B24  EF46  F006         	goto	l76
  2468  000B28                     l1708:
  2469  000B28  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2470  000B2A  EFA2  F005         	goto	u1310
  2471  000B2E  5002               	movf	(pinMode@pin+1)^0,w,c
  2472  000B30  E107               	bnz	u1311
  2473  000B32  0E18               	movlw	24
  2474  000B34  5C01               	subwf	pinMode@pin^0,w,c
  2475  000B36  B0D8               	btfsc	status,0,c
  2476  000B38  EFA0  F005         	goto	u1311
  2477  000B3C  EFA2  F005         	goto	u1310
  2478  000B40                     u1311:
  2479  000B40  EFD0  F005         	goto	l1716
  2480  000B44                     u1310:
  2481  000B44                     
  2482                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2483  000B44  5003               	movf	pinMode@type^0,w,c
  2484  000B46  1004               	iorwf	(pinMode@type+1)^0,w,c
  2485  000B48  B4D8               	btfsc	status,2,c
  2486  000B4A  EFA9  F005         	goto	u1321
  2487  000B4E  EFAB  F005         	goto	u1320
  2488  000B52                     u1321:
  2489  000B52  EFBD  F005         	goto	l1714
  2490  000B56                     u1320:
  2491  000B56  C001  F005         	movff	pinMode@pin,??_pinMode
  2492  000B5A  0EF0               	movlw	-16
  2493  000B5C  2605               	addwf	??_pinMode^0,f,c
  2494  000B5E  0E01               	movlw	1
  2495  000B60  6E06               	movwf	(??_pinMode+1)^0,c
  2496  000B62  2A05               	incf	??_pinMode^0,f,c
  2497  000B64  EFB6  F005         	goto	u1334
  2498  000B68                     u1335:
  2499  000B68  90D8               	bcf	status,0,c
  2500  000B6A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2501  000B6C                     u1334:
  2502  000B6C  2E05               	decfsz	??_pinMode^0,f,c
  2503  000B6E  EFB4  F005         	goto	u1335
  2504  000B72  5006               	movf	(??_pinMode+1)^0,w,c
  2505  000B74  1294               	iorwf	148,f,c	;volatile
  2506  000B76  EF46  F006         	goto	l76
  2507  000B7A                     l1714:
  2508  000B7A  C001  F005         	movff	pinMode@pin,??_pinMode
  2509  000B7E  0EF0               	movlw	-16
  2510  000B80  2605               	addwf	??_pinMode^0,f,c
  2511  000B82  0E01               	movlw	1
  2512  000B84  6E06               	movwf	(??_pinMode+1)^0,c
  2513  000B86  2A05               	incf	??_pinMode^0,f,c
  2514  000B88  EFC8  F005         	goto	u1344
  2515  000B8C                     u1345:
  2516  000B8C  90D8               	bcf	status,0,c
  2517  000B8E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2518  000B90                     u1344:
  2519  000B90  2E05               	decfsz	??_pinMode^0,f,c
  2520  000B92  EFC6  F005         	goto	u1345
  2521  000B96  5006               	movf	(??_pinMode+1)^0,w,c
  2522  000B98  0AFF               	xorlw	255
  2523  000B9A  1694               	andwf	148,f,c	;volatile
  2524  000B9C  EF46  F006         	goto	l76
  2525  000BA0                     l1716:
  2526  000BA0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2527  000BA2  EFDE  F005         	goto	u1350
  2528  000BA6  5002               	movf	(pinMode@pin+1)^0,w,c
  2529  000BA8  E107               	bnz	u1351
  2530  000BAA  0E20               	movlw	32
  2531  000BAC  5C01               	subwf	pinMode@pin^0,w,c
  2532  000BAE  B0D8               	btfsc	status,0,c
  2533  000BB0  EFDC  F005         	goto	u1351
  2534  000BB4  EFDE  F005         	goto	u1350
  2535  000BB8                     u1351:
  2536  000BB8  EF0C  F006         	goto	l1724
  2537  000BBC                     u1350:
  2538  000BBC                     
  2539                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2540  000BBC  5003               	movf	pinMode@type^0,w,c
  2541  000BBE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2542  000BC0  B4D8               	btfsc	status,2,c
  2543  000BC2  EFE5  F005         	goto	u1361
  2544  000BC6  EFE7  F005         	goto	u1360
  2545  000BCA                     u1361:
  2546  000BCA  EFF9  F005         	goto	l1722
  2547  000BCE                     u1360:
  2548  000BCE  C001  F005         	movff	pinMode@pin,??_pinMode
  2549  000BD2  0EE8               	movlw	-24
  2550  000BD4  2605               	addwf	??_pinMode^0,f,c
  2551  000BD6  0E01               	movlw	1
  2552  000BD8  6E06               	movwf	(??_pinMode+1)^0,c
  2553  000BDA  2A05               	incf	??_pinMode^0,f,c
  2554  000BDC  EFF2  F005         	goto	u1374
  2555  000BE0                     u1375:
  2556  000BE0  90D8               	bcf	status,0,c
  2557  000BE2  3606               	rlcf	(??_pinMode+1)^0,f,c
  2558  000BE4                     u1374:
  2559  000BE4  2E05               	decfsz	??_pinMode^0,f,c
  2560  000BE6  EFF0  F005         	goto	u1375
  2561  000BEA  5006               	movf	(??_pinMode+1)^0,w,c
  2562  000BEC  1295               	iorwf	149,f,c	;volatile
  2563  000BEE  EF46  F006         	goto	l76
  2564  000BF2                     l1722:
  2565  000BF2  C001  F005         	movff	pinMode@pin,??_pinMode
  2566  000BF6  0EE8               	movlw	-24
  2567  000BF8  2605               	addwf	??_pinMode^0,f,c
  2568  000BFA  0E01               	movlw	1
  2569  000BFC  6E06               	movwf	(??_pinMode+1)^0,c
  2570  000BFE  2A05               	incf	??_pinMode^0,f,c
  2571  000C00  EF04  F006         	goto	u1384
  2572  000C04                     u1385:
  2573  000C04  90D8               	bcf	status,0,c
  2574  000C06  3606               	rlcf	(??_pinMode+1)^0,f,c
  2575  000C08                     u1384:
  2576  000C08  2E05               	decfsz	??_pinMode^0,f,c
  2577  000C0A  EF02  F006         	goto	u1385
  2578  000C0E  5006               	movf	(??_pinMode+1)^0,w,c
  2579  000C10  0AFF               	xorlw	255
  2580  000C12  1695               	andwf	149,f,c	;volatile
  2581  000C14  EF46  F006         	goto	l76
  2582  000C18                     l1724:
  2583  000C18  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2584  000C1A  EF1A  F006         	goto	u1390
  2585  000C1E  5002               	movf	(pinMode@pin+1)^0,w,c
  2586  000C20  E107               	bnz	u1391
  2587  000C22  0E28               	movlw	40
  2588  000C24  5C01               	subwf	pinMode@pin^0,w,c
  2589  000C26  B0D8               	btfsc	status,0,c
  2590  000C28  EF18  F006         	goto	u1391
  2591  000C2C  EF1A  F006         	goto	u1390
  2592  000C30                     u1391:
  2593  000C30  EF46  F006         	goto	l76
  2594  000C34                     u1390:
  2595  000C34                     
  2596                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2597  000C34  5003               	movf	pinMode@type^0,w,c
  2598  000C36  1004               	iorwf	(pinMode@type+1)^0,w,c
  2599  000C38  B4D8               	btfsc	status,2,c
  2600  000C3A  EF21  F006         	goto	u1401
  2601  000C3E  EF23  F006         	goto	u1400
  2602  000C42                     u1401:
  2603  000C42  EF35  F006         	goto	l1730
  2604  000C46                     u1400:
  2605  000C46  C001  F005         	movff	pinMode@pin,??_pinMode
  2606  000C4A  0EE0               	movlw	-32
  2607  000C4C  2605               	addwf	??_pinMode^0,f,c
  2608  000C4E  0E01               	movlw	1
  2609  000C50  6E06               	movwf	(??_pinMode+1)^0,c
  2610  000C52  2A05               	incf	??_pinMode^0,f,c
  2611  000C54  EF2E  F006         	goto	u1414
  2612  000C58                     u1415:
  2613  000C58  90D8               	bcf	status,0,c
  2614  000C5A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2615  000C5C                     u1414:
  2616  000C5C  2E05               	decfsz	??_pinMode^0,f,c
  2617  000C5E  EF2C  F006         	goto	u1415
  2618  000C62  5006               	movf	(??_pinMode+1)^0,w,c
  2619  000C64  1296               	iorwf	150,f,c	;volatile
  2620  000C66  EF46  F006         	goto	l76
  2621  000C6A                     l1730:
  2622  000C6A  C001  F005         	movff	pinMode@pin,??_pinMode
  2623  000C6E  0EE0               	movlw	-32
  2624  000C70  2605               	addwf	??_pinMode^0,f,c
  2625  000C72  0E01               	movlw	1
  2626  000C74  6E06               	movwf	(??_pinMode+1)^0,c
  2627  000C76  2A05               	incf	??_pinMode^0,f,c
  2628  000C78  EF40  F006         	goto	u1424
  2629  000C7C                     u1425:
  2630  000C7C  90D8               	bcf	status,0,c
  2631  000C7E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2632  000C80                     u1424:
  2633  000C80  2E05               	decfsz	??_pinMode^0,f,c
  2634  000C82  EF3E  F006         	goto	u1425
  2635  000C86  5006               	movf	(??_pinMode+1)^0,w,c
  2636  000C88  0AFF               	xorlw	255
  2637  000C8A  1696               	andwf	150,f,c	;volatile
  2638  000C8C                     l76:
  2639  000C8C  0012               	return		;funcret
  2640  000C8E                     __end_of_pinMode:
  2641                           	callstack 0
  2642                           
  2643 ;; *************** function _lcdCommand *****************
  2644 ;; Defined at:
  2645 ;;		line 50 in file "lcd.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  cmd             1    wreg     unsigned char 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;  cmd             1    7[COMRAM] unsigned char 
  2650 ;;  old_D           1    6[COMRAM] unsigned char 
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2660 ;;      Params:         0       0       0       0       0       0       0
  2661 ;;      Locals:         2       0       0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0
  2663 ;;      Totals:         2       0       0       0       0       0       0
  2664 ;;Total ram usage:        2 bytes
  2665 ;; Hardware stack levels used: 1
  2666 ;; Hardware stack levels required when called: 2
  2667 ;; This function calls:
  2668 ;;		_Delay2ms
  2669 ;;		_Delay40us
  2670 ;;		_digitalWrite
  2671 ;; This function is called by:
  2672 ;;		_lcdInit
  2673 ;;		_lcdPosition
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text14
  2679  001270                     __ptext14:
  2680                           	callstack 0
  2681  001270                     _lcdCommand:
  2682                           	callstack 26
  2683                           
  2684                           ;incstack = 0
  2685                           ;lcdCommand@cmd stored from wreg
  2686  001270  6E08               	movwf	lcdCommand@cmd^0,c
  2687  001272                     
  2688                           ;lcd.c: 50: void lcdCommand(unsigned char cmd);lcd.c: 51: {;lcd.c: 52:     unsigned char
      +                           old_D;;lcd.c: 53:     old_D = PORTD;
  2689  001272  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  2690  001276                     
  2691                           ;lcd.c: 56:     TRISD = 0x00;
  2692  001276  0E00               	movlw	0
  2693  001278  6E95               	movwf	149,c	;volatile
  2694  00127A                     
  2695                           ;lcd.c: 58:     digitalWrite(PIN_E2, 0);
  2696  00127A  0E00               	movlw	0
  2697  00127C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2698  00127E  0E22               	movlw	34
  2699  001280  6E01               	movwf	digitalWrite@pin^0,c
  2700  001282  0E00               	movlw	0
  2701  001284  6E04               	movwf	(digitalWrite@value+1)^0,c
  2702  001286  0E00               	movlw	0
  2703  001288  6E03               	movwf	digitalWrite@value^0,c
  2704  00128A  EC47  F006         	call	_digitalWrite	;wreg free
  2705  00128E                     
  2706                           ;lcd.c: 59:     PORTD = cmd;
  2707  00128E  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2708  001292                     
  2709                           ;lcd.c: 61:     digitalWrite(PIN_E1, 1);
  2710  001292  0E00               	movlw	0
  2711  001294  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2712  001296  0E21               	movlw	33
  2713  001298  6E01               	movwf	digitalWrite@pin^0,c
  2714  00129A  0E00               	movlw	0
  2715  00129C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2716  00129E  0E01               	movlw	1
  2717  0012A0  6E03               	movwf	digitalWrite@value^0,c
  2718  0012A2  EC47  F006         	call	_digitalWrite	;wreg free
  2719  0012A6                     
  2720                           ;lcd.c: 62:     digitalWrite(PIN_E1, 0);
  2721  0012A6  0E00               	movlw	0
  2722  0012A8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2723  0012AA  0E21               	movlw	33
  2724  0012AC  6E01               	movwf	digitalWrite@pin^0,c
  2725  0012AE  0E00               	movlw	0
  2726  0012B0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2727  0012B2  0E00               	movlw	0
  2728  0012B4  6E03               	movwf	digitalWrite@value^0,c
  2729  0012B6  EC47  F006         	call	_digitalWrite	;wreg free
  2730  0012BA                     
  2731                           ;lcd.c: 65:     PORTD = old_D;
  2732  0012BA  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2733  0012BE                     
  2734                           ;lcd.c: 67:     if ((cmd == 0x02) || (cmd == 0x01)) {
  2735  0012BE  0E02               	movlw	2
  2736  0012C0  1808               	xorwf	lcdCommand@cmd^0,w,c
  2737  0012C2  B4D8               	btfsc	status,2,c
  2738  0012C4  EF66  F009         	goto	u1151
  2739  0012C8  EF68  F009         	goto	u1150
  2740  0012CC                     u1151:
  2741  0012CC  EF70  F009         	goto	l1650
  2742  0012D0                     u1150:
  2743  0012D0  0408               	decf	lcdCommand@cmd^0,w,c
  2744  0012D2  A4D8               	btfss	status,2,c
  2745  0012D4  EF6E  F009         	goto	u1161
  2746  0012D8  EF70  F009         	goto	u1160
  2747  0012DC                     u1161:
  2748  0012DC  EF74  F009         	goto	l1652
  2749  0012E0                     u1160:
  2750  0012E0                     l1650:
  2751                           
  2752                           ;lcd.c: 68:         Delay2ms();
  2753  0012E0  EC09  F00B         	call	_Delay2ms	;wreg free
  2754                           
  2755                           ;lcd.c: 69:     } else {
  2756  0012E4  EF76  F009         	goto	l137
  2757  0012E8                     l1652:
  2758                           
  2759                           ;lcd.c: 70:         Delay40us();
  2760  0012E8  EC17  F00B         	call	_Delay40us	;wreg free
  2761  0012EC                     l137:
  2762  0012EC  0012               	return		;funcret
  2763  0012EE                     __end_of_lcdCommand:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _digitalWrite *****************
  2767 ;; Defined at:
  2768 ;;		line 14 in file "io.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  pin             2    0[COMRAM] int 
  2771 ;;  value           2    2[COMRAM] int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2783 ;;      Params:         4       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0
  2785 ;;      Temps:          2       0       0       0       0       0       0
  2786 ;;      Totals:         6       0       0       0       0       0       0
  2787 ;;Total ram usage:        6 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_lcdCommand
  2793 ;;		_lcdData
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text15
  2798  000C8E                     __ptext15:
  2799                           	callstack 0
  2800  000C8E                     _digitalWrite:
  2801                           	callstack 27
  2802  000C8E                     
  2803                           ;io.c: 16:     if(pin <8){
  2804  000C8E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2805  000C90  EF55  F006         	goto	u950
  2806  000C94  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2807  000C96  E107               	bnz	u951
  2808  000C98  0E08               	movlw	8
  2809  000C9A  5C01               	subwf	digitalWrite@pin^0,w,c
  2810  000C9C  B0D8               	btfsc	status,0,c
  2811  000C9E  EF53  F006         	goto	u951
  2812  000CA2  EF55  F006         	goto	u950
  2813  000CA6                     u951:
  2814  000CA6  EF7F  F006         	goto	l1600
  2815  000CAA                     u950:
  2816  000CAA                     
  2817                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2818  000CAA  5003               	movf	digitalWrite@value^0,w,c
  2819  000CAC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2820  000CAE  B4D8               	btfsc	status,2,c
  2821  000CB0  EF5C  F006         	goto	u961
  2822  000CB4  EF5E  F006         	goto	u960
  2823  000CB8                     u961:
  2824  000CB8  EF6E  F006         	goto	l1598
  2825  000CBC                     u960:
  2826  000CBC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2827  000CC0  0E01               	movlw	1
  2828  000CC2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2829  000CC4  2A05               	incf	??_digitalWrite^0,f,c
  2830  000CC6  EF67  F006         	goto	u974
  2831  000CCA                     u975:
  2832  000CCA  90D8               	bcf	status,0,c
  2833  000CCC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2834  000CCE                     u974:
  2835  000CCE  2E05               	decfsz	??_digitalWrite^0,f,c
  2836  000CD0  EF65  F006         	goto	u975
  2837  000CD4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2838  000CD6  1280               	iorwf	128,f,c	;volatile
  2839  000CD8  EF6D  F007         	goto	l42
  2840  000CDC                     l1598:
  2841  000CDC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2842  000CE0  0E01               	movlw	1
  2843  000CE2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2844  000CE4  2A05               	incf	??_digitalWrite^0,f,c
  2845  000CE6  EF77  F006         	goto	u984
  2846  000CEA                     u985:
  2847  000CEA  90D8               	bcf	status,0,c
  2848  000CEC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2849  000CEE                     u984:
  2850  000CEE  2E05               	decfsz	??_digitalWrite^0,f,c
  2851  000CF0  EF75  F006         	goto	u985
  2852  000CF4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2853  000CF6  0AFF               	xorlw	255
  2854  000CF8  1680               	andwf	128,f,c	;volatile
  2855  000CFA  EF6D  F007         	goto	l42
  2856  000CFE                     l1600:
  2857  000CFE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2858  000D00  EF8D  F006         	goto	u990
  2859  000D04  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2860  000D06  E107               	bnz	u991
  2861  000D08  0E10               	movlw	16
  2862  000D0A  5C01               	subwf	digitalWrite@pin^0,w,c
  2863  000D0C  B0D8               	btfsc	status,0,c
  2864  000D0E  EF8B  F006         	goto	u991
  2865  000D12  EF8D  F006         	goto	u990
  2866  000D16                     u991:
  2867  000D16  EFBB  F006         	goto	l1608
  2868  000D1A                     u990:
  2869  000D1A                     
  2870                           ;io.c: 20:         pin -=8;
  2871  000D1A  0EF8               	movlw	248
  2872  000D1C  2601               	addwf	digitalWrite@pin^0,f,c
  2873  000D1E  0EFF               	movlw	255
  2874  000D20  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2875                           
  2876                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2877  000D22  5003               	movf	digitalWrite@value^0,w,c
  2878  000D24  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2879  000D26  B4D8               	btfsc	status,2,c
  2880  000D28  EF98  F006         	goto	u1001
  2881  000D2C  EF9A  F006         	goto	u1000
  2882  000D30                     u1001:
  2883  000D30  EFAA  F006         	goto	l1606
  2884  000D34                     u1000:
  2885  000D34  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2886  000D38  0E01               	movlw	1
  2887  000D3A  6E06               	movwf	(??_digitalWrite+1)^0,c
  2888  000D3C  2A05               	incf	??_digitalWrite^0,f,c
  2889  000D3E  EFA3  F006         	goto	u1014
  2890  000D42                     u1015:
  2891  000D42  90D8               	bcf	status,0,c
  2892  000D44  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2893  000D46                     u1014:
  2894  000D46  2E05               	decfsz	??_digitalWrite^0,f,c
  2895  000D48  EFA1  F006         	goto	u1015
  2896  000D4C  5006               	movf	(??_digitalWrite+1)^0,w,c
  2897  000D4E  1281               	iorwf	129,f,c	;volatile
  2898  000D50  EF6D  F007         	goto	l42
  2899  000D54                     l1606:
  2900  000D54  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2901  000D58  0E01               	movlw	1
  2902  000D5A  6E06               	movwf	(??_digitalWrite+1)^0,c
  2903  000D5C  2A05               	incf	??_digitalWrite^0,f,c
  2904  000D5E  EFB3  F006         	goto	u1024
  2905  000D62                     u1025:
  2906  000D62  90D8               	bcf	status,0,c
  2907  000D64  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2908  000D66                     u1024:
  2909  000D66  2E05               	decfsz	??_digitalWrite^0,f,c
  2910  000D68  EFB1  F006         	goto	u1025
  2911  000D6C  5006               	movf	(??_digitalWrite+1)^0,w,c
  2912  000D6E  0AFF               	xorlw	255
  2913  000D70  1681               	andwf	129,f,c	;volatile
  2914  000D72  EF6D  F007         	goto	l42
  2915  000D76                     l1608:
  2916  000D76  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2917  000D78  EFC9  F006         	goto	u1030
  2918  000D7C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2919  000D7E  E107               	bnz	u1031
  2920  000D80  0E18               	movlw	24
  2921  000D82  5C01               	subwf	digitalWrite@pin^0,w,c
  2922  000D84  B0D8               	btfsc	status,0,c
  2923  000D86  EFC7  F006         	goto	u1031
  2924  000D8A  EFC9  F006         	goto	u1030
  2925  000D8E                     u1031:
  2926  000D8E  EFF7  F006         	goto	l1616
  2927  000D92                     u1030:
  2928  000D92                     
  2929                           ;io.c: 24:         pin -=16;
  2930  000D92  0EF0               	movlw	240
  2931  000D94  2601               	addwf	digitalWrite@pin^0,f,c
  2932  000D96  0EFF               	movlw	255
  2933  000D98  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2934                           
  2935                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2936  000D9A  5003               	movf	digitalWrite@value^0,w,c
  2937  000D9C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2938  000D9E  B4D8               	btfsc	status,2,c
  2939  000DA0  EFD4  F006         	goto	u1041
  2940  000DA4  EFD6  F006         	goto	u1040
  2941  000DA8                     u1041:
  2942  000DA8  EFE6  F006         	goto	l1614
  2943  000DAC                     u1040:
  2944  000DAC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2945  000DB0  0E01               	movlw	1
  2946  000DB2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2947  000DB4  2A05               	incf	??_digitalWrite^0,f,c
  2948  000DB6  EFDF  F006         	goto	u1054
  2949  000DBA                     u1055:
  2950  000DBA  90D8               	bcf	status,0,c
  2951  000DBC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2952  000DBE                     u1054:
  2953  000DBE  2E05               	decfsz	??_digitalWrite^0,f,c
  2954  000DC0  EFDD  F006         	goto	u1055
  2955  000DC4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2956  000DC6  1282               	iorwf	130,f,c	;volatile
  2957  000DC8  EF6D  F007         	goto	l42
  2958  000DCC                     l1614:
  2959  000DCC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2960  000DD0  0E01               	movlw	1
  2961  000DD2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2962  000DD4  2A05               	incf	??_digitalWrite^0,f,c
  2963  000DD6  EFEF  F006         	goto	u1064
  2964  000DDA                     u1065:
  2965  000DDA  90D8               	bcf	status,0,c
  2966  000DDC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2967  000DDE                     u1064:
  2968  000DDE  2E05               	decfsz	??_digitalWrite^0,f,c
  2969  000DE0  EFED  F006         	goto	u1065
  2970  000DE4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2971  000DE6  0AFF               	xorlw	255
  2972  000DE8  1682               	andwf	130,f,c	;volatile
  2973  000DEA  EF6D  F007         	goto	l42
  2974  000DEE                     l1616:
  2975  000DEE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2976  000DF0  EF05  F007         	goto	u1070
  2977  000DF4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2978  000DF6  E107               	bnz	u1071
  2979  000DF8  0E20               	movlw	32
  2980  000DFA  5C01               	subwf	digitalWrite@pin^0,w,c
  2981  000DFC  B0D8               	btfsc	status,0,c
  2982  000DFE  EF03  F007         	goto	u1071
  2983  000E02  EF05  F007         	goto	u1070
  2984  000E06                     u1071:
  2985  000E06  EF33  F007         	goto	l1624
  2986  000E0A                     u1070:
  2987  000E0A                     
  2988                           ;io.c: 28:         pin -=24;
  2989  000E0A  0EE8               	movlw	232
  2990  000E0C  2601               	addwf	digitalWrite@pin^0,f,c
  2991  000E0E  0EFF               	movlw	255
  2992  000E10  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2993                           
  2994                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2995  000E12  5003               	movf	digitalWrite@value^0,w,c
  2996  000E14  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2997  000E16  B4D8               	btfsc	status,2,c
  2998  000E18  EF10  F007         	goto	u1081
  2999  000E1C  EF12  F007         	goto	u1080
  3000  000E20                     u1081:
  3001  000E20  EF22  F007         	goto	l1622
  3002  000E24                     u1080:
  3003  000E24  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3004  000E28  0E01               	movlw	1
  3005  000E2A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3006  000E2C  2A05               	incf	??_digitalWrite^0,f,c
  3007  000E2E  EF1B  F007         	goto	u1094
  3008  000E32                     u1095:
  3009  000E32  90D8               	bcf	status,0,c
  3010  000E34  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3011  000E36                     u1094:
  3012  000E36  2E05               	decfsz	??_digitalWrite^0,f,c
  3013  000E38  EF19  F007         	goto	u1095
  3014  000E3C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3015  000E3E  1283               	iorwf	131,f,c	;volatile
  3016  000E40  EF6D  F007         	goto	l42
  3017  000E44                     l1622:
  3018  000E44  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3019  000E48  0E01               	movlw	1
  3020  000E4A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3021  000E4C  2A05               	incf	??_digitalWrite^0,f,c
  3022  000E4E  EF2B  F007         	goto	u1104
  3023  000E52                     u1105:
  3024  000E52  90D8               	bcf	status,0,c
  3025  000E54  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3026  000E56                     u1104:
  3027  000E56  2E05               	decfsz	??_digitalWrite^0,f,c
  3028  000E58  EF29  F007         	goto	u1105
  3029  000E5C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3030  000E5E  0AFF               	xorlw	255
  3031  000E60  1683               	andwf	131,f,c	;volatile
  3032  000E62  EF6D  F007         	goto	l42
  3033  000E66                     l1624:
  3034  000E66  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3035  000E68  EF41  F007         	goto	u1110
  3036  000E6C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3037  000E6E  E107               	bnz	u1111
  3038  000E70  0E28               	movlw	40
  3039  000E72  5C01               	subwf	digitalWrite@pin^0,w,c
  3040  000E74  B0D8               	btfsc	status,0,c
  3041  000E76  EF3F  F007         	goto	u1111
  3042  000E7A  EF41  F007         	goto	u1110
  3043  000E7E                     u1111:
  3044  000E7E  EF6D  F007         	goto	l42
  3045  000E82                     u1110:
  3046  000E82                     
  3047                           ;io.c: 32:         pin -=32;
  3048  000E82  0EE0               	movlw	224
  3049  000E84  2601               	addwf	digitalWrite@pin^0,f,c
  3050  000E86  0EFF               	movlw	255
  3051  000E88  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3052                           
  3053                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3054  000E8A  5003               	movf	digitalWrite@value^0,w,c
  3055  000E8C  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3056  000E8E  B4D8               	btfsc	status,2,c
  3057  000E90  EF4C  F007         	goto	u1121
  3058  000E94  EF4E  F007         	goto	u1120
  3059  000E98                     u1121:
  3060  000E98  EF5E  F007         	goto	l1630
  3061  000E9C                     u1120:
  3062  000E9C  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3063  000EA0  0E01               	movlw	1
  3064  000EA2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3065  000EA4  2A05               	incf	??_digitalWrite^0,f,c
  3066  000EA6  EF57  F007         	goto	u1134
  3067  000EAA                     u1135:
  3068  000EAA  90D8               	bcf	status,0,c
  3069  000EAC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3070  000EAE                     u1134:
  3071  000EAE  2E05               	decfsz	??_digitalWrite^0,f,c
  3072  000EB0  EF55  F007         	goto	u1135
  3073  000EB4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3074  000EB6  1284               	iorwf	132,f,c	;volatile
  3075  000EB8  EF6D  F007         	goto	l42
  3076  000EBC                     l1630:
  3077  000EBC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3078  000EC0  0E01               	movlw	1
  3079  000EC2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3080  000EC4  2A05               	incf	??_digitalWrite^0,f,c
  3081  000EC6  EF67  F007         	goto	u1144
  3082  000ECA                     u1145:
  3083  000ECA  90D8               	bcf	status,0,c
  3084  000ECC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3085  000ECE                     u1144:
  3086  000ECE  2E05               	decfsz	??_digitalWrite^0,f,c
  3087  000ED0  EF65  F007         	goto	u1145
  3088  000ED4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3089  000ED6  0AFF               	xorlw	255
  3090  000ED8  1684               	andwf	132,f,c	;volatile
  3091  000EDA                     l42:
  3092  000EDA  0012               	return		;funcret
  3093  000EDC                     __end_of_digitalWrite:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _Delay2ms *****************
  3097 ;; Defined at:
  3098 ;;		line 39 in file "lcd.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  i               1    1[COMRAM] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, status,2, status,0, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         0       0       0       0       0       0       0
  3113 ;;      Locals:         1       0       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0
  3115 ;;      Totals:         1       0       0       0       0       0       0
  3116 ;;Total ram usage:        1 bytes
  3117 ;; Hardware stack levels used: 1
  3118 ;; Hardware stack levels required when called: 1
  3119 ;; This function calls:
  3120 ;;		_Delay40us
  3121 ;; This function is called by:
  3122 ;;		_lcdCommand
  3123 ;;		_lcdInit
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text16
  3128  001612                     __ptext16:
  3129                           	callstack 0
  3130  001612                     _Delay2ms:
  3131                           	callstack 26
  3132  001612                     
  3133                           ;lcd.c: 41:  unsigned char i;;lcd.c: 42:  for(i=0; i < 50; i++)
  3134  001612  0E00               	movlw	0
  3135  001614  6E02               	movwf	Delay2ms@i^0,c
  3136  001616                     l1054:
  3137                           
  3138                           ;lcd.c: 43:  {;lcd.c: 44:   Delay40us();
  3139  001616  EC17  F00B         	call	_Delay40us	;wreg free
  3140  00161A                     
  3141                           ;lcd.c: 45:  }
  3142  00161A  2A02               	incf	Delay2ms@i^0,f,c
  3143  00161C  0E31               	movlw	49
  3144  00161E  6402               	cpfsgt	Delay2ms@i^0,c
  3145  001620  EF14  F00B         	goto	u221
  3146  001624  EF16  F00B         	goto	u220
  3147  001628                     u221:
  3148  001628  EF0B  F00B         	goto	l1054
  3149  00162C                     u220:
  3150  00162C  0012               	return		;funcret
  3151  00162E                     __end_of_Delay2ms:
  3152                           	callstack 0
  3153                           
  3154 ;; *************** function _Delay40us *****************
  3155 ;; Defined at:
  3156 ;;		line 33 in file "lcd.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;		None
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  i               1    0[COMRAM] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      void 
  3163 ;; Registers used:
  3164 ;;		wreg, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3170 ;;      Params:         0       0       0       0       0       0       0
  3171 ;;      Locals:         1       0       0       0       0       0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0
  3173 ;;      Totals:         1       0       0       0       0       0       0
  3174 ;;Total ram usage:        1 bytes
  3175 ;; Hardware stack levels used: 1
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_Delay2ms
  3180 ;;		_lcdCommand
  3181 ;;		_lcdData
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           	psect	text17
  3186  00162E                     __ptext17:
  3187                           	callstack 0
  3188  00162E                     _Delay40us:
  3189                           	callstack 27
  3190  00162E                     
  3191                           ;lcd.c: 35:  unsigned char i;;lcd.c: 36:  for(i=0; i < 25; i++);
  3192  00162E  0E00               	movlw	0
  3193  001630  6E01               	movwf	Delay40us@i^0,c
  3194  001632                     l1004:
  3195  001632  2A01               	incf	Delay40us@i^0,f,c
  3196  001634  0E18               	movlw	24
  3197  001636  6401               	cpfsgt	Delay40us@i^0,c
  3198  001638  EF20  F00B         	goto	u11
  3199  00163C  EF22  F00B         	goto	u10
  3200  001640                     u11:
  3201  001640  EF19  F00B         	goto	l1004
  3202  001644                     u10:
  3203  001644  0012               	return		;funcret
  3204  001646                     __end_of_Delay40us:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _kpRead *****************
  3208 ;; Defined at:
  3209 ;;		line 35 in file "keypad.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  2    0[COMRAM] unsigned int 
  3216 ;; Registers used:
  3217 ;;		None
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3223 ;;      Params:         2       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; This function calls:
  3230 ;;		Nothing
  3231 ;; This function is called by:
  3232 ;;		_main
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	text18
  3237  001670                     __ptext18:
  3238                           	callstack 0
  3239  001670                     _kpRead:
  3240                           	callstack 30
  3241  001670                     
  3242                           ;keypad.c: 36:     return valor;
  3243  001670  C049  F001         	movff	_valor,?_kpRead
  3244  001674  C04A  F002         	movff	_valor+1,?_kpRead+1
  3245  001678  0012               	return		;funcret
  3246  00167A                     __end_of_kpRead:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _kpInit *****************
  3250 ;; Defined at:
  3251 ;;		line 87 in file "keypad.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, status,2, status,0
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3265 ;;      Params:         0       0       0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0
  3268 ;;      Totals:         0       0       0       0       0       0       0
  3269 ;;Total ram usage:        0 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; This function calls:
  3272 ;;		Nothing
  3273 ;; This function is called by:
  3274 ;;		_main
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           	psect	text19
  3279  00167A                     __ptext19:
  3280                           	callstack 0
  3281  00167A                     _kpInit:
  3282                           	callstack 30
  3283  00167A                     
  3284                           ;keypad.c: 89:     TRISB &= 0x07;
  3285  00167A  0E07               	movlw	7
  3286  00167C  1693               	andwf	147,f,c	;volatile
  3287                           
  3288                           ;keypad.c: 91:     TRISD |= 0x0f;
  3289  00167E  0E0F               	movlw	15
  3290  001680  1295               	iorwf	149,f,c	;volatile
  3291  001682  0012               	return		;funcret
  3292  001684                     __end_of_kpInit:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _kpDebounce *****************
  3296 ;; Defined at:
  3297 ;;		line 39 in file "keypad.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;		None
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  k               2    6[COMRAM] int 
  3302 ;;  i               1    9[COMRAM] unsigned char 
  3303 ;;  j               1    8[COMRAM] unsigned char 
  3304 ;;  old_D           1    5[COMRAM] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, prodl, prodh
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3314 ;;      Params:         0       0       0       0       0       0       0
  3315 ;;      Locals:         5       0       0       0       0       0       0
  3316 ;;      Temps:          5       0       0       0       0       0       0
  3317 ;;      Totals:        10       0       0       0       0       0       0
  3318 ;;Total ram usage:       10 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text20
  3328  000EDC                     __ptext20:
  3329                           	callstack 0
  3330  000EDC                     _kpDebounce:
  3331                           	callstack 30
  3332  000EDC                     
  3333                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3334  000EDC  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3335  000EE0                     
  3336                           ;keypad.c: 51:     TRISD |= 0x0f;
  3337  000EE0  0E0F               	movlw	15
  3338  000EE2  1295               	iorwf	149,f,c	;volatile
  3339  000EE4                     
  3340                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3341  000EE4  0E00               	movlw	0
  3342  000EE6  6E0A               	movwf	kpDebounce@i^0,c
  3343  000EE8                     l1228:
  3344                           
  3345                           ;keypad.c: 55:         TRISB &= 0xF8;
  3346  000EE8  0EF8               	movlw	248
  3347  000EEA  1693               	andwf	147,f,c	;volatile
  3348                           
  3349                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3350  000EEC  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3351  000EF0  0E01               	movlw	1
  3352  000EF2  6E02               	movwf	(??_kpDebounce+1)^0,c
  3353  000EF4  2A01               	incf	??_kpDebounce^0,f,c
  3354  000EF6  EF7F  F007         	goto	u554
  3355  000EFA                     u555:
  3356  000EFA  90D8               	bcf	status,0,c
  3357  000EFC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3358  000EFE                     u554:
  3359  000EFE  2E01               	decfsz	??_kpDebounce^0,f,c
  3360  000F00  EF7D  F007         	goto	u555
  3361  000F04  5002               	movf	(??_kpDebounce+1)^0,w,c
  3362  000F06  1293               	iorwf	147,f,c	;volatile
  3363                           
  3364                           ;keypad.c: 59:         PORTB |= 0x07;
  3365  000F08  0E07               	movlw	7
  3366  000F0A  1281               	iorwf	129,f,c	;volatile
  3367                           
  3368                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3369  000F0C  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3370  000F10  0E01               	movlw	1
  3371  000F12  6E02               	movwf	(??_kpDebounce+1)^0,c
  3372  000F14  2A01               	incf	??_kpDebounce^0,f,c
  3373  000F16  EF8F  F007         	goto	u564
  3374  000F1A                     u565:
  3375  000F1A  90D8               	bcf	status,0,c
  3376  000F1C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3377  000F1E                     u564:
  3378  000F1E  2E01               	decfsz	??_kpDebounce^0,f,c
  3379  000F20  EF8D  F007         	goto	u565
  3380  000F24  5002               	movf	(??_kpDebounce+1)^0,w,c
  3381  000F26  0AFF               	xorlw	255
  3382  000F28  1681               	andwf	129,f,c	;volatile
  3383  000F2A                     
  3384                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3385  000F2A  0E00               	movlw	0
  3386  000F2C  6E08               	movwf	(kpDebounce@k+1)^0,c
  3387  000F2E  0E00               	movlw	0
  3388  000F30  6E07               	movwf	kpDebounce@k^0,c
  3389  000F32                     l1236:
  3390  000F32  4A07               	infsnz	kpDebounce@k^0,f,c
  3391  000F34  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3392  000F36  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3393  000F38  EFA7  F007         	goto	u571
  3394  000F3C  5008               	movf	(kpDebounce@k+1)^0,w,c
  3395  000F3E  E109               	bnz	u570
  3396  000F40  0E0A               	movlw	10
  3397  000F42  5C07               	subwf	kpDebounce@k^0,w,c
  3398  000F44  A0D8               	btfss	status,0,c
  3399  000F46  EFA7  F007         	goto	u571
  3400  000F4A  EFA9  F007         	goto	u570
  3401  000F4E                     u571:
  3402  000F4E  EF99  F007         	goto	l1236
  3403  000F52                     u570:
  3404  000F52                     
  3405                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3406  000F52  0E00               	movlw	0
  3407  000F54  6E09               	movwf	kpDebounce@j^0,c
  3408  000F56                     l1246:
  3409                           
  3410                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3411  000F56  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3412  000F5A  0E01               	movlw	1
  3413  000F5C  6E02               	movwf	(??_kpDebounce+1)^0,c
  3414  000F5E  2A01               	incf	??_kpDebounce^0,f,c
  3415  000F60  EFB4  F007         	goto	u584
  3416  000F64                     u585:
  3417  000F64  90D8               	bcf	status,0,c
  3418  000F66  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3419  000F68                     u584:
  3420  000F68  2E01               	decfsz	??_kpDebounce^0,f,c
  3421  000F6A  EFB2  F007         	goto	u585
  3422  000F6E  5002               	movf	(??_kpDebounce+1)^0,w,c
  3423  000F70  1483               	andwf	131,w,c	;volatile
  3424  000F72  0900               	iorlw	0
  3425  000F74  A4D8               	btfss	status,2,c
  3426  000F76  EFBF  F007         	goto	u591
  3427  000F7A  EFC1  F007         	goto	u590
  3428  000F7E                     u591:
  3429  000F7E  EFD9  F007         	goto	l1250
  3430  000F82                     u590:
  3431  000F82                     
  3432                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3433  000F82  500A               	movf	kpDebounce@i^0,w,c
  3434  000F84  0D04               	mullw	4
  3435  000F86  50F3               	movf	243,w,c
  3436  000F88  2409               	addwf	kpDebounce@j^0,w,c
  3437  000F8A  6E01               	movwf	??_kpDebounce^0,c
  3438  000F8C  0E01               	movlw	1
  3439  000F8E  6E02               	movwf	(??_kpDebounce+1)^0,c
  3440  000F90  0E00               	movlw	0
  3441  000F92  6E03               	movwf	(??_kpDebounce+2)^0,c
  3442  000F94  2A01               	incf	??_kpDebounce^0,f,c
  3443  000F96  EFD0  F007         	goto	u604
  3444  000F9A                     u605:
  3445  000F9A  90D8               	bcf	status,0,c
  3446  000F9C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3447  000F9E  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3448  000FA0                     u604:
  3449  000FA0  2E01               	decfsz	??_kpDebounce^0,f,c
  3450  000FA2  EFCD  F007         	goto	u605
  3451  000FA6  5002               	movf	(??_kpDebounce+1)^0,w,c
  3452  000FA8  1247               	iorwf	kpDebounce@valorNovo^0,f,c
  3453  000FAA  5003               	movf	(??_kpDebounce+2)^0,w,c
  3454  000FAC  1248               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3455                           
  3456                           ;keypad.c: 69:             } else {
  3457  000FAE  EFF3  F007         	goto	l1252
  3458  000FB2                     l1250:
  3459                           
  3460                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3461  000FB2  500A               	movf	kpDebounce@i^0,w,c
  3462  000FB4  0D04               	mullw	4
  3463  000FB6  50F3               	movf	243,w,c
  3464  000FB8  2409               	addwf	kpDebounce@j^0,w,c
  3465  000FBA  6E01               	movwf	??_kpDebounce^0,c
  3466  000FBC  0E01               	movlw	1
  3467  000FBE  6E02               	movwf	(??_kpDebounce+1)^0,c
  3468  000FC0  0E00               	movlw	0
  3469  000FC2  6E03               	movwf	(??_kpDebounce+2)^0,c
  3470  000FC4  2A01               	incf	??_kpDebounce^0,f,c
  3471  000FC6  EFE8  F007         	goto	u614
  3472  000FCA                     u615:
  3473  000FCA  90D8               	bcf	status,0,c
  3474  000FCC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3475  000FCE  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3476  000FD0                     u614:
  3477  000FD0  2E01               	decfsz	??_kpDebounce^0,f,c
  3478  000FD2  EFE5  F007         	goto	u615
  3479  000FD6  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3480  000FD8  6E04               	movwf	(??_kpDebounce+3)^0,c
  3481  000FDA  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3482  000FDC  6E05               	movwf	(??_kpDebounce+4)^0,c
  3483  000FDE  5004               	movf	(??_kpDebounce+3)^0,w,c
  3484  000FE0  1647               	andwf	kpDebounce@valorNovo^0,f,c
  3485  000FE2  5005               	movf	(??_kpDebounce+4)^0,w,c
  3486  000FE4  1648               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3487  000FE6                     l1252:
  3488                           
  3489                           ;keypad.c: 72:         }
  3490  000FE6  2A09               	incf	kpDebounce@j^0,f,c
  3491  000FE8  0E03               	movlw	3
  3492  000FEA  6409               	cpfsgt	kpDebounce@j^0,c
  3493  000FEC  EFFA  F007         	goto	u621
  3494  000FF0  EFFC  F007         	goto	u620
  3495  000FF4                     u621:
  3496  000FF4  EFAB  F007         	goto	l1246
  3497  000FF8                     u620:
  3498  000FF8                     
  3499                           ;keypad.c: 73:     }
  3500  000FF8  2A0A               	incf	kpDebounce@i^0,f,c
  3501  000FFA  0E02               	movlw	2
  3502  000FFC  640A               	cpfsgt	kpDebounce@i^0,c
  3503  000FFE  EF03  F008         	goto	u631
  3504  001002  EF05  F008         	goto	u630
  3505  001006                     u631:
  3506  001006  EF74  F007         	goto	l1228
  3507  00100A                     u630:
  3508  00100A                     
  3509                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3510  00100A  5047               	movf	kpDebounce@valorNovo^0,w,c
  3511  00100C  1845               	xorwf	kpDebounce@valorAntigo^0,w,c
  3512  00100E  E107               	bnz	u641
  3513  001010  5048               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3514  001012  1846               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3515  001014  A4D8               	btfss	status,2,c
  3516  001016  EF0F  F008         	goto	u641
  3517  00101A  EF11  F008         	goto	u640
  3518  00101E                     u641:
  3519  00101E  EF14  F008         	goto	l1264
  3520  001022                     u640:
  3521  001022                     
  3522                           ;keypad.c: 75:         tempo--;
  3523  001022  0650               	decf	kpDebounce@tempo^0,f,c
  3524                           
  3525                           ;keypad.c: 76:     } else {
  3526  001024  EF1A  F008         	goto	l107
  3527  001028                     l1264:
  3528                           
  3529                           ;keypad.c: 77:         tempo = 10;
  3530  001028  0E0A               	movlw	10
  3531  00102A  6E50               	movwf	kpDebounce@tempo^0,c
  3532  00102C                     
  3533                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3534  00102C  C047  F045         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3535  001030  C048  F046         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3536  001034                     l107:
  3537                           
  3538                           ;keypad.c: 80:     if (tempo == 0) {
  3539  001034  5050               	movf	kpDebounce@tempo^0,w,c
  3540  001036  A4D8               	btfss	status,2,c
  3541  001038  EF20  F008         	goto	u651
  3542  00103C  EF22  F008         	goto	u650
  3543  001040                     u651:
  3544  001040  EF26  F008         	goto	l108
  3545  001044                     u650:
  3546  001044                     
  3547                           ;keypad.c: 81:         valor = valorAntigo;
  3548  001044  C045  F049         	movff	kpDebounce@valorAntigo,_valor
  3549  001048  C046  F04A         	movff	kpDebounce@valorAntigo+1,_valor+1
  3550  00104C                     l108:
  3551                           
  3552                           ;keypad.c: 83:     PORTD = old_D;
  3553  00104C  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3554  001050                     
  3555                           ;keypad.c: 84:     TRISD = 0x00;
  3556  001050  0E00               	movlw	0
  3557  001052  6E95               	movwf	149,c	;volatile
  3558  001054  0012               	return		;funcret
  3559  001056                     __end_of_kpDebounce:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _atraso_ms *****************
  3563 ;; Defined at:
  3564 ;;		line 3 in file "atraso.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  t               2    0[COMRAM] unsigned int 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  i               2    2[COMRAM] volatile unsigned int 
  3569 ;;  k               1    5[COMRAM] volatile unsigned char 
  3570 ;;  j               1    4[COMRAM] volatile unsigned char 
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3580 ;;      Params:         2       0       0       0       0       0       0
  3581 ;;      Locals:         4       0       0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0
  3583 ;;      Totals:         6       0       0       0       0       0       0
  3584 ;;Total ram usage:        6 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text21
  3594  0014AA                     __ptext21:
  3595                           	callstack 0
  3596  0014AA                     _atraso_ms:
  3597                           	callstack 30
  3598  0014AA                     
  3599                           ;atraso.c: 4:     volatile unsigned char j, k;;atraso.c: 5:     volatile unsigned int i;
      +                          ;atraso.c: 6:     for (i = 0; i < t; i++) {
  3600  0014AA  0E00               	movlw	0
  3601  0014AC  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3602  0014AE  0E00               	movlw	0
  3603  0014B0  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3604  0014B2  EF7B  F00A         	goto	l1856
  3605  0014B6                     l1834:
  3606                           
  3607                           ;atraso.c: 7:         for (j = 0; j < 41; j++) {
  3608  0014B6  0E00               	movlw	0
  3609  0014B8  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3610  0014BA                     l1836:
  3611  0014BA  0E28               	movlw	40
  3612  0014BC  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3613  0014BE  EF63  F00A         	goto	u1481
  3614  0014C2  EF65  F00A         	goto	u1480
  3615  0014C6                     u1481:
  3616  0014C6  EF67  F00A         	goto	l1840
  3617  0014CA                     u1480:
  3618  0014CA  EF79  F00A         	goto	l1854
  3619  0014CE                     l1840:
  3620                           
  3621                           ;atraso.c: 8:             for (k = 0; k < 3; k++);
  3622  0014CE  0E00               	movlw	0
  3623  0014D0  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3624  0014D2                     l1842:
  3625  0014D2  0E02               	movlw	2
  3626  0014D4  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3627  0014D6  EF6F  F00A         	goto	u1491
  3628  0014DA  EF71  F00A         	goto	u1490
  3629  0014DE                     u1491:
  3630  0014DE  EF73  F00A         	goto	l1846
  3631  0014E2                     u1490:
  3632  0014E2  EF76  F00A         	goto	l1850
  3633  0014E6                     l1846:
  3634  0014E6  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3635  0014E8  EF69  F00A         	goto	l1842
  3636  0014EC                     l1850:
  3637                           
  3638                           ;atraso.c: 9:         }
  3639  0014EC  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3640  0014EE  EF5D  F00A         	goto	l1836
  3641  0014F2                     l1854:
  3642                           
  3643                           ;atraso.c: 10:     }
  3644  0014F2  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3645  0014F4  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3646  0014F6                     l1856:
  3647  0014F6  5001               	movf	atraso_ms@t^0,w,c
  3648  0014F8  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3649  0014FA  5002               	movf	(atraso_ms@t+1)^0,w,c
  3650  0014FC  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3651  0014FE  A0D8               	btfss	status,0,c
  3652  001500  EF84  F00A         	goto	u1501
  3653  001504  EF86  F00A         	goto	u1500
  3654  001508                     u1501:
  3655  001508  EF5B  F00A         	goto	l1834
  3656  00150C                     u1500:
  3657  00150C  0012               	return		;funcret
  3658  00150E                     __end_of_atraso_ms:
  3659                           	callstack 0
  3660                           
  3661                           	psect	rparam
  3662  0000                     
  3663                           	psect	idloc
  3664                           
  3665                           ;Config register IDLOC0 @ 0x200000
  3666                           ;	unspecified, using default values
  3667  200000                     	org	2097152
  3668  200000  FF                 	db	255
  3669                           
  3670                           ;Config register IDLOC1 @ 0x200001
  3671                           ;	unspecified, using default values
  3672  200001                     	org	2097153
  3673  200001  FF                 	db	255
  3674                           
  3675                           ;Config register IDLOC2 @ 0x200002
  3676                           ;	unspecified, using default values
  3677  200002                     	org	2097154
  3678  200002  FF                 	db	255
  3679                           
  3680                           ;Config register IDLOC3 @ 0x200003
  3681                           ;	unspecified, using default values
  3682  200003                     	org	2097155
  3683  200003  FF                 	db	255
  3684                           
  3685                           ;Config register IDLOC4 @ 0x200004
  3686                           ;	unspecified, using default values
  3687  200004                     	org	2097156
  3688  200004  FF                 	db	255
  3689                           
  3690                           ;Config register IDLOC5 @ 0x200005
  3691                           ;	unspecified, using default values
  3692  200005                     	org	2097157
  3693  200005  FF                 	db	255
  3694                           
  3695                           ;Config register IDLOC6 @ 0x200006
  3696                           ;	unspecified, using default values
  3697  200006                     	org	2097158
  3698  200006  FF                 	db	255
  3699                           
  3700                           ;Config register IDLOC7 @ 0x200007
  3701                           ;	unspecified, using default values
  3702  200007                     	org	2097159
  3703  200007  FF                 	db	255
  3704                           
  3705                           	psect	config
  3706                           
  3707                           ; Padding undefined space
  3708  300000                     	org	3145728
  3709  300000  FF                 	db	255
  3710                           
  3711                           ;Config register CONFIG1H @ 0x300001
  3712                           ;	Oscillator Selection bits
  3713                           ;	OSC = HS, HS oscillator
  3714                           ;	Fail-Safe Clock Monitor Enable bit
  3715                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3716                           ;	Internal/External Oscillator Switchover bit
  3717                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3718  300001                     	org	3145729
  3719  300001  02                 	db	2
  3720                           
  3721                           ;Config register CONFIG2L @ 0x300002
  3722                           ;	Power-up Timer Enable bit
  3723                           ;	PWRT = OFF, PWRT disabled
  3724                           ;	Brown-out Reset Enable bits
  3725                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3726                           ;	Brown Out Reset Voltage bits
  3727                           ;	BORV = 0x2E, user specified literal
  3728  300002                     	org	3145730
  3729  300002  71                 	db	369
  3730                           
  3731                           ;Config register CONFIG2H @ 0x300003
  3732                           ;	Watchdog Timer Enable bit
  3733                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3734                           ;	Watchdog Timer Postscale Select bits
  3735                           ;	WDTPS = 1, 1:1
  3736  300003                     	org	3145731
  3737  300003  00                 	db	0
  3738                           
  3739                           ; Padding undefined space
  3740  300004                     	org	3145732
  3741  300004  FF                 	db	255
  3742                           
  3743                           ;Config register CONFIG3H @ 0x300005
  3744                           ;	CCP2 MUX bit
  3745                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3746                           ;	PORTB A/D Enable bit
  3747                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3748                           ;	Low-Power Timer1 Oscillator Enable bit
  3749                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3750                           ;	MCLR Pin Enable bit
  3751                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3752  300005                     	org	3145733
  3753  300005  83                 	db	131
  3754                           
  3755                           ;Config register CONFIG4L @ 0x300006
  3756                           ;	Stack Full/Underflow Reset Enable bit
  3757                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3758                           ;	Single-Supply ICSP Enable bit
  3759                           ;	LVP = OFF, Single-Supply ICSP disabled
  3760                           ;	Extended Instruction Set Enable bit
  3761                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3762                           ;	Background Debugger Enable bit
  3763                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3764  300006                     	org	3145734
  3765  300006  80                 	db	128
  3766                           
  3767                           ; Padding undefined space
  3768  300007                     	org	3145735
  3769  300007  FF                 	db	255
  3770                           
  3771                           ;Config register CONFIG5L @ 0x300008
  3772                           ;	Code Protection bit
  3773                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3774                           ;	Code Protection bit
  3775                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3776                           ;	Code Protection bit
  3777                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3778                           ;	Code Protection bit
  3779                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3780  300008                     	org	3145736
  3781  300008  0F                 	db	15
  3782                           
  3783                           ;Config register CONFIG5H @ 0x300009
  3784                           ;	Boot Block Code Protection bit
  3785                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3786                           ;	Data EEPROM Code Protection bit
  3787                           ;	CPD = OFF, Data EEPROM not code-protected
  3788  300009                     	org	3145737
  3789  300009  C0                 	db	192
  3790                           
  3791                           ;Config register CONFIG6L @ 0x30000A
  3792                           ;	Write Protection bit
  3793                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3794                           ;	Write Protection bit
  3795                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3796                           ;	Write Protection bit
  3797                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3798                           ;	Write Protection bit
  3799                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3800  30000A                     	org	3145738
  3801  30000A  0F                 	db	15
  3802                           
  3803                           ;Config register CONFIG6H @ 0x30000B
  3804                           ;	Configuration Register Write Protection bit
  3805                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3806                           ;	Boot Block Write Protection bit
  3807                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3808                           ;	Data EEPROM Write Protection bit
  3809                           ;	WRTD = OFF, Data EEPROM not write-protected
  3810  30000B                     	org	3145739
  3811  30000B  E0                 	db	224
  3812                           
  3813                           ;Config register CONFIG7L @ 0x30000C
  3814                           ;	Table Read Protection bit
  3815                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3816                           ;	Table Read Protection bit
  3817                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3818                           ;	Table Read Protection bit
  3819                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3820                           ;	Table Read Protection bit
  3821                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3822  30000C                     	org	3145740
  3823  30000C  0F                 	db	15
  3824                           
  3825                           ;Config register CONFIG7H @ 0x30000D
  3826                           ;	Boot Block Table Read Protection bit
  3827                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3828  30000D                     	org	3145741
  3829  30000D  40                 	db	64
  3830                           tosu	equ	0xFFF
  3831                           tosh	equ	0xFFE
  3832                           tosl	equ	0xFFD
  3833                           stkptr	equ	0xFFC
  3834                           pclatu	equ	0xFFB
  3835                           pclath	equ	0xFFA
  3836                           pcl	equ	0xFF9
  3837                           tblptru	equ	0xFF8
  3838                           tblptrh	equ	0xFF7
  3839                           tblptrl	equ	0xFF6
  3840                           tablat	equ	0xFF5
  3841                           prodh	equ	0xFF4
  3842                           prodl	equ	0xFF3
  3843                           indf0	equ	0xFEF
  3844                           postinc0	equ	0xFEE
  3845                           postdec0	equ	0xFED
  3846                           preinc0	equ	0xFEC
  3847                           plusw0	equ	0xFEB
  3848                           fsr0h	equ	0xFEA
  3849                           fsr0l	equ	0xFE9
  3850                           wreg	equ	0xFE8
  3851                           indf1	equ	0xFE7
  3852                           postinc1	equ	0xFE6
  3853                           postdec1	equ	0xFE5
  3854                           preinc1	equ	0xFE4
  3855                           plusw1	equ	0xFE3
  3856                           fsr1h	equ	0xFE2
  3857                           fsr1l	equ	0xFE1
  3858                           bsr	equ	0xFE0
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           preinc2	equ	0xFDC
  3863                           plusw2	equ	0xFDB
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     68      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> setTemperature@str(COMRAM[6]), main@str(COMRAM[6]), main@tempoRelogio(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[13]), STR_5(CODE[4]), 
		 -> STR_4(CODE[7]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_setTemperature
    _setTemperature->_itoa
    _lcdPosition->_lcdCommand
    _itoa->___lwdiv
    _pwmSet1->___lwdiv
    ___wmul->_adc_amostra
    ___lwdiv->___wmul
    _lcd_str->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0   28649
                                             37 COMRAM    31    31      0
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                          _atraso_ms
                               _itoa
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                     _setTemperature
 ---------------------------------------------------------------------------------
 (1) _setTemperature                                      15    13      2    9400
                                             24 COMRAM    13    11      2
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                               _itoa
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          3     2      1    2332
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    2843
                                             20 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    2692
                                             20 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              7 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2129
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2339
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     290
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
     ___wmul (ARG)
       _adc_amostra (ARG)
     _adc_amostra (ARG)
   ___wmul
   _adc_amostra
   _atraso_ms
   _itoa
     ___lwdiv
     ___lwmod
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
     _lcdCommand
   _lcd_str
     _lcdData
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _setTemperature
     ___lwdiv
     ___wmul
     _adc_amostra
     _itoa
     _lcdData
     _lcdPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     44      50       1       63.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      15        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 14:29:46 2021

                        _i 004F                         l42 0EDA                         l76 0C8C  
                       l89 1678                         u10 1644                         u11 1640  
      ___wmul@multiplicand 000A       __size_of_adc_amostra 0090                        l112 1682  
                      l130 162C                        l107 1034                        l108 104C  
                      l140 1560                        l300 0826                        l109 1054  
                      l125 1644                        l143 1364                        l137 12EC  
                      l154 15B0                        l146 15CE                        l322 126E  
                      l164 150C                        l148 15EA                        l325 1610  
                      l229 1444                        l238 166E                        l190 11EC  
                      l184 11AE                        l193 115C                        l187 11B0  
                      l293 07E6                        l288 0818                        l289 07B0  
                      l823 13D8                        l816 13D0                        l833 14A8  
                      l826 14A0                        l998 162E                        u220 162C  
                      u221 1628                        _PR2 000FCB                        u620 0FF8  
                      u604 0FA0                        u621 0FF4                        u605 0F9A  
                      u630 100A                        u614 0FD0                        u631 1006  
                      u615 0FCA                        u640 1022                        u641 101E  
                      u650 1044                        u570 0F52                        u554 0EFE  
                      u651 1040                        u571 0F4E                        u555 0EFA  
                      u564 0F1E                        u565 0F1A                        u590 0F82  
                      u591 0F7E                        u584 0F68                        u585 0F64  
                      u950 0CAA                        u951 0CA6                        u960 0CBC  
                      u961 0CB8                        u990 0D1A                        u974 0CCE  
                      u991 0D16                        u975 0CCA                        u984 0CEE  
                      u985 0CEA                        _cnt 004E                        wreg 000FE8  
                     l1004 1632                       l1006 1634                       l2000 08C0  
                     l2010 0944                       l2002 08E8                       l1220 0EE0  
                     l2020 0968                       l2012 094A                       l2004 0920  
                     l1230 0F2A                       l1222 0EE4                       l1054 1616  
                     l2030 09D6                       l2022 0974                       l2014 0950  
                     l2006 092A                       l1240 0F52                       l1056 161A  
                     l1048 1612                       l2040 0A12                       l2032 09D8  
                     l2024 099E                       l2016 0956                       l2008 093E  
                     l1250 0FB2                       l1218 0EDC                       l1058 161C  
                     l2050 0A32                       l2034 09DC                       l2026 09AA  
                     l2018 095C                       l2042 0A24                       l1260 100A  
                     l1252 0FE6                       l1236 0F32                       l1228 0EE8  
                     l2044 0A2A                       l2036 09F8                       l2028 09AC  
                     l1270 1050                       l1262 1022                       l1254 0FE8  
                     l1246 0F56                       l1238 0F36                       l2046 0A2E  
                     l2038 0A04                       l1264 1028                       l1256 0FF8  
                     l1248 0F82                       l1272 167A                       l1600 0CFE  
                     l1352 165C                       l2056 1190                       l2048 0A30  
                     l1266 102C                       l1258 0FFA                       l1610 0D92  
                     l1602 0D1A                       l1354 1660                       l1268 1044  
                     l1620 0E24                       l1612 0DAC                       l1604 0D34  
                     l1700 0AB0                       l1356 1664                       l1630 0EBC  
                     l1622 0E44                       l1614 0DCC                       l1606 0D54  
                     l1710 0B44                       l1702 0ACC                       l1624 0E66  
                     l1616 0DEE                       l1608 0D76                       l1640 1292  
                     l1632 1272                       l1720 0BCE                       l1712 0B56  
                     l1704 0ADE                       l1800 1326                       l1626 0E82  
                     l1618 0E0A                       l1650 12E0                       l1642 12A6  
                     l1634 1276                       l1730 0C6A                       l1722 0BF2  
                     l1714 0B7A                       l1706 0B02                       l1810 133C  
                     l1802 132A                       l1628 0E9C                       l1652 12E8  
                     l1644 12BA                       l1636 127A                       l1724 0C18  
                     l1716 0BA0                       l1708 0B28                       l1820 1358  
                     l1812 1342                       l1804 132E                       l1740 1530  
                     l1732 1510                       l1660 1388                       l1900 067A  
                     l1646 12BE                       l1638 128E                       l1726 0C34  
                     l1718 0BBC                       l1822 135E                       l1814 1346  
                     l1806 1334                       l1742 1544                       l1734 1514  
                     l1830 1588                       l1670 13C2                       l1662 1390  
                     l1654 1366                       l1750 15B8                       l1910 06AA  
                     l1902 067E                       l1840 14CE                       l1832 14AA  
                     l1592 0C8E                       l1648 12D0                       l1728 0C46  
                     l1816 134C                       l1808 1338                       l1744 1558  
                     l1736 1518                       l1824 1562                       l1672 13C4  
                     l1664 139E                       l1656 136E                       l1760 1164  
                     l1680 1460                       l1752 15C8                       l1920 06EE  
                     l1912 06AE                       l1904 0688                       l1850 14EC  
                     l1842 14D2                       l1834 14B6                       l1594 0CAA  
                     l1818 1352                       l1746 155C                       l1738 152C  
                     l1826 156A                       l1674 13CA                       l1666 13A4  
                     l1658 1380                       l1770 11BE                       l1762 116C  
                     l1690 149A                       l1682 1468                       l1754 15DE  
                     l1930 0726                       l1922 06F8                       l1914 06CA  
                     l1906 0694                       l1836 14BA                       l1596 0CBC  
                     l1692 0A40                       l1828 1586                       l1668 13BA  
                     l1860 13FA                       l1764 1174                       l1684 1476  
                     l1676 1446                       l1780 114C                       l1756 15E4  
                     l1748 15B4                       l1940 074E                       l1932 0730  
                     l1924 0704                       l1916 06D6                       l1908 069E  
                     l1846 14E6                       l1854 14F2                       l1598 0CDC  
                     l1694 0A5C                       l1790 12EE                       l1782 15EC  
                     l1862 1416                       l1758 1160                       l1686 148C  
                     l1678 1458                       l1870 1220                       l1950 079A  
                     l1942 0752                       l1934 0736                       l1926 0710  
                     l1918 06E4                       l1856 14F6                       l1696 0A6E  
                     l1792 1316                       l1784 1608                       l1864 141E  
                     l1768 117C                       l1688 1494                       l1880 1260  
                     l1872 1238                       l1960 07D8                       l1952 07A2  
                     l1944 076E                       l1936 073C                       l1928 071A  
                     l1698 0A8E                       l1794 131A                       l1866 1436  
                     l1858 13DC                       l1778 1056                       l1882 1266  
                     l1874 124A                       l1962 07DA                       l1954 07A4  
                     l1946 077A                       l1938 0742                       l1970 0818  
                     l1788 1670                       l1796 131E                       l1876 1254  
                     l1868 11EE                       l1980 085C                       l1972 0834  
                     l1964 07F4                       l1956 07BE                       l1948 0788  
                     l1798 1322                       l1878 125A                       l1990 089C  
                     l1982 0862                       l1974 083A                       l1966 0806  
                     l1958 07D0                       l1992 08A2                       l1984 0872  
                     l1976 0846                       l1968 080E                       l1896 0646  
                     l1994 08A8                       l1986 087E                       l1978 0856  
                     l1898 0676                       l1996 08AE                       l1988 0888  
                     l1998 08BA                       STR_1 0601                       STR_2 0610  
                     STR_3 062B                       STR_4 0638                       STR_5 063F  
                     STR_6 061E                       STR_7 063F                       STR_8 0643  
                     u1000 0D34                       u1001 0D30                       u1110 0E82  
                     u1030 0D92                       u1014 0D46                       u1111 0E7E  
                     u1031 0D8E                       u1015 0D42                       u1120 0E9C  
                     u1104 0E56                       u1040 0DAC                       u1024 0D66  
                     u1200 1458                       u1121 0E98                       u1105 0E52  
                     u1041 0DA8                       u1025 0D62                       u1201 1454  
                     u1210 1476                       u1211 1472                       u1220 148C  
                     u1221 1488                       u1134 0EAE                       u1070 0E0A  
                     u1054 0DBE                       u1150 12D0                       u1310 0B44  
                     u1230 0A5C                       u1135 0EAA                       u1071 0E06  
                     u1055 0DBA                       u1151 12CC                       u1311 0B40  
                     u1231 0A58                       u1144 0ECE                       u1080 0E24  
                     u1064 0DDE                       u1160 12E0                       u1400 0C46  
                     u1320 0B56                       u1304 0B18                       u1240 0A6E  
                     u1145 0ECA                       u1081 0E20                       u1065 0DDA  
                     u1161 12DC                       u1401 0C42                       u1321 0B52  
                     u1305 0B14                       u1241 0A6A                       u1170 1380  
                     u1171 137C                       u1500 150C                       u1180 139E  
                     u1501 1508                       u1181 139A                       u1094 0E36  
                     u1414 0C5C                       u1350 0BBC                       u1334 0B6C  
                     u1270 0ACC                       u1254 0A80                       u1190 13BA  
                     u1430 15C8                       u1510 06CA                       u1095 0E32  
                     u1415 0C58                       u1351 0BB8                       u1335 0B68  
                     u1271 0AC8                       u1255 0A7C                       u1191 13B6  
                     u1431 15C4                       u1511 06C6                       u1424 0C80  
                     u1360 0BCE                       u1344 0B90                       u1280 0ADE  
                     u1264 0AA0                       u1440 15DE                       u1600 0826  
                     u1520 06E4                       u1425 0C7C                       u1361 0BCA  
                     u1345 0B8C                       u1281 0ADA                       u1265 0A9C  
                     u1441 15DA                       u1601 0822                       u1521 06E0  
                     u1450 11BE                       u1610 0834                       u1530 076E  
                     u1451 11BA                       u1611 0830                       u1531 076A  
                     u1620 099E                       u1540 0788                       u1621 099A  
                     u1541 0784                       u1390 0C34                       u1374 0BE4  
                     u1294 0AF4                       u1470 15B0                       u1630 09D6  
                     u1550 079A                       u1391 0C30                       u1375 0BE0  
                     u1295 0AF0                       u1471 15AC                       u1631 09D2  
                     u1551 0796                       u1480 14CA                       u1384 0C08  
                     u1640 09F8                       u1560 07BE                       u1481 14C6  
                     u1385 0C04                       u1465 11C6                       u1641 09F4  
                     u1561 07BA                       u1490 14E2                       u1650 0A12  
                     u1570 07D0                       u1491 14DE                       u1651 0A0E  
                     u1571 07CC                       u1660 0A24                       u1580 07F4  
                     u1661 0A20                       u1581 07F0                       u1590 0806  
                     u1591 0802                       _main 0646                       _itoa 1056  
                     _perc 004D                       _tmax 004C                       _tmin 004B  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
             ___param_bank 000000    __size_of_setTemperature 0082                      ?_main 0001  
                    ?_itoa 0015                      _T2CON 000FCA            __end_of___lwdiv 13DA  
          __end_of___lwmod 14AA                      _PORTA 000F80                      _PORTB 000F81  
                    _PORTC 000F82                      _PORTD 000F83                      _PORTE 000F84  
                    _TRISA 000F92                      _TRISB 000F93                      _TRISC 000F94  
                    _TRISD 000F95                      _TRISE 000F96            __end_of_lcdData 1562  
          __end_of_lcdInit 1366            __end_of_lcd_str 15B2         main@temperaturaLcd 003F  
          __end_of_pinMode 0C8E                      _valor 0049                      tablat 000FF5  
          __end_of_pwmSet1 1446            __end_of_pwmInit 1670                      status 000FD8  
         __end_of_Delay2ms 162E       __end_of_digitalWrite 0EDC            __initialization 1646  
             __end_of_main 0A40               __end_of_itoa 115E         __size_of_Delay40us 0018  
                   ??_main 0026                     ??_itoa 0019              __activetblptr 000002  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     _CCPR1L 000FBE  
                   _CCPR2L 000FBB       __size_of_lcdPosition 003A          lcdPosition@coluna 0009  
                   ___wmul 15EC                  ??___lwdiv 0012                  ??___lwmod 0005  
                   _kpInit 167A                     _kpRead 1670                     clear_0 164C  
                ??_lcdData 0007                     isa$std 000001                  ??_lcdInit 0009  
                ??_lcd_str 000B                  ??_pinMode 0005               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_pwmSet1 0015                  ??_pwmInit 0001          __end_of_Delay40us 1646  
               __accesstop 0080    __end_of__initialization 1652              ___rparam_used 000001  
           _setTemperature 11EE                pinMode@type 0003             __pcstackCOMRAM 0001  
                ?_Delay2ms 0001         __size_of_atraso_ms 0064      __size_of_digitalWrite 024E  
        main@minutosDezena 003D     __end_of_setTemperature 1270                 _lcdCommand 1270  
                  ?___wmul 0008              ??_adc_amostra 0003                    ?_kpInit 0001  
                  ?_kpRead 0001                    _CCP1CON 000FBD                    _CCP2CON 000FBA  
               _kpDebounce 0EDC                 ??_Delay2ms 0002               _digitalWrite 0C8E  
          ?_setTemperature 0019                    __Hparam 0000                    __Lparam 0000  
          kpDebounce@old_D 0006         lcdPosition@comando 000A            kpDebounce@tempo 0050  
          __size_of___wmul 0026                    ___lwdiv 1366                    ___lwmod 1446  
        __end_of_atraso_ms 150E               __psmallconst 0600            __size_of_kpInit 000A  
          __size_of_kpRead 000A                    __pcinit 1646                    _lcdData 150E  
                  __ramtop 0600                    _lcdInit 12EE                    __ptext0 0646  
                  __ptext1 11EE                    __ptext2 15B2                    __ptext3 1056  
                  __ptext4 1446                    __ptext5 115E                    __ptext6 13DA  
                  __ptext7 15EC                    __ptext8 1366                    __ptext9 165C  
                  _lcd_str 1562        __end_of_adc_amostra 11EE                    _pinMode 0A40  
                  _pwmSet1 13DA                    _pwmInit 165C                  Delay2ms@i 0002  
                  main@str 0034        kpDebounce@valorNovo 0047             main@tempoTotal 0041  
     end_of_initialization 1652                    itoa@val 0015              __Lmediumconst 0000  
                  itoa@str 0017                ?_lcdCommand 0001                    postinc0 000FEE  
              ?_kpDebounce 0001                  _PORTCbits 000F82                  _TRISCbits 000F94  
            ??_lcdPosition 000A                  _Delay40us 162E                 lcd_str@str 0009  
              _adc_amostra 115E                 atraso_ms@i 0003                 atraso_ms@j 0005  
               atraso_ms@k 0006                 atraso_ms@t 0001             __end_of___wmul 1612  
           __end_of_kpInit 1684             __end_of_kpRead 167A        start_initialization 1646  
        __size_of_Delay2ms 001C        __size_of_lcdCommand 007E  setTemperature@temperatura 0024  
      __size_of_kpDebounce 017A                 ?_Delay40us 0001        __end_of_lcdPosition 15EC  
        setTemperature@tmp 0023          setTemperature@str 001D           lcdPosition@linha 000B  
                 ??___wmul 000C                   ??_kpInit 0001                   ??_kpRead 0003  
              __pbssCOMRAM 0045                 pinMode@pin 0001         main@minutosCentena 003C  
         ??_setTemperature 001B         main@minutosUnidade 003E           ___lwdiv@dividend 000E  
                 ?___lwdiv 000E                   ?___lwmod 0001                   ?_lcdData 0001  
                 ?_lcdInit 0001                   ?_lcd_str 0009              lcdCommand@cmd 0008  
                _atraso_ms 14AA                __smallconst 0600                   ?_pinMode 0001  
                 ?_pwmSet1 0001                   ?_pwmInit 0001           ___lwdiv@quotient 0012  
              _lcdPosition 15B2                ??_Delay40us 0001             ___wmul@product 000C  
             ??_lcdCommand 0007                 pwmSet1@val 0018               ??_kpDebounce 0001  
               _ADCON0bits 000FC2          ___wmul@multiplier 0008                 ?_atraso_ms 0001  
          lcdCommand@old_D 0007      kpDebounce@valorAntigo 0045                   _Delay2ms 1612  
                main@tecla 0043           main@tempoRelogio 0028         __end_of_lcdCommand 12EE  
             lcdData@old_D 0008               lcdData@valor 0007         __end_of_kpDebounce 1056  
                 __Hrparam 0000                   __Lrparam 0000               ?_adc_amostra 0001  
         __size_of___lwdiv 0074           __size_of___lwmod 0064            pwmSet1@porcento 0017  
         __size_of_lcdData 0054           __size_of_lcdInit 0078           __size_of_lcd_str 0050  
         __size_of_pinMode 024E            ___lwdiv@divisor 0010            ___lwdiv@counter 0014  
                 __ptext10 1562                   __ptext11 150E                   __ptext20 0EDC  
                 __ptext12 12EE                   __ptext21 14AA                   __ptext13 0A40  
                 __ptext14 1270                   __ptext15 0C8E                   __ptext16 1612  
                 __ptext17 162E                   __ptext18 1670                   __ptext19 167A  
         __size_of_pwmSet1 006C           __size_of_pwmInit 0014              __size_of_main 03FA  
            __size_of_itoa 0108      main@temperaturaMaxima 002E      main@temperaturaMinima 0030  
               Delay40us@i 0001                   isa$xinst 000000                   lcd_str@i 000D  
                 main@tmpi 0032            main@temperatura 003A                ??_atraso_ms 0003  
            ?_digitalWrite 0001          digitalWrite@value 0003           ___lwmod@dividend 0001  
          ___lwmod@divisor 0003                kpDebounce@i 000A                kpDebounce@j 0009  
              kpDebounce@k 0007            ___lwmod@counter 0005             ??_digitalWrite 0005  
         adc_amostra@canal 0007               ?_lcdPosition 0009            digitalWrite@pin 0001  
