

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug  1 14:09:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _TRISCbits	set	3988
    73  0000                     _PORTCbits	set	3970
    74  0000                     _T2CON	set	4042
    75  0000                     _CCP2CON	set	4026
    76  0000                     _CCPR2L	set	4027
    77  0000                     _CCP1CON	set	4029
    78  0000                     _CCPR1L	set	4030
    79  0000                     _PR2	set	4043
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON0	set	4034
    86  0000                     _TRISE	set	3990
    87  0000                     _TRISD	set	3989
    88  0000                     _TRISC	set	3988
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISA	set	3986
    91  0000                     _PORTE	set	3972
    92  0000                     _PORTD	set	3971
    93  0000                     _PORTC	set	3970
    94  0000                     _PORTB	set	3969
    95  0000                     _PORTA	set	3968
    96                           
    97                           	psect	smallconst
    98  000600                     __psmallconst:
    99                           	callstack 0
   100  000600  00                 	db	0
   101  000601                     STR_1:
   102  000601  56                 	db	86	;'V'
   103  000602  61                 	db	97	;'a'
   104  000603  6D                 	db	109	;'m'
   105  000604  6F                 	db	111	;'o'
   106  000605  73                 	db	115	;'s'
   107  000606  20                 	db	32
   108  000607  69                 	db	105	;'i'
   109  000608  6E                 	db	110	;'n'
   110  000609  69                 	db	105	;'i'
   111  00060A  63                 	db	99	;'c'
   112  00060B  69                 	db	105	;'i'
   113  00060C  61                 	db	97	;'a'
   114  00060D  72                 	db	114	;'r'
   115  00060E  21                 	db	33
   116  00060F  00                 	db	0
   117  000610                     STR_2:
   118  000610  43                 	db	67	;'C'
   119  000611  6C                 	db	108	;'l'
   120  000612  69                 	db	105	;'i'
   121  000613  71                 	db	113	;'q'
   122  000614  75                 	db	117	;'u'
   123  000615  65                 	db	101	;'e'
   124  000616  20                 	db	32
   125  000617  65                 	db	101	;'e'
   126  000618  6D                 	db	109	;'m'
   127  000619  20                 	db	32
   128  00061A  28                 	db	40
   129  00061B  31                 	db	49	;'1'
   130  00061C  29                 	db	41
   131  00061D  00                 	db	0
   132  00061E                     STR_6:
   133  00061E  46                 	db	70	;'F'
   134  00061F  75                 	db	117	;'u'
   135  000620  6E                 	db	110	;'n'
   136  000621  63                 	db	99	;'c'
   137  000622  69                 	db	105	;'i'
   138  000623  6F                 	db	111	;'o'
   139  000624  6E                 	db	110	;'n'
   140  000625  61                 	db	97	;'a'
   141  000626  6E                 	db	110	;'n'
   142  000627  64                 	db	100	;'d'
   143  000628  6F                 	db	111	;'o'
   144  000629  21                 	db	33
   145  00062A  00                 	db	0
   146  00062B                     STR_3:
   147  00062B  54                 	db	84	;'T'
   148  00062C  65                 	db	101	;'e'
   149  00062D  6D                 	db	109	;'m'
   150  00062E  70                 	db	112	;'p'
   151  00062F  65                 	db	101	;'e'
   152  000630  72                 	db	114	;'r'
   153  000631  61                 	db	97	;'a'
   154  000632  74                 	db	116	;'t'
   155  000633  75                 	db	117	;'u'
   156  000634  72                 	db	114	;'r'
   157  000635  61                 	db	97	;'a'
   158  000636  3A                 	db	58	;':'
   159  000637  00                 	db	0
   160  000638                     STR_4:
   161  000638  54                 	db	84	;'T'
   162  000639  65                 	db	101	;'e'
   163  00063A  6D                 	db	109	;'m'
   164  00063B  70                 	db	112	;'p'
   165  00063C  6F                 	db	111	;'o'
   166  00063D  3A                 	db	58	;':'
   167  00063E  00                 	db	0
   168  00063F                     STR_5:
   169  00063F  6D                 	db	109	;'m'
   170  000640  69                 	db	105	;'i'
   171  000641  6E                 	db	110	;'n'
   172  000642  00                 	db	0
   173  000643                     STR_8:
   174  000643  43                 	db	67	;'C'
   175  000644  00                 	db	0
   176  000645  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  00188A                     __pcinit:
   182                           	callstack 0
   183  00188A                     start_initialization:
   184                           	callstack 0
   185  00188A                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to COMRAM (12 bytes)
   189  00188A  EE00  F051         	lfsr	0,__pbssCOMRAM
   190  00188E  0E0C               	movlw	12
   191  001890                     clear_0:
   192  001890  6AEE               	clrf	postinc0,c
   193  001892  06E8               	decf	wreg,f,c
   194  001894  E1FD               	bnz	clear_0
   195  001896                     end_of_initialization:
   196                           	callstack 0
   197  001896                     __end_of__initialization:
   198                           	callstack 0
   199  001896  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  001898  6EF8               	movwf	tblptru,c
   201  00189A  0100               	movlb	0
   202  00189C  EF23  F003         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205  000051                     __pbssCOMRAM:
   206                           	callstack 0
   207  000051                     kpDebounce@valorAntigo:
   208                           	callstack 0
   209  000051                     	ds	2
   210  000053                     kpDebounce@valorNovo:
   211                           	callstack 0
   212  000053                     	ds	2
   213  000055                     _valor:
   214                           	callstack 0
   215  000055                     	ds	2
   216  000057                     _tmin:
   217                           	callstack 0
   218  000057                     	ds	1
   219  000058                     _tmax:
   220                           	callstack 0
   221  000058                     	ds	1
   222  000059                     _perc:
   223                           	callstack 0
   224  000059                     	ds	1
   225  00005A                     _cnt:
   226                           	callstack 0
   227  00005A                     	ds	1
   228  00005B                     _i:
   229                           	callstack 0
   230  00005B                     	ds	1
   231  00005C                     kpDebounce@tempo:
   232                           	callstack 0
   233  00005C                     	ds	1
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	callstack 0
   238  000001                     ??_kpDebounce:
   239  000001                     ?_kpRead:
   240                           	callstack 0
   241  000001                     ?_adc_amostra:
   242                           	callstack 0
   243  000001                     ?___lwmod:
   244                           	callstack 0
   245  000001                     ?___aldiv:
   246                           	callstack 0
   247  000001                     Delay40us@i:
   248                           	callstack 0
   249  000001                     digitalWrite@pin:
   250                           	callstack 0
   251  000001                     pinMode@pin:
   252                           	callstack 0
   253  000001                     atraso_ms@t:
   254                           	callstack 0
   255  000001                     ___lwmod@dividend:
   256                           	callstack 0
   257  000001                     ___aldiv@dividend:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x0
   261  000001                     	ds	1
   262  000002                     Delay2ms@i:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266  000002                     	ds	1
   267  000003                     ??_adc_amostra:
   268  000003                     digitalWrite@value:
   269                           	callstack 0
   270  000003                     pinMode@type:
   271                           	callstack 0
   272  000003                     atraso_ms@i:
   273                           	callstack 0
   274  000003                     ___lwmod@divisor:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278  000003                     	ds	2
   279  000005                     ??_digitalWrite:
   280  000005                     ??_pinMode:
   281  000005                     atraso_ms@j:
   282                           	callstack 0
   283  000005                     ___lwmod@counter:
   284                           	callstack 0
   285  000005                     ___aldiv@divisor:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x4
   289  000005                     	ds	1
   290  000006                     kpDebounce@old_D:
   291                           	callstack 0
   292  000006                     atraso_ms@k:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x5
   296  000006                     	ds	1
   297  000007                     lcdCommand@old_D:
   298                           	callstack 0
   299  000007                     lcdData@valor:
   300                           	callstack 0
   301  000007                     adc_amostra@canal:
   302                           	callstack 0
   303  000007                     kpDebounce@k:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x6
   307  000007                     	ds	1
   308  000008                     ?___wmul:
   309                           	callstack 0
   310  000008                     lcdCommand@cmd:
   311                           	callstack 0
   312  000008                     lcdData@old_D:
   313                           	callstack 0
   314  000008                     ___wmul@multiplier:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x7
   318  000008                     	ds	1
   319  000009                     kpDebounce@j:
   320                           	callstack 0
   321  000009                     lcdPosition@coluna:
   322                           	callstack 0
   323  000009                     ___aldiv@counter:
   324                           	callstack 0
   325  000009                     lcd_str@str:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x8
   329  000009                     	ds	1
   330  00000A                     kpDebounce@i:
   331                           	callstack 0
   332  00000A                     lcdPosition@comando:
   333                           	callstack 0
   334  00000A                     ___aldiv@sign:
   335                           	callstack 0
   336  00000A                     ___wmul@multiplicand:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x9
   340  00000A                     	ds	1
   341  00000B                     ??_lcd_str:
   342  00000B                     lcdPosition@linha:
   343                           	callstack 0
   344  00000B                     ___aldiv@quotient:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0xA
   348  00000B                     	ds	1
   349  00000C                     ___wmul@product:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0xB
   353  00000C                     	ds	1
   354  00000D                     lcd_str@i:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0xC
   358  00000D                     	ds	1
   359  00000E                     ?___lwdiv:
   360                           	callstack 0
   361  00000E                     ___lwdiv@dividend:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xD
   365  00000E                     	ds	1
   366  00000F                     pwmFrequency@freq:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xE
   370  00000F                     	ds	1
   371  000010                     ___lwdiv@divisor:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xF
   375  000010                     	ds	1
   376  000011                     
   377                           ; 1 bytes @ 0x10
   378  000011                     	ds	1
   379  000012                     ___lwdiv@quotient:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x11
   383  000012                     	ds	2
   384  000014                     ___lwdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388  000014                     	ds	1
   389  000015                     ??_pwmSet1:
   390  000015                     itoa@val:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394  000015                     	ds	2
   395  000017                     pwmSet1@porcento:
   396                           	callstack 0
   397  000017                     itoa@str:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x16
   401  000017                     	ds	1
   402  000018                     pwmSet1@val:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x17
   406  000018                     	ds	1
   407  000019                     ?_setTemperature:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x18
   411  000019                     	ds	2
   412  00001B                     ??_setTemperature:
   413                           
   414                           ; 1 bytes @ 0x1A
   415  00001B                     	ds	2
   416  00001D                     setTemperature@str:
   417                           	callstack 0
   418                           
   419                           ; 6 bytes @ 0x1C
   420  00001D                     	ds	6
   421  000023                     setTemperature@tmp:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x22
   425  000023                     	ds	1
   426  000024                     setTemperature@temperatura:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x23
   430  000024                     	ds	2
   431  000026                     ??_main:
   432                           
   433                           ; 1 bytes @ 0x25
   434  000026                     	ds	2
   435  000028                     main@tempoRelogio:
   436                           	callstack 0
   437                           
   438                           ; 6 bytes @ 0x27
   439  000028                     	ds	6
   440  00002E                     main@temperaturaMaxima:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x2D
   444  00002E                     	ds	2
   445  000030                     main@temperaturaMinima:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2F
   449  000030                     	ds	2
   450  000032                     main@tmpi:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x31
   454  000032                     	ds	2
   455  000034                     main@str:
   456                           	callstack 0
   457                           
   458                           ; 6 bytes @ 0x33
   459  000034                     	ds	6
   460  00003A                     main@temperatura:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x39
   464  00003A                     	ds	2
   465  00003C                     main@i:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x3B
   469  00003C                     	ds	2
   470  00003E                     main@i_436:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x3D
   474  00003E                     	ds	2
   475  000040                     main@i_438:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x3F
   479  000040                     	ds	2
   480  000042                     main@minutosCentena:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x41
   484  000042                     	ds	1
   485  000043                     main@minutosDezena:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x42
   489  000043                     	ds	1
   490  000044                     main@minutosUnidade:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x43
   494  000044                     	ds	1
   495  000045                     main@temperaturaLcd:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x44
   499  000045                     	ds	2
   500  000047                     main@tempoTotal:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x46
   504  000047                     	ds	2
   505  000049                     main@j:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x48
   509  000049                     	ds	2
   510  00004B                     main@j_437:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x4A
   514  00004B                     	ds	2
   515  00004D                     main@j_439:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x4C
   519  00004D                     	ds	2
   520  00004F                     main@tecla:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x4E
   524  00004F                     	ds	2
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 17 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  j               2   76[COMRAM] int 
   536 ;;  j               2   74[COMRAM] int 
   537 ;;  j               2   72[COMRAM] int 
   538 ;;  i               2   63[COMRAM] int 
   539 ;;  i               2   61[COMRAM] int 
   540 ;;  i               2   59[COMRAM] int 
   541 ;;  str             6   51[COMRAM] unsigned char [6]
   542 ;;  tempoRelogio    6   39[COMRAM] unsigned char [6]
   543 ;;  tecla           2   78[COMRAM] unsigned int 
   544 ;;  tempoTotal      2   70[COMRAM] unsigned int 
   545 ;;  temperaturaL    2   68[COMRAM] unsigned int 
   546 ;;  temperatura     2   57[COMRAM] unsigned int 
   547 ;;  tmpi            2   49[COMRAM] unsigned int 
   548 ;;  temperaturaM    2   47[COMRAM] unsigned int 
   549 ;;  temperaturaM    2   45[COMRAM] unsigned int 
   550 ;;  minutosUnida    1   67[COMRAM] unsigned char 
   551 ;;  minutosDezen    1   66[COMRAM] unsigned char 
   552 ;;  minutosCente    1   65[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         0       0       0       0       0       0       0
   563 ;;      Locals:        41       0       0       0       0       0       0
   564 ;;      Temps:          2       0       0       0       0       0       0
   565 ;;      Totals:        43       0       0       0       0       0       0
   566 ;;Total ram usage:       43 bytes
   567 ;; Hardware stack levels required when called: 5
   568 ;; This function calls:
   569 ;;		___lwdiv
   570 ;;		___wmul
   571 ;;		_adc_amostra
   572 ;;		_atraso_ms
   573 ;;		_itoa
   574 ;;		_kpDebounce
   575 ;;		_kpInit
   576 ;;		_kpRead
   577 ;;		_lcdCommand
   578 ;;		_lcdData
   579 ;;		_lcdInit
   580 ;;		_lcdPosition
   581 ;;		_lcd_str
   582 ;;		_pwmFrequency
   583 ;;		_pwmInit
   584 ;;		_pwmSet1
   585 ;;		_setTemperature
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  000646                     __ptext0:
   593                           	callstack 0
   594  000646                     _main:
   595                           	callstack 26
   596  000646                     
   597                           ;main.c: 18:     unsigned int tecla = 16;
   598  000646  0E00               	movlw	0
   599  000648  6E50               	movwf	(main@tecla+1)^0,c
   600  00064A  0E10               	movlw	16
   601  00064C  6E4F               	movwf	main@tecla^0,c
   602                           
   603                           ;main.c: 19:     unsigned int temperatura = 180, temperaturaMaxima, temperaturaMinima;
   604  00064E  0E00               	movlw	0
   605  000650  6E3B               	movwf	(main@temperatura+1)^0,c
   606  000652  0EB4               	movlw	180
   607  000654  6E3A               	movwf	main@temperatura^0,c
   608                           
   609                           ;main.c: 20:     char minutosCentena = 48, minutosDezena = 48, minutosUnidade = 48;
   610  000656  0E30               	movlw	48
   611  000658  6E42               	movwf	main@minutosCentena^0,c
   612  00065A  0E30               	movlw	48
   613  00065C  6E43               	movwf	main@minutosDezena^0,c
   614  00065E  0E30               	movlw	48
   615  000660  6E44               	movwf	main@minutosUnidade^0,c
   616                           
   617                           ;main.c: 22:     char str[6];;main.c: 23:     char tempoRelogio[6];;main.c: 24:     unsi
      +                          gned int tmpi, temperaturaLcd, tempoTotal = 0;
   618  000662  0E00               	movlw	0
   619  000664  6E48               	movwf	(main@tempoTotal+1)^0,c
   620  000666  0E00               	movlw	0
   621  000668  6E47               	movwf	main@tempoTotal^0,c
   622                           
   623                           ;main.c: 26:     TRISA = 0x07;
   624  00066A  0E07               	movlw	7
   625  00066C  6E92               	movwf	146,c	;volatile
   626                           
   627                           ;main.c: 27:     TRISB = 0x00;
   628  00066E  0E00               	movlw	0
   629  000670  6E93               	movwf	147,c	;volatile
   630                           
   631                           ;main.c: 28:     TRISC = 0x00;
   632  000672  0E00               	movlw	0
   633  000674  6E94               	movwf	148,c	;volatile
   634  000676                     
   635                           ;main.c: 30:     lcdInit();
   636  000676  EC86  F00A         	call	_lcdInit	;wreg free
   637  00067A                     
   638                           ;main.c: 31:     kpInit();
   639  00067A  EC5F  F00C         	call	_kpInit	;wreg free
   640  00067E                     l2067:
   641                           
   642                           ;main.c: 34:         lcdPosition(0, 1);
   643  00067E  0E01               	movlw	1
   644  000680  6E09               	movwf	lcdPosition@coluna^0,c
   645  000682  0E00               	movlw	0
   646  000684  ECE8  F00B         	call	_lcdPosition
   647  000688                     
   648                           ;main.c: 36:         lcd_str("Vamos iniciar!");
   649  000688  0E01               	movlw	low STR_1
   650  00068A  6E09               	movwf	lcd_str@str^0,c
   651  00068C  0E06               	movlw	high STR_1
   652  00068E  6E0A               	movwf	(lcd_str@str+1)^0,c
   653  000690  ECC0  F00B         	call	_lcd_str	;wreg free
   654  000694                     
   655                           ;main.c: 37:         lcdPosition(1, 1);
   656  000694  0E01               	movlw	1
   657  000696  6E09               	movwf	lcdPosition@coluna^0,c
   658  000698  0E01               	movlw	1
   659  00069A  ECE8  F00B         	call	_lcdPosition
   660  00069E                     
   661                           ;main.c: 38:         lcd_str("Clique em (1)");
   662  00069E  0E10               	movlw	low STR_2
   663  0006A0  6E09               	movwf	lcd_str@str^0,c
   664  0006A2  0E06               	movlw	high STR_2
   665  0006A4  6E0A               	movwf	(lcd_str@str+1)^0,c
   666  0006A6  ECC0  F00B         	call	_lcd_str	;wreg free
   667  0006AA                     
   668                           ;main.c: 40:         kpDebounce();
   669  0006AA  ECF7  F007         	call	_kpDebounce	;wreg free
   670  0006AE                     
   671                           ;main.c: 41:         if (kpRead() != tecla) {
   672  0006AE  EC5A  F00C         	call	_kpRead	;wreg free
   673  0006B2  504F               	movf	main@tecla^0,w,c
   674  0006B4  1801               	xorwf	?_kpRead^0,w,c
   675  0006B6  E109               	bnz	u1670
   676  0006B8  5050               	movf	(main@tecla+1)^0,w,c
   677  0006BA  1802               	xorwf	(?_kpRead+1)^0,w,c
   678  0006BC  B4D8               	btfsc	status,2,c
   679  0006BE  EF63  F003         	goto	u1671
   680  0006C2  EF65  F003         	goto	u1670
   681  0006C6                     u1671:
   682  0006C6  EF3F  F003         	goto	l2067
   683  0006CA                     u1670:
   684  0006CA                     
   685                           ;main.c: 42:             tecla = kpRead();
   686  0006CA  EC5A  F00C         	call	_kpRead	;wreg free
   687  0006CE  C001  F04F         	movff	?_kpRead,main@tecla
   688  0006D2  C002  F050         	movff	?_kpRead+1,main@tecla+1
   689  0006D6                     
   690                           ;main.c: 45:             if (((tecla) & (1<<(3)))) {
   691  0006D6  A64F               	btfss	main@tecla^0,3,c
   692  0006D8  EF70  F003         	goto	u1681
   693  0006DC  EF72  F003         	goto	u1680
   694  0006E0                     u1681:
   695  0006E0  EF3F  F003         	goto	l2067
   696  0006E4                     u1680:
   697  0006E4                     
   698                           ;main.c: 46:                 lcdCommand(0x01);
   699  0006E4  0E01               	movlw	1
   700  0006E6  EC47  F00A         	call	_lcdCommand
   701                           
   702                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   703  0006EA  EF0C  F004         	goto	l2135
   704  0006EE                     l2085:
   705                           
   706                           ;main.c: 52:                     lcdPosition(0, 0);
   707  0006EE  0E00               	movlw	0
   708  0006F0  6E09               	movwf	lcdPosition@coluna^0,c
   709  0006F2  0E00               	movlw	0
   710  0006F4  ECE8  F00B         	call	_lcdPosition
   711  0006F8                     
   712                           ;main.c: 53:                     lcd_str("Temperatura:");
   713  0006F8  0E2B               	movlw	low STR_3
   714  0006FA  6E09               	movwf	lcd_str@str^0,c
   715  0006FC  0E06               	movlw	high STR_3
   716  0006FE  6E0A               	movwf	(lcd_str@str+1)^0,c
   717  000700  ECC0  F00B         	call	_lcd_str	;wreg free
   718  000704                     
   719                           ;main.c: 54:                     temperatura = setTemperature();
   720  000704  EC06  F00A         	call	_setTemperature	;wreg free
   721  000708  C019  F03A         	movff	?_setTemperature,main@temperatura
   722  00070C  C01A  F03B         	movff	?_setTemperature+1,main@temperatura+1
   723  000710                     
   724                           ;main.c: 58:                     lcdPosition(1, 0);
   725  000710  0E00               	movlw	0
   726  000712  6E09               	movwf	lcdPosition@coluna^0,c
   727  000714  0E01               	movlw	1
   728  000716  ECE8  F00B         	call	_lcdPosition
   729  00071A                     
   730                           ;main.c: 59:                     lcd_str("Tempo:");
   731  00071A  0E38               	movlw	low STR_4
   732  00071C  6E09               	movwf	lcd_str@str^0,c
   733  00071E  0E06               	movlw	high STR_4
   734  000720  6E0A               	movwf	(lcd_str@str+1)^0,c
   735  000722  ECC0  F00B         	call	_lcd_str	;wreg free
   736  000726                     
   737                           ;main.c: 60:                     lcdPosition(1, 6);
   738  000726  0E06               	movlw	6
   739  000728  6E09               	movwf	lcdPosition@coluna^0,c
   740  00072A  0E01               	movlw	1
   741  00072C  ECE8  F00B         	call	_lcdPosition
   742  000730                     
   743                           ;main.c: 61:                     lcdData((char)minutosCentena);
   744  000730  5042               	movf	main@minutosCentena^0,w,c
   745  000732  EC96  F00B         	call	_lcdData
   746  000736                     
   747                           ;main.c: 62:                     lcdData((char)minutosDezena);
   748  000736  5043               	movf	main@minutosDezena^0,w,c
   749  000738  EC96  F00B         	call	_lcdData
   750  00073C                     
   751                           ;main.c: 63:                     lcdData((char)minutosUnidade);
   752  00073C  5044               	movf	main@minutosUnidade^0,w,c
   753  00073E  EC96  F00B         	call	_lcdData
   754  000742                     
   755                           ;main.c: 64:                     lcd_str("min");
   756  000742  0E3F               	movlw	low STR_5
   757  000744  6E09               	movwf	lcd_str@str^0,c
   758  000746  0E06               	movlw	high STR_5
   759  000748  6E0A               	movwf	(lcd_str@str+1)^0,c
   760  00074A  ECC0  F00B         	call	_lcd_str	;wreg free
   761  00074E                     
   762                           ;main.c: 66:                     kpDebounce();
   763  00074E  ECF7  F007         	call	_kpDebounce	;wreg free
   764  000752                     
   765                           ;main.c: 67:                     if (kpRead() != tecla) {
   766  000752  EC5A  F00C         	call	_kpRead	;wreg free
   767  000756  504F               	movf	main@tecla^0,w,c
   768  000758  1801               	xorwf	?_kpRead^0,w,c
   769  00075A  E109               	bnz	u1690
   770  00075C  5050               	movf	(main@tecla+1)^0,w,c
   771  00075E  1802               	xorwf	(?_kpRead+1)^0,w,c
   772  000760  B4D8               	btfsc	status,2,c
   773  000762  EFB5  F003         	goto	u1691
   774  000766  EFB7  F003         	goto	u1690
   775  00076A                     u1691:
   776  00076A  EF0C  F004         	goto	l2135
   777  00076E                     u1690:
   778  00076E                     
   779                           ;main.c: 68:                         tecla = kpRead();
   780  00076E  EC5A  F00C         	call	_kpRead	;wreg free
   781  000772  C001  F04F         	movff	?_kpRead,main@tecla
   782  000776  C002  F050         	movff	?_kpRead+1,main@tecla+1
   783  00077A                     
   784                           ;main.c: 69:                         if (((tecla) & (1<<(1)))) {
   785  00077A  A24F               	btfss	main@tecla^0,1,c
   786  00077C  EFC2  F003         	goto	u1701
   787  000780  EFC4  F003         	goto	u1700
   788  000784                     u1701:
   789  000784  EFD8  F003         	goto	l291
   790  000788                     u1700:
   791  000788                     
   792                           ;main.c: 70:                             if (minutosCentena == 57) {
   793  000788  0E39               	movlw	57
   794  00078A  1842               	xorwf	main@minutosCentena^0,w,c
   795  00078C  A4D8               	btfss	status,2,c
   796  00078E  EFCB  F003         	goto	u1711
   797  000792  EFCD  F003         	goto	u1710
   798  000796                     u1711:
   799  000796  EFD1  F003         	goto	l2117
   800  00079A                     u1710:
   801  00079A                     
   802                           ;main.c: 71:                                 minutosCentena = 48;
   803  00079A  0E30               	movlw	48
   804  00079C  6E42               	movwf	main@minutosCentena^0,c
   805                           
   806                           ;main.c: 72:                             } else {
   807  00079E  EF0C  F004         	goto	l2135
   808  0007A2                     l2117:
   809                           
   810                           ;main.c: 73:                                 minutosCentena += 1;
   811  0007A2  2A42               	incf	main@minutosCentena^0,f,c
   812  0007A4                     
   813                           ;main.c: 74:                                 tempoTotal += 100;
   814  0007A4  0E64               	movlw	100
   815  0007A6  2647               	addwf	main@tempoTotal^0,f,c
   816  0007A8  0E00               	movlw	0
   817  0007AA  2248               	addwfc	(main@tempoTotal+1)^0,f,c
   818  0007AC  EF0C  F004         	goto	l2135
   819  0007B0                     l291:
   820  0007B0  AA4F               	btfss	main@tecla^0,5,c
   821  0007B2  EFDD  F003         	goto	u1721
   822  0007B6  EFDF  F003         	goto	u1720
   823  0007BA                     u1721:
   824  0007BA  EFF3  F003         	goto	l295
   825  0007BE                     u1720:
   826  0007BE                     
   827                           ;main.c: 77:                             if (minutosDezena == 57) {
   828  0007BE  0E39               	movlw	57
   829  0007C0  1843               	xorwf	main@minutosDezena^0,w,c
   830  0007C2  A4D8               	btfss	status,2,c
   831  0007C4  EFE6  F003         	goto	u1731
   832  0007C8  EFE8  F003         	goto	u1730
   833  0007CC                     u1731:
   834  0007CC  EFEC  F003         	goto	l2125
   835  0007D0                     u1730:
   836  0007D0                     
   837                           ;main.c: 78:                                 minutosDezena = 48;
   838  0007D0  0E30               	movlw	48
   839  0007D2  6E43               	movwf	main@minutosDezena^0,c
   840                           
   841                           ;main.c: 79:                             } else {
   842  0007D4  EF0C  F004         	goto	l2135
   843  0007D8                     l2125:
   844                           
   845                           ;main.c: 80:                                 minutosDezena += 1;
   846  0007D8  2A43               	incf	main@minutosDezena^0,f,c
   847  0007DA                     
   848                           ;main.c: 81:                                 tempoTotal += 10;
   849  0007DA  0E0A               	movlw	10
   850  0007DC  2647               	addwf	main@tempoTotal^0,f,c
   851  0007DE  0E00               	movlw	0
   852  0007E0  2248               	addwfc	(main@tempoTotal+1)^0,f,c
   853  0007E2  EF0C  F004         	goto	l2135
   854  0007E6                     l295:
   855  0007E6  A250               	btfss	(main@tecla+1)^0,1,c
   856  0007E8  EFF8  F003         	goto	u1741
   857  0007EC  EFFA  F003         	goto	u1740
   858  0007F0                     u1741:
   859  0007F0  EF0C  F004         	goto	l290
   860  0007F4                     u1740:
   861  0007F4                     
   862                           ;main.c: 84:                             if (minutosUnidade == 57) {
   863  0007F4  0E39               	movlw	57
   864  0007F6  1844               	xorwf	main@minutosUnidade^0,w,c
   865  0007F8  A4D8               	btfss	status,2,c
   866  0007FA  EF01  F004         	goto	u1751
   867  0007FE  EF03  F004         	goto	u1750
   868  000802                     u1751:
   869  000802  EF07  F004         	goto	l2133
   870  000806                     u1750:
   871  000806                     
   872                           ;main.c: 85:                                 minutosUnidade = 48;
   873  000806  0E30               	movlw	48
   874  000808  6E44               	movwf	main@minutosUnidade^0,c
   875                           
   876                           ;main.c: 86:                             } else {
   877  00080A  EF0C  F004         	goto	l2135
   878  00080E                     l2133:
   879                           
   880                           ;main.c: 87:                                 minutosUnidade += 1;
   881  00080E  2A44               	incf	main@minutosUnidade^0,f,c
   882                           
   883                           ;main.c: 88:                                 tempoTotal += 1;
   884  000810  4A47               	infsnz	main@tempoTotal^0,f,c
   885  000812  2A48               	incf	(main@tempoTotal+1)^0,f,c
   886  000814  EF0C  F004         	goto	l2135
   887  000818                     l290:
   888  000818                     l2135:
   889                           
   890                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   891  000818  A04F               	btfss	main@tecla^0,0,c
   892  00081A  EF11  F004         	goto	u1761
   893  00081E  EF13  F004         	goto	u1760
   894  000822                     u1761:
   895  000822  EF77  F003         	goto	l2085
   896  000826                     u1760:
   897  000826                     
   898                           ;main.c: 96:                 if (((tecla) & (1<<(0)))) {
   899  000826  A04F               	btfss	main@tecla^0,0,c
   900  000828  EF18  F004         	goto	u1771
   901  00082C  EF1A  F004         	goto	u1770
   902  000830                     u1771:
   903  000830  EFF2  F004         	goto	l2199
   904  000834                     u1770:
   905  000834                     
   906                           ;main.c: 97:                     lcdCommand(0x01);
   907  000834  0E01               	movlw	1
   908  000836  EC47  F00A         	call	_lcdCommand
   909  00083A                     
   910                           ;main.c: 100:                     temperaturaMaxima = temperatura + 10;
   911  00083A  0E0A               	movlw	10
   912  00083C  243A               	addwf	main@temperatura^0,w,c
   913  00083E  6E2E               	movwf	main@temperaturaMaxima^0,c
   914  000840  0E00               	movlw	0
   915  000842  203B               	addwfc	(main@temperatura+1)^0,w,c
   916  000844  6E2F               	movwf	(main@temperaturaMaxima+1)^0,c
   917  000846                     
   918                           ;main.c: 101:                     temperaturaMinima = temperatura - 10;
   919  000846  0EF6               	movlw	246
   920  000848  243A               	addwf	main@temperatura^0,w,c
   921  00084A  6E30               	movwf	main@temperaturaMinima^0,c
   922  00084C  0EFF               	movlw	255
   923  00084E  203B               	addwfc	(main@temperatura+1)^0,w,c
   924  000850  6E31               	movwf	(main@temperaturaMinima+1)^0,c
   925                           
   926                           ;main.c: 104:                     pwmInit();
   927  000852  EC50  F00C         	call	_pwmInit	;wreg free
   928  000856                     
   929                           ;main.c: 105:                     pwmSet1(30);
   930  000856  0E1E               	movlw	30
   931  000858  ECFC  F00A         	call	_pwmSet1
   932  00085C                     
   933                           ;main.c: 108:                     PORTB = 0xFF;
   934  00085C  6881               	setf	129,c	;volatile
   935                           
   936                           ;main.c: 111:                     while (tempoTotal > 0) {
   937  00085E  EFE9  F004         	goto	l2197
   938  000862                     l2147:
   939                           
   940                           ;main.c: 113:                         lcdPosition(0, 2);
   941  000862  0E02               	movlw	2
   942  000864  6E09               	movwf	lcdPosition@coluna^0,c
   943  000866  0E00               	movlw	0
   944  000868  ECE8  F00B         	call	_lcdPosition
   945  00086C                     
   946                           ;main.c: 114:                         lcd_str("Funcionando!");
   947  00086C  0E1E               	movlw	low STR_6
   948  00086E  6E09               	movwf	lcd_str@str^0,c
   949  000870  0E06               	movlw	high STR_6
   950  000872  6E0A               	movwf	(lcd_str@str+1)^0,c
   951  000874  ECC0  F00B         	call	_lcd_str	;wreg free
   952  000878                     
   953                           ;main.c: 117:                         lcdPosition(1, 9);
   954  000878  0E09               	movlw	9
   955  00087A  6E09               	movwf	lcdPosition@coluna^0,c
   956  00087C  0E01               	movlw	1
   957  00087E  ECE8  F00B         	call	_lcdPosition
   958  000882                     
   959                           ;main.c: 118:                         itoa(tempoTotal, tempoRelogio);
   960  000882  C047  F015         	movff	main@tempoTotal,itoa@val
   961  000886  C048  F016         	movff	main@tempoTotal+1,itoa@val+1
   962  00088A  0E28               	movlw	low main@tempoRelogio
   963  00088C  6E17               	movwf	itoa@str^0,c
   964  00088E  0E00               	movlw	high main@tempoRelogio
   965  000890  6E18               	movwf	(itoa@str+1)^0,c
   966  000892  EC3A  F009         	call	_itoa	;wreg free
   967  000896                     
   968                           ;main.c: 119:                         lcdData(tempoRelogio[2]);
   969  000896  502A               	movf	(main@tempoRelogio+2)^0,w,c
   970  000898  EC96  F00B         	call	_lcdData
   971  00089C                     
   972                           ;main.c: 120:                         lcdData(tempoRelogio[3]);
   973  00089C  502B               	movf	(main@tempoRelogio+3)^0,w,c
   974  00089E  EC96  F00B         	call	_lcdData
   975  0008A2                     
   976                           ;main.c: 121:                         lcdData(tempoRelogio[4]);
   977  0008A2  502C               	movf	(main@tempoRelogio+4)^0,w,c
   978  0008A4  EC96  F00B         	call	_lcdData
   979  0008A8                     
   980                           ;main.c: 122:                         lcd_str("min");
   981  0008A8  0E3F               	movlw	low STR_5
   982  0008AA  6E09               	movwf	lcd_str@str^0,c
   983  0008AC  0E06               	movlw	high STR_5
   984  0008AE  6E0A               	movwf	(lcd_str@str+1)^0,c
   985  0008B0  ECC0  F00B         	call	_lcd_str	;wreg free
   986  0008B4                     
   987                           ;main.c: 123:                         tempoTotal--;
   988  0008B4  0647               	decf	main@tempoTotal^0,f,c
   989  0008B6  A0D8               	btfss	status,0,c
   990  0008B8  0648               	decf	(main@tempoTotal+1)^0,f,c
   991  0008BA                     
   992                           ;main.c: 126:                         tmpi = (adc_amostra(1)*10) / 2;
   993  0008BA  0E01               	movlw	1
   994  0008BC  ECBE  F009         	call	_adc_amostra
   995  0008C0  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   996  0008C4  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   997  0008C8  0E00               	movlw	0
   998  0008CA  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   999  0008CC  0E0A               	movlw	10
  1000  0008CE  6E0A               	movwf	___wmul@multiplicand^0,c
  1001  0008D0  EC05  F00C         	call	___wmul	;wreg free
  1002  0008D4  90D8               	bcf	status,0,c
  1003  0008D6  3009               	rrcf	(?___wmul+1)^0,w,c
  1004  0008D8  6E26               	movwf	??_main^0,c
  1005  0008DA  3008               	rrcf	?___wmul^0,w,c
  1006  0008DC  6E32               	movwf	main@tmpi^0,c
  1007  0008DE  C026  F033         	movff	??_main,main@tmpi+1
  1008  0008E2                     
  1009                           ;main.c: 127:                         temperaturaLcd = ((tmpi - 280) * 222 / 46) + 280;
  1010  0008E2  0EE8               	movlw	232
  1011  0008E4  2432               	addwf	main@tmpi^0,w,c
  1012  0008E6  6E08               	movwf	___wmul@multiplier^0,c
  1013  0008E8  0EFE               	movlw	254
  1014  0008EA  2033               	addwfc	(main@tmpi+1)^0,w,c
  1015  0008EC  6E09               	movwf	(___wmul@multiplier+1)^0,c
  1016  0008EE  0E00               	movlw	0
  1017  0008F0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1018  0008F2  0EDE               	movlw	222
  1019  0008F4  6E0A               	movwf	___wmul@multiplicand^0,c
  1020  0008F6  EC05  F00C         	call	___wmul	;wreg free
  1021  0008FA  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1022  0008FE  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1023  000902  0E00               	movlw	0
  1024  000904  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1025  000906  0E2E               	movlw	46
  1026  000908  6E10               	movwf	___lwdiv@divisor^0,c
  1027  00090A  ECC2  F00A         	call	___lwdiv	;wreg free
  1028  00090E  0E18               	movlw	24
  1029  000910  240E               	addwf	?___lwdiv^0,w,c
  1030  000912  6E45               	movwf	main@temperaturaLcd^0,c
  1031  000914  0E01               	movlw	1
  1032  000916  200F               	addwfc	(?___lwdiv+1)^0,w,c
  1033  000918  6E46               	movwf	(main@temperaturaLcd+1)^0,c
  1034  00091A                     
  1035                           ;main.c: 130:                         lcdPosition(1, 1);
  1036  00091A  0E01               	movlw	1
  1037  00091C  6E09               	movwf	lcdPosition@coluna^0,c
  1038  00091E  0E01               	movlw	1
  1039  000920  ECE8  F00B         	call	_lcdPosition
  1040  000924                     
  1041                           ;main.c: 131:                         itoa(temperaturaLcd, str);
  1042  000924  C045  F015         	movff	main@temperaturaLcd,itoa@val
  1043  000928  C046  F016         	movff	main@temperaturaLcd+1,itoa@val+1
  1044  00092C  0E34               	movlw	low main@str
  1045  00092E  6E17               	movwf	itoa@str^0,c
  1046  000930  0E00               	movlw	high main@str
  1047  000932  6E18               	movwf	(itoa@str+1)^0,c
  1048  000934  EC3A  F009         	call	_itoa	;wreg free
  1049  000938                     
  1050                           ;main.c: 132:                         lcdData(str[1]);
  1051  000938  5035               	movf	(main@str+1)^0,w,c
  1052  00093A  EC96  F00B         	call	_lcdData
  1053  00093E                     
  1054                           ;main.c: 133:                         lcdData(str[2]);
  1055  00093E  5036               	movf	(main@str+2)^0,w,c
  1056  000940  EC96  F00B         	call	_lcdData
  1057  000944                     
  1058                           ;main.c: 134:                         lcdData(str[3]);
  1059  000944  5037               	movf	(main@str+3)^0,w,c
  1060  000946  EC96  F00B         	call	_lcdData
  1061  00094A                     
  1062                           ;main.c: 135:                         lcdData(',');
  1063  00094A  0E2C               	movlw	44
  1064  00094C  EC96  F00B         	call	_lcdData
  1065  000950                     
  1066                           ;main.c: 136:                         lcdData(str[4]);
  1067  000950  5038               	movf	(main@str+4)^0,w,c
  1068  000952  EC96  F00B         	call	_lcdData
  1069  000956                     
  1070                           ;main.c: 137:                         lcd_str("C");
  1071  000956  0E43               	movlw	low STR_8
  1072  000958  6E09               	movwf	lcd_str@str^0,c
  1073  00095A  0E06               	movlw	high STR_8
  1074  00095C  6E0A               	movwf	(lcd_str@str+1)^0,c
  1075  00095E  ECC0  F00B         	call	_lcd_str	;wreg free
  1076  000962                     
  1077                           ;main.c: 139:                         atraso_ms(1000);
  1078  000962  0E03               	movlw	3
  1079  000964  6E02               	movwf	(atraso_ms@t+1)^0,c
  1080  000966  0EE8               	movlw	232
  1081  000968  6E01               	movwf	atraso_ms@t^0,c
  1082  00096A  EC64  F00B         	call	_atraso_ms	;wreg free
  1083  00096E                     
  1084                           ;main.c: 142:                         if (temperaturaLcd > temperaturaMaxima * 10) {
  1085  00096E  C02E  F008         	movff	main@temperaturaMaxima,___wmul@multiplier
  1086  000972  C02F  F009         	movff	main@temperaturaMaxima+1,___wmul@multiplier+1
  1087  000976  0E00               	movlw	0
  1088  000978  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1089  00097A  0E0A               	movlw	10
  1090  00097C  6E0A               	movwf	___wmul@multiplicand^0,c
  1091  00097E  EC05  F00C         	call	___wmul	;wreg free
  1092  000982  5045               	movf	main@temperaturaLcd^0,w,c
  1093  000984  5C08               	subwf	?___wmul^0,w,c
  1094  000986  5046               	movf	(main@temperaturaLcd+1)^0,w,c
  1095  000988  5809               	subwfb	(?___wmul+1)^0,w,c
  1096  00098A  B0D8               	btfsc	status,0,c
  1097  00098C  EFCA  F004         	goto	u1781
  1098  000990  EFCC  F004         	goto	u1780
  1099  000994                     u1781:
  1100  000994  EFD3  F004         	goto	l2193
  1101  000998                     u1780:
  1102  000998                     
  1103                           ;main.c: 143:                             atraso_ms(100);
  1104  000998  0E00               	movlw	0
  1105  00099A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1106  00099C  0E64               	movlw	100
  1107  00099E  6E01               	movwf	atraso_ms@t^0,c
  1108  0009A0  EC64  F00B         	call	_atraso_ms	;wreg free
  1109  0009A4                     
  1110                           ;main.c: 144:                             PORTCbits.RC5 = 0;
  1111  0009A4  9A82               	bcf	130,5,c	;volatile
  1112  0009A6                     l2193:
  1113                           
  1114                           ;main.c: 146:                         if (temperaturaLcd < temperaturaMinima * 10) {
  1115  0009A6  C030  F008         	movff	main@temperaturaMinima,___wmul@multiplier
  1116  0009AA  C031  F009         	movff	main@temperaturaMinima+1,___wmul@multiplier+1
  1117  0009AE  0E00               	movlw	0
  1118  0009B0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1119  0009B2  0E0A               	movlw	10
  1120  0009B4  6E0A               	movwf	___wmul@multiplicand^0,c
  1121  0009B6  EC05  F00C         	call	___wmul	;wreg free
  1122  0009BA  5008               	movf	?___wmul^0,w,c
  1123  0009BC  5C45               	subwf	main@temperaturaLcd^0,w,c
  1124  0009BE  5009               	movf	(?___wmul+1)^0,w,c
  1125  0009C0  5846               	subwfb	(main@temperaturaLcd+1)^0,w,c
  1126  0009C2  B0D8               	btfsc	status,0,c
  1127  0009C4  EFE6  F004         	goto	u1791
  1128  0009C8  EFE8  F004         	goto	u1790
  1129  0009CC                     u1791:
  1130  0009CC  EFE9  F004         	goto	l2197
  1131  0009D0                     u1790:
  1132  0009D0                     
  1133                           ;main.c: 147:                             PORTCbits.RC5 = 1;
  1134  0009D0  8A82               	bsf	130,5,c	;volatile
  1135  0009D2                     l2197:
  1136                           
  1137                           ;main.c: 111:                     while (tempoTotal > 0) {
  1138  0009D2  5047               	movf	main@tempoTotal^0,w,c
  1139  0009D4  1048               	iorwf	(main@tempoTotal+1)^0,w,c
  1140  0009D6  A4D8               	btfss	status,2,c
  1141  0009D8  EFF0  F004         	goto	u1801
  1142  0009DC  EFF2  F004         	goto	u1800
  1143  0009E0                     u1801:
  1144  0009E0  EF31  F004         	goto	l2147
  1145  0009E4                     u1800:
  1146  0009E4                     l2199:
  1147                           
  1148                           ;main.c: 152:                 lcdCommand(0x01);
  1149  0009E4  0E01               	movlw	1
  1150  0009E6  EC47  F00A         	call	_lcdCommand
  1151  0009EA                     
  1152                           ;main.c: 153:                 PORTB = 0x00;
  1153  0009EA  0E00               	movlw	0
  1154  0009EC  6E81               	movwf	129,c	;volatile
  1155  0009EE                     
  1156                           ;main.c: 154:                 PORTCbits.RC5 = 0;
  1157  0009EE  9A82               	bcf	130,5,c	;volatile
  1158  0009F0                     
  1159                           ;main.c: 155:                 TRISCbits.TRISC0 = 0;
  1160  0009F0  9094               	bcf	148,0,c	;volatile
  1161  0009F2                     
  1162                           ;main.c: 156:                 pwmSet1(0);
  1163  0009F2  0E00               	movlw	0
  1164  0009F4  ECFC  F00A         	call	_pwmSet1
  1165  0009F8                     
  1166                           ;main.c: 159:                 pwmFrequency(100);
  1167  0009F8  0E00               	movlw	0
  1168  0009FA  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1169  0009FC  0E64               	movlw	100
  1170  0009FE  6E0F               	movwf	pwmFrequency@freq^0,c
  1171  000A00  EC18  F00C         	call	_pwmFrequency	;wreg free
  1172  000A04                     
  1173                           ;main.c: 160:                 for (int i = 0; i < 2; i++) {
  1174  000A04  0E00               	movlw	0
  1175  000A06  6E3D               	movwf	(main@i+1)^0,c
  1176  000A08  0E00               	movlw	0
  1177  000A0A  6E3C               	movwf	main@i^0,c
  1178  000A0C                     l2213:
  1179  000A0C  BE3D               	btfsc	(main@i+1)^0,7,c
  1180  000A0E  EF12  F005         	goto	u1811
  1181  000A12  503D               	movf	(main@i+1)^0,w,c
  1182  000A14  E109               	bnz	u1810
  1183  000A16  0E02               	movlw	2
  1184  000A18  5C3C               	subwf	main@i^0,w,c
  1185  000A1A  A0D8               	btfss	status,0,c
  1186  000A1C  EF12  F005         	goto	u1811
  1187  000A20  EF14  F005         	goto	u1810
  1188  000A24                     u1811:
  1189  000A24  EF16  F005         	goto	l2217
  1190  000A28                     u1810:
  1191  000A28  EF35  F005         	goto	l2233
  1192  000A2C                     l2217:
  1193                           
  1194                           ;main.c: 161:                     for (int j = 1; j > 0; j = j * 2) {
  1195  000A2C  0E00               	movlw	0
  1196  000A2E  6E4A               	movwf	(main@j+1)^0,c
  1197  000A30  0E01               	movlw	1
  1198  000A32  6E49               	movwf	main@j^0,c
  1199  000A34  BE4A               	btfsc	(main@j+1)^0,7,c
  1200  000A36  EF27  F005         	goto	u1820
  1201  000A3A  504A               	movf	(main@j+1)^0,w,c
  1202  000A3C  E106               	bnz	u1821
  1203  000A3E  0449               	decf	main@j^0,w,c
  1204  000A40  B0D8               	btfsc	status,0,c
  1205  000A42  EF25  F005         	goto	u1821
  1206  000A46  EF27  F005         	goto	u1820
  1207  000A4A                     u1821:
  1208  000A4A  EF29  F005         	goto	l2223
  1209  000A4E                     u1820:
  1210  000A4E  EF30  F005         	goto	l2229
  1211  000A52                     l2223:
  1212                           
  1213                           ;main.c: 162:                         ((TRISC) |= (1<<(1)));
  1214  000A52  8294               	bsf	148,1,c	;volatile
  1215  000A54                     
  1216                           ;main.c: 163:                         atraso_ms(100);
  1217  000A54  0E00               	movlw	0
  1218  000A56  6E02               	movwf	(atraso_ms@t+1)^0,c
  1219  000A58  0E64               	movlw	100
  1220  000A5A  6E01               	movwf	atraso_ms@t^0,c
  1221  000A5C  EC64  F00B         	call	_atraso_ms	;wreg free
  1222  000A60                     l2229:
  1223                           
  1224                           ;main.c: 166:                     ((TRISC) &= ~(1<<(1)));
  1225  000A60  9294               	bcf	148,1,c	;volatile
  1226                           
  1227                           ;main.c: 167:                 }
  1228  000A62  4A3C               	infsnz	main@i^0,f,c
  1229  000A64  2A3D               	incf	(main@i+1)^0,f,c
  1230  000A66  EF06  F005         	goto	l2213
  1231  000A6A                     l2233:
  1232                           
  1233                           ;main.c: 168:                 atraso_ms(1000);
  1234  000A6A  0E03               	movlw	3
  1235  000A6C  6E02               	movwf	(atraso_ms@t+1)^0,c
  1236  000A6E  0EE8               	movlw	232
  1237  000A70  6E01               	movwf	atraso_ms@t^0,c
  1238  000A72  EC64  F00B         	call	_atraso_ms	;wreg free
  1239  000A76                     
  1240                           ;main.c: 169:                 for (int i = 0; i < 2; i++) {
  1241  000A76  0E00               	movlw	0
  1242  000A78  6E3F               	movwf	(main@i_436+1)^0,c
  1243  000A7A  0E00               	movlw	0
  1244  000A7C  6E3E               	movwf	main@i_436^0,c
  1245  000A7E                     l2237:
  1246  000A7E  BE3F               	btfsc	(main@i_436+1)^0,7,c
  1247  000A80  EF4B  F005         	goto	u1831
  1248  000A84  503F               	movf	(main@i_436+1)^0,w,c
  1249  000A86  E109               	bnz	u1830
  1250  000A88  0E02               	movlw	2
  1251  000A8A  5C3E               	subwf	main@i_436^0,w,c
  1252  000A8C  A0D8               	btfss	status,0,c
  1253  000A8E  EF4B  F005         	goto	u1831
  1254  000A92  EF4D  F005         	goto	u1830
  1255  000A96                     u1831:
  1256  000A96  EF4F  F005         	goto	l2241
  1257  000A9A                     u1830:
  1258  000A9A  EF6E  F005         	goto	l2257
  1259  000A9E                     l2241:
  1260                           
  1261                           ;main.c: 170:                     for (int j = 1; j > 0; j = j * 2) {
  1262  000A9E  0E00               	movlw	0
  1263  000AA0  6E4C               	movwf	(main@j_437+1)^0,c
  1264  000AA2  0E01               	movlw	1
  1265  000AA4  6E4B               	movwf	main@j_437^0,c
  1266  000AA6  BE4C               	btfsc	(main@j_437+1)^0,7,c
  1267  000AA8  EF60  F005         	goto	u1840
  1268  000AAC  504C               	movf	(main@j_437+1)^0,w,c
  1269  000AAE  E106               	bnz	u1841
  1270  000AB0  044B               	decf	main@j_437^0,w,c
  1271  000AB2  B0D8               	btfsc	status,0,c
  1272  000AB4  EF5E  F005         	goto	u1841
  1273  000AB8  EF60  F005         	goto	u1840
  1274  000ABC                     u1841:
  1275  000ABC  EF62  F005         	goto	l2247
  1276  000AC0                     u1840:
  1277  000AC0  EF69  F005         	goto	l2253
  1278  000AC4                     l2247:
  1279                           
  1280                           ;main.c: 171:                         ((TRISC) |= (1<<(1)));
  1281  000AC4  8294               	bsf	148,1,c	;volatile
  1282  000AC6                     
  1283                           ;main.c: 172:                         atraso_ms(100);
  1284  000AC6  0E00               	movlw	0
  1285  000AC8  6E02               	movwf	(atraso_ms@t+1)^0,c
  1286  000ACA  0E64               	movlw	100
  1287  000ACC  6E01               	movwf	atraso_ms@t^0,c
  1288  000ACE  EC64  F00B         	call	_atraso_ms	;wreg free
  1289  000AD2                     l2253:
  1290                           
  1291                           ;main.c: 175:                     ((TRISC) &= ~(1<<(1)));
  1292  000AD2  9294               	bcf	148,1,c	;volatile
  1293                           
  1294                           ;main.c: 176:                 }
  1295  000AD4  4A3E               	infsnz	main@i_436^0,f,c
  1296  000AD6  2A3F               	incf	(main@i_436+1)^0,f,c
  1297  000AD8  EF3F  F005         	goto	l2237
  1298  000ADC                     l2257:
  1299                           
  1300                           ;main.c: 177:                 atraso_ms(1000);
  1301  000ADC  0E03               	movlw	3
  1302  000ADE  6E02               	movwf	(atraso_ms@t+1)^0,c
  1303  000AE0  0EE8               	movlw	232
  1304  000AE2  6E01               	movwf	atraso_ms@t^0,c
  1305  000AE4  EC64  F00B         	call	_atraso_ms	;wreg free
  1306  000AE8                     
  1307                           ;main.c: 178:                 for (int i = 0; i < 2; i++) {
  1308  000AE8  0E00               	movlw	0
  1309  000AEA  6E41               	movwf	(main@i_438+1)^0,c
  1310  000AEC  0E00               	movlw	0
  1311  000AEE  6E40               	movwf	main@i_438^0,c
  1312  000AF0                     l2261:
  1313  000AF0  BE41               	btfsc	(main@i_438+1)^0,7,c
  1314  000AF2  EF84  F005         	goto	u1851
  1315  000AF6  5041               	movf	(main@i_438+1)^0,w,c
  1316  000AF8  E109               	bnz	u1850
  1317  000AFA  0E02               	movlw	2
  1318  000AFC  5C40               	subwf	main@i_438^0,w,c
  1319  000AFE  A0D8               	btfss	status,0,c
  1320  000B00  EF84  F005         	goto	u1851
  1321  000B04  EF86  F005         	goto	u1850
  1322  000B08                     u1851:
  1323  000B08  EF88  F005         	goto	l2265
  1324  000B0C                     u1850:
  1325  000B0C  EF3F  F003         	goto	l2067
  1326  000B10                     l2265:
  1327                           
  1328                           ;main.c: 179:                     for (int j = 1; j > 0; j = j * 2) {
  1329  000B10  0E00               	movlw	0
  1330  000B12  6E4E               	movwf	(main@j_439+1)^0,c
  1331  000B14  0E01               	movlw	1
  1332  000B16  6E4D               	movwf	main@j_439^0,c
  1333  000B18  BE4E               	btfsc	(main@j_439+1)^0,7,c
  1334  000B1A  EF99  F005         	goto	u1860
  1335  000B1E  504E               	movf	(main@j_439+1)^0,w,c
  1336  000B20  E106               	bnz	u1861
  1337  000B22  044D               	decf	main@j_439^0,w,c
  1338  000B24  B0D8               	btfsc	status,0,c
  1339  000B26  EF97  F005         	goto	u1861
  1340  000B2A  EF99  F005         	goto	u1860
  1341  000B2E                     u1861:
  1342  000B2E  EF9B  F005         	goto	l2271
  1343  000B32                     u1860:
  1344  000B32  EFA2  F005         	goto	l2277
  1345  000B36                     l2271:
  1346                           
  1347                           ;main.c: 180:                         ((TRISC) |= (1<<(1)));
  1348  000B36  8294               	bsf	148,1,c	;volatile
  1349  000B38                     
  1350                           ;main.c: 181:                         atraso_ms(100);
  1351  000B38  0E00               	movlw	0
  1352  000B3A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1353  000B3C  0E64               	movlw	100
  1354  000B3E  6E01               	movwf	atraso_ms@t^0,c
  1355  000B40  EC64  F00B         	call	_atraso_ms	;wreg free
  1356  000B44                     l2277:
  1357                           
  1358                           ;main.c: 184:                     ((TRISC) &= ~(1<<(1)));
  1359  000B44  9294               	bcf	148,1,c	;volatile
  1360                           
  1361                           ;main.c: 185:                 }
  1362  000B46  4A40               	infsnz	main@i_438^0,f,c
  1363  000B48  2A41               	incf	(main@i_438+1)^0,f,c
  1364  000B4A  EF78  F005         	goto	l2261
  1365  000B4E  EF00  F000         	goto	start
  1366  000B52                     __end_of_main:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _setTemperature *****************
  1370 ;; Defined at:
  1371 ;;		line 7 in file "temperaturaForno.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  str             6   28[COMRAM] unsigned char [6]
  1376 ;;  temperatura     2   35[COMRAM] int 
  1377 ;;  i               2    0        int 
  1378 ;;  tmp             1   34[COMRAM] unsigned char 
  1379 ;; Return value:  Size  Location     Type
  1380 ;;                  2   24[COMRAM] int 
  1381 ;; Registers used:
  1382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1383 ;; Tracked objects:
  1384 ;;		On entry : 0/0
  1385 ;;		On exit  : 0/0
  1386 ;;		Unchanged: 0/0
  1387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1388 ;;      Params:         2       0       0       0       0       0       0
  1389 ;;      Locals:         9       0       0       0       0       0       0
  1390 ;;      Temps:          2       0       0       0       0       0       0
  1391 ;;      Totals:        13       0       0       0       0       0       0
  1392 ;;Total ram usage:       13 bytes
  1393 ;; Hardware stack levels used: 1
  1394 ;; Hardware stack levels required when called: 4
  1395 ;; This function calls:
  1396 ;;		___lwdiv
  1397 ;;		___wmul
  1398 ;;		_adc_amostra
  1399 ;;		_itoa
  1400 ;;		_lcdData
  1401 ;;		_lcdPosition
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text1
  1408  00140C                     __ptext1:
  1409                           	callstack 0
  1410  00140C                     _setTemperature:
  1411                           	callstack 26
  1412  00140C                     
  1413                           ;temperaturaForno.c: 8:     char str[6];;temperaturaForno.c: 9:     unsigned char tmp;;t
      +                          emperaturaForno.c: 10:     int i, temperatura;;temperaturaForno.c: 12:     tmp = (adc_am
      +                          ostra(0)*10) / 204;
  1414  00140C  0E00               	movlw	0
  1415  00140E  ECBE  F009         	call	_adc_amostra
  1416  001412  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
  1417  001416  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
  1418  00141A  0E00               	movlw	0
  1419  00141C  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1420  00141E  0E0A               	movlw	10
  1421  001420  6E0A               	movwf	___wmul@multiplicand^0,c
  1422  001422  EC05  F00C         	call	___wmul	;wreg free
  1423  001426  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1424  00142A  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1425  00142E  0E00               	movlw	0
  1426  001430  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1427  001432  0ECC               	movlw	204
  1428  001434  6E10               	movwf	___lwdiv@divisor^0,c
  1429  001436  ECC2  F00A         	call	___lwdiv	;wreg free
  1430  00143A  500E               	movf	?___lwdiv^0,w,c
  1431  00143C  6E23               	movwf	setTemperature@tmp^0,c
  1432  00143E                     
  1433                           ;temperaturaForno.c: 13:     temperatura = (((int) tmp) * 4) + 50;
  1434  00143E  5023               	movf	setTemperature@tmp^0,w,c
  1435  001440  0D04               	mullw	4
  1436  001442  CFF3 F01B          	movff	prodl,??_setTemperature
  1437  001446  CFF4 F01C          	movff	prodh,??_setTemperature+1
  1438  00144A  0E32               	movlw	50
  1439  00144C  241B               	addwf	??_setTemperature^0,w,c
  1440  00144E  6E24               	movwf	setTemperature@temperatura^0,c
  1441  001450  0E00               	movlw	0
  1442  001452  201C               	addwfc	(??_setTemperature+1)^0,w,c
  1443  001454  6E25               	movwf	(setTemperature@temperatura+1)^0,c
  1444  001456                     
  1445                           ;temperaturaForno.c: 15:     itoa((char) temperatura, str);
  1446  001456  C024  F015         	movff	setTemperature@temperatura,itoa@val
  1447  00145A  6A16               	clrf	(itoa@val+1)^0,c
  1448  00145C  0E1D               	movlw	low setTemperature@str
  1449  00145E  6E17               	movwf	itoa@str^0,c
  1450  001460  0E00               	movlw	high setTemperature@str
  1451  001462  6E18               	movwf	(itoa@str+1)^0,c
  1452  001464  EC3A  F009         	call	_itoa	;wreg free
  1453  001468                     
  1454                           ;temperaturaForno.c: 17:     lcdPosition(0, 12);
  1455  001468  0E0C               	movlw	12
  1456  00146A  6E09               	movwf	lcdPosition@coluna^0,c
  1457  00146C  0E00               	movlw	0
  1458  00146E  ECE8  F00B         	call	_lcdPosition
  1459  001472                     
  1460                           ;temperaturaForno.c: 18:     lcdData(str[2]);
  1461  001472  501F               	movf	(setTemperature@str+2)^0,w,c
  1462  001474  EC96  F00B         	call	_lcdData
  1463  001478                     
  1464                           ;temperaturaForno.c: 19:     lcdData(str[3]);
  1465  001478  5020               	movf	(setTemperature@str+3)^0,w,c
  1466  00147A  EC96  F00B         	call	_lcdData
  1467  00147E                     
  1468                           ;temperaturaForno.c: 20:     lcdData(str[4]);
  1469  00147E  5021               	movf	(setTemperature@str+4)^0,w,c
  1470  001480  EC96  F00B         	call	_lcdData
  1471  001484                     
  1472                           ;temperaturaForno.c: 22:     return temperatura;
  1473  001484  C024  F019         	movff	setTemperature@temperatura,?_setTemperature
  1474  001488  C025  F01A         	movff	setTemperature@temperatura+1,?_setTemperature+1
  1475  00148C  0012               	return		;funcret
  1476  00148E                     __end_of_setTemperature:
  1477                           	callstack 0
  1478                           
  1479 ;; *************** function _lcdPosition *****************
  1480 ;; Defined at:
  1481 ;;		line 118 in file "lcd.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  linha           1    wreg     unsigned char 
  1484 ;;  coluna          1    8[COMRAM] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  linha           1   10[COMRAM] unsigned char 
  1487 ;;  comando         1    9[COMRAM] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1497 ;;      Params:         1       0       0       0       0       0       0
  1498 ;;      Locals:         2       0       0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0
  1500 ;;      Totals:         3       0       0       0       0       0       0
  1501 ;;Total ram usage:        3 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 3
  1504 ;; This function calls:
  1505 ;;		_lcdCommand
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;;		_setTemperature
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text2
  1513  0017D0                     __ptext2:
  1514                           	callstack 0
  1515  0017D0                     _lcdPosition:
  1516                           	callstack 26
  1517                           
  1518                           ;incstack = 0
  1519                           ;lcdPosition@linha stored from wreg
  1520  0017D0  6E0B               	movwf	lcdPosition@linha^0,c
  1521  0017D2                     
  1522                           ;lcd.c: 119:     char comando = 0;
  1523  0017D2  0E00               	movlw	0
  1524  0017D4  6E0A               	movwf	lcdPosition@comando^0,c
  1525  0017D6                     
  1526                           ;lcd.c: 121:     if(linha == 0) comando = 0x80 + coluna;
  1527  0017D6  500B               	movf	lcdPosition@linha^0,w,c
  1528  0017D8  A4D8               	btfss	status,2,c
  1529  0017DA  EFF1  F00B         	goto	u1531
  1530  0017DE  EFF3  F00B         	goto	u1530
  1531  0017E2                     u1531:
  1532  0017E2  EFF6  F00B         	goto	l146
  1533  0017E6                     u1530:
  1534  0017E6  5009               	movf	lcdPosition@coluna^0,w,c
  1535  0017E8  0F80               	addlw	128
  1536  0017EA  6E0A               	movwf	lcdPosition@comando^0,c
  1537  0017EC                     l146:
  1538                           
  1539                           ;lcd.c: 122:     if(linha == 1) comando = 0xC0 + coluna;
  1540  0017EC  040B               	decf	lcdPosition@linha^0,w,c
  1541  0017EE  A4D8               	btfss	status,2,c
  1542  0017F0  EFFC  F00B         	goto	u1541
  1543  0017F4  EFFE  F00B         	goto	u1540
  1544  0017F8                     u1541:
  1545  0017F8  EF01  F00C         	goto	l1875
  1546  0017FC                     u1540:
  1547  0017FC  5009               	movf	lcdPosition@coluna^0,w,c
  1548  0017FE  0FC0               	addlw	192
  1549  001800  6E0A               	movwf	lcdPosition@comando^0,c
  1550  001802                     l1875:
  1551                           
  1552                           ;lcd.c: 124:     lcdCommand(comando);
  1553  001802  500A               	movf	lcdPosition@comando^0,w,c
  1554  001804  EC47  F00A         	call	_lcdCommand
  1555  001808  0012               	return		;funcret
  1556  00180A                     __end_of_lcdPosition:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _itoa *****************
  1560 ;; Defined at:
  1561 ;;		line 26 in file "itoa.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  val             2   20[COMRAM] unsigned int 
  1564 ;;  str             2   22[COMRAM] PTR unsigned char 
  1565 ;;		 -> setTemperature@str(6), main@str(6), main@tempoRelogio(6), 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1577 ;;      Params:         4       0       0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0       0       0
  1580 ;;      Totals:         4       0       0       0       0       0       0
  1581 ;;Total ram usage:        4 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 1
  1584 ;; This function calls:
  1585 ;;		___lwdiv
  1586 ;;		___lwmod
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;;		_setTemperature
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text3
  1594  001274                     __ptext3:
  1595                           	callstack 0
  1596  001274                     _itoa:
  1597                           	callstack 28
  1598  001274                     
  1599                           ;itoa.c: 26: void itoa(unsigned int val, char* str );itoa.c: 27: {;itoa.c: 28:   str[0]=
      +                          (val/10000)+0x30;
  1600  001274  C015  F00E         	movff	itoa@val,___lwdiv@dividend
  1601  001278  C016  F00F         	movff	itoa@val+1,___lwdiv@dividend+1
  1602  00127C  0E27               	movlw	39
  1603  00127E  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1604  001280  0E10               	movlw	16
  1605  001282  6E10               	movwf	___lwdiv@divisor^0,c
  1606  001284  ECC2  F00A         	call	___lwdiv	;wreg free
  1607  001288  500E               	movf	?___lwdiv^0,w,c
  1608  00128A  0F30               	addlw	48
  1609  00128C  C017  FFD9         	movff	itoa@str,fsr2l
  1610  001290  C018  FFDA         	movff	itoa@str+1,fsr2h
  1611  001294  6EDF               	movwf	indf2,c
  1612                           
  1613                           ;itoa.c: 29:   str[1]=((val%10000)/1000)+0x30;
  1614  001296  EE20 F001          	lfsr	2,1
  1615  00129A  5017               	movf	itoa@str^0,w,c
  1616  00129C  26D9               	addwf	fsr2l,f,c
  1617  00129E  5018               	movf	(itoa@str+1)^0,w,c
  1618  0012A0  22DA               	addwfc	fsr2h,f,c
  1619  0012A2  0E27               	movlw	39
  1620  0012A4  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1621  0012A6  0E10               	movlw	16
  1622  0012A8  6E03               	movwf	___lwmod@divisor^0,c
  1623  0012AA  C015  F001         	movff	itoa@val,___lwmod@dividend
  1624  0012AE  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1625  0012B2  EC32  F00B         	call	___lwmod	;wreg free
  1626  0012B6  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1627  0012BA  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1628  0012BE  0E03               	movlw	3
  1629  0012C0  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1630  0012C2  0EE8               	movlw	232
  1631  0012C4  6E10               	movwf	___lwdiv@divisor^0,c
  1632  0012C6  ECC2  F00A         	call	___lwdiv	;wreg free
  1633  0012CA  500E               	movf	?___lwdiv^0,w,c
  1634  0012CC  0F30               	addlw	48
  1635  0012CE  6EDF               	movwf	indf2,c
  1636                           
  1637                           ;itoa.c: 30:   str[2]=((val%1000)/100)+0x30;
  1638  0012D0  EE20 F002          	lfsr	2,2
  1639  0012D4  5017               	movf	itoa@str^0,w,c
  1640  0012D6  26D9               	addwf	fsr2l,f,c
  1641  0012D8  5018               	movf	(itoa@str+1)^0,w,c
  1642  0012DA  22DA               	addwfc	fsr2h,f,c
  1643  0012DC  0E03               	movlw	3
  1644  0012DE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1645  0012E0  0EE8               	movlw	232
  1646  0012E2  6E03               	movwf	___lwmod@divisor^0,c
  1647  0012E4  C015  F001         	movff	itoa@val,___lwmod@dividend
  1648  0012E8  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1649  0012EC  EC32  F00B         	call	___lwmod	;wreg free
  1650  0012F0  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1651  0012F4  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1652  0012F8  0E00               	movlw	0
  1653  0012FA  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1654  0012FC  0E64               	movlw	100
  1655  0012FE  6E10               	movwf	___lwdiv@divisor^0,c
  1656  001300  ECC2  F00A         	call	___lwdiv	;wreg free
  1657  001304  500E               	movf	?___lwdiv^0,w,c
  1658  001306  0F30               	addlw	48
  1659  001308  6EDF               	movwf	indf2,c
  1660                           
  1661                           ;itoa.c: 31:   str[3]=((val%100)/10)+0x30;
  1662  00130A  EE20 F003          	lfsr	2,3
  1663  00130E  5017               	movf	itoa@str^0,w,c
  1664  001310  26D9               	addwf	fsr2l,f,c
  1665  001312  5018               	movf	(itoa@str+1)^0,w,c
  1666  001314  22DA               	addwfc	fsr2h,f,c
  1667  001316  0E00               	movlw	0
  1668  001318  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1669  00131A  0E64               	movlw	100
  1670  00131C  6E03               	movwf	___lwmod@divisor^0,c
  1671  00131E  C015  F001         	movff	itoa@val,___lwmod@dividend
  1672  001322  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1673  001326  EC32  F00B         	call	___lwmod	;wreg free
  1674  00132A  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1675  00132E  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1676  001332  0E00               	movlw	0
  1677  001334  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1678  001336  0E0A               	movlw	10
  1679  001338  6E10               	movwf	___lwdiv@divisor^0,c
  1680  00133A  ECC2  F00A         	call	___lwdiv	;wreg free
  1681  00133E  500E               	movf	?___lwdiv^0,w,c
  1682  001340  0F30               	addlw	48
  1683  001342  6EDF               	movwf	indf2,c
  1684                           
  1685                           ;itoa.c: 32:   str[4]=(val%10)+0x30;
  1686  001344  EE20 F004          	lfsr	2,4
  1687  001348  5017               	movf	itoa@str^0,w,c
  1688  00134A  26D9               	addwf	fsr2l,f,c
  1689  00134C  5018               	movf	(itoa@str+1)^0,w,c
  1690  00134E  22DA               	addwfc	fsr2h,f,c
  1691  001350  C015  F001         	movff	itoa@val,___lwmod@dividend
  1692  001354  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1693  001358  0E00               	movlw	0
  1694  00135A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1695  00135C  0E0A               	movlw	10
  1696  00135E  6E03               	movwf	___lwmod@divisor^0,c
  1697  001360  EC32  F00B         	call	___lwmod	;wreg free
  1698  001364  5001               	movf	?___lwmod^0,w,c
  1699  001366  0F30               	addlw	48
  1700  001368  6EDF               	movwf	indf2,c
  1701  00136A                     
  1702                           ;itoa.c: 33:   str[5]=0;
  1703  00136A  EE20 F005          	lfsr	2,5
  1704  00136E  5017               	movf	itoa@str^0,w,c
  1705  001370  26D9               	addwf	fsr2l,f,c
  1706  001372  5018               	movf	(itoa@str+1)^0,w,c
  1707  001374  22DA               	addwfc	fsr2h,f,c
  1708  001376  0E00               	movlw	0
  1709  001378  6EDF               	movwf	indf2,c
  1710  00137A  0012               	return		;funcret
  1711  00137C                     __end_of_itoa:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function ___lwmod *****************
  1715 ;; Defined at:
  1716 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  dividend        2    0[COMRAM] unsigned int 
  1719 ;;  divisor         2    2[COMRAM] unsigned int 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;  counter         1    4[COMRAM] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    0[COMRAM] unsigned int 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2, status,0
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1731 ;;      Params:         4       0       0       0       0       0       0
  1732 ;;      Locals:         1       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0
  1734 ;;      Totals:         5       0       0       0       0       0       0
  1735 ;;Total ram usage:        5 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_itoa
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text4
  1745  001664                     __ptext4:
  1746                           	callstack 0
  1747  001664                     ___lwmod:
  1748                           	callstack 28
  1749  001664  5003               	movf	___lwmod@divisor^0,w,c
  1750  001666  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1751  001668  B4D8               	btfsc	status,2,c
  1752  00166A  EF39  F00B         	goto	u1301
  1753  00166E  EF3B  F00B         	goto	u1300
  1754  001672                     u1301:
  1755  001672  EF5F  F00B         	goto	l837
  1756  001676                     u1300:
  1757  001676  0E01               	movlw	1
  1758  001678  6E05               	movwf	___lwmod@counter^0,c
  1759  00167A  EF43  F00B         	goto	l1801
  1760  00167E                     l1799:
  1761  00167E  90D8               	bcf	status,0,c
  1762  001680  3603               	rlcf	___lwmod@divisor^0,f,c
  1763  001682  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1764  001684  2A05               	incf	___lwmod@counter^0,f,c
  1765  001686                     l1801:
  1766  001686  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1767  001688  EF48  F00B         	goto	u1311
  1768  00168C  EF4A  F00B         	goto	u1310
  1769  001690                     u1311:
  1770  001690  EF3F  F00B         	goto	l1799
  1771  001694                     u1310:
  1772  001694                     l1803:
  1773  001694  5003               	movf	___lwmod@divisor^0,w,c
  1774  001696  5C01               	subwf	___lwmod@dividend^0,w,c
  1775  001698  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1776  00169A  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1777  00169C  A0D8               	btfss	status,0,c
  1778  00169E  EF53  F00B         	goto	u1321
  1779  0016A2  EF55  F00B         	goto	u1320
  1780  0016A6                     u1321:
  1781  0016A6  EF59  F00B         	goto	l1807
  1782  0016AA                     u1320:
  1783  0016AA  5003               	movf	___lwmod@divisor^0,w,c
  1784  0016AC  5E01               	subwf	___lwmod@dividend^0,f,c
  1785  0016AE  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1786  0016B0  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1787  0016B2                     l1807:
  1788  0016B2  90D8               	bcf	status,0,c
  1789  0016B4  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1790  0016B6  3203               	rrcf	___lwmod@divisor^0,f,c
  1791  0016B8  2E05               	decfsz	___lwmod@counter^0,f,c
  1792  0016BA  EF4A  F00B         	goto	l1803
  1793  0016BE                     l837:
  1794  0016BE  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1795  0016C2  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1796  0016C6  0012               	return		;funcret
  1797  0016C8                     __end_of___lwmod:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function _adc_amostra *****************
  1801 ;; Defined at:
  1802 ;;		line 44 in file "adc.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  canal           1    wreg     unsigned char 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  canal           1    6[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  2    0[COMRAM] unsigned int 
  1809 ;; Registers used:
  1810 ;;		wreg, status,2, status,0
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1816 ;;      Params:         2       0       0       0       0       0       0
  1817 ;;      Locals:         1       0       0       0       0       0       0
  1818 ;;      Temps:          4       0       0       0       0       0       0
  1819 ;;      Totals:         7       0       0       0       0       0       0
  1820 ;;Total ram usage:        7 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;;		_setTemperature
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text5
  1831  00137C                     __ptext5:
  1832                           	callstack 0
  1833  00137C                     _adc_amostra:
  1834                           	callstack 29
  1835                           
  1836                           ;incstack = 0
  1837                           ;adc_amostra@canal stored from wreg
  1838  00137C  6E07               	movwf	adc_amostra@canal^0,c
  1839  00137E                     
  1840                           ;adc.c: 44: unsigned int adc_amostra(unsigned char canal);adc.c: 45: {;adc.c: 62:      s
      +                          witch(canal)
  1841  00137E  EFCD  F009         	goto	l1887
  1842  001382                     l1879:
  1843                           
  1844                           ;adc.c: 65:         ADCON0=0x01;
  1845  001382  0E01               	movlw	1
  1846  001384  6EC2               	movwf	194,c	;volatile
  1847                           
  1848                           ;adc.c: 66:         break;
  1849  001386  EFE6  F009         	goto	l184
  1850  00138A                     l1881:
  1851                           
  1852                           ;adc.c: 68:         ADCON0=0x09;
  1853  00138A  0E09               	movlw	9
  1854  00138C  6EC2               	movwf	194,c	;volatile
  1855                           
  1856                           ;adc.c: 69:         break;
  1857  00138E  EFE6  F009         	goto	l184
  1858  001392                     l1883:
  1859                           
  1860                           ;adc.c: 71:         ADCON0=0x11;
  1861  001392  0E11               	movlw	17
  1862  001394  6EC2               	movwf	194,c	;volatile
  1863                           
  1864                           ;adc.c: 72:         break;
  1865  001396  EFE6  F009         	goto	l184
  1866  00139A                     l1887:
  1867  00139A  5007               	movf	adc_amostra@canal^0,w,c
  1868  00139C  6E03               	movwf	??_adc_amostra^0,c
  1869  00139E  6A04               	clrf	(??_adc_amostra+1)^0,c
  1870                           
  1871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1872                           ; Switch size 1, requested type "simple"
  1873                           ; Number of cases is 1, Range of values is 0 to 0
  1874                           ; switch strategies available:
  1875                           ; Name         Instructions Cycles
  1876                           ; simple_byte            4     3 (average)
  1877                           ;	Chosen strategy is simple_byte
  1878  0013A0  5004               	movf	(??_adc_amostra+1)^0,w,c
  1879  0013A2  0A00               	xorlw	0	; case 0
  1880  0013A4  B4D8               	btfsc	status,2,c
  1881  0013A6  EFD7  F009         	goto	l2285
  1882  0013AA  EFE6  F009         	goto	l184
  1883  0013AE                     l2285:
  1884                           
  1885                           ; Switch size 1, requested type "simple"
  1886                           ; Number of cases is 3, Range of values is 0 to 2
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte           10     6 (average)
  1890                           ;	Chosen strategy is simple_byte
  1891  0013AE  5003               	movf	??_adc_amostra^0,w,c
  1892  0013B0  0A00               	xorlw	0	; case 0
  1893  0013B2  B4D8               	btfsc	status,2,c
  1894  0013B4  EFC1  F009         	goto	l1879
  1895  0013B8  0A01               	xorlw	1	; case 1
  1896  0013BA  B4D8               	btfsc	status,2,c
  1897  0013BC  EFC5  F009         	goto	l1881
  1898  0013C0  0A03               	xorlw	3	; case 2
  1899  0013C2  B4D8               	btfsc	status,2,c
  1900  0013C4  EFC9  F009         	goto	l1883
  1901  0013C8  EFE6  F009         	goto	l184
  1902  0013CC                     l184:
  1903                           
  1904                           ;adc.c: 77:     ADCON0bits.GO=1;
  1905  0013CC  82C2               	bsf	194,1,c	;volatile
  1906  0013CE                     l187:
  1907  0013CE  B2C2               	btfsc	194,1,c	;volatile
  1908  0013D0  EFEC  F009         	goto	u1551
  1909  0013D4  EFEE  F009         	goto	u1550
  1910  0013D8                     u1551:
  1911  0013D8  EFE7  F009         	goto	l187
  1912  0013DC                     u1550:
  1913  0013DC                     
  1914                           ;adc.c: 80:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1915  0013DC  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1916  0013E0  0E06               	movlw	6
  1917  0013E2  6E04               	movwf	(??_adc_amostra+1)^0,c
  1918  0013E4                     u1565:
  1919  0013E4  90D8               	bcf	status,0,c
  1920  0013E6  3203               	rrcf	??_adc_amostra^0,f,c
  1921  0013E8  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1922  0013EA  EFF2  F009         	goto	u1565
  1923  0013EE  5003               	movf	??_adc_amostra^0,w,c
  1924  0013F0  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1925  0013F4  6A06               	clrf	(??_adc_amostra+3)^0,c
  1926  0013F6  90D8               	bcf	status,0,c
  1927  0013F8  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1928  0013FA  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1929  0013FC  90D8               	bcf	status,0,c
  1930  0013FE  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1931  001400  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1932  001402  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1933  001404  6E01               	movwf	?_adc_amostra^0,c
  1934  001406  5006               	movf	(??_adc_amostra+3)^0,w,c
  1935  001408  6E02               	movwf	(?_adc_amostra+1)^0,c
  1936  00140A  0012               	return		;funcret
  1937  00140C                     __end_of_adc_amostra:
  1938                           	callstack 0
  1939                           
  1940 ;; *************** function _pwmSet1 *****************
  1941 ;; Defined at:
  1942 ;;		line 24 in file "pwm.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  porcento        1    wreg     unsigned char 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;  porcento        1   22[COMRAM] unsigned char 
  1947 ;;  val             2   23[COMRAM] unsigned int 
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  1    wreg      void 
  1950 ;; Registers used:
  1951 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1957 ;;      Params:         0       0       0       0       0       0       0
  1958 ;;      Locals:         3       0       0       0       0       0       0
  1959 ;;      Temps:          2       0       0       0       0       0       0
  1960 ;;      Totals:         5       0       0       0       0       0       0
  1961 ;;Total ram usage:        5 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 1
  1964 ;; This function calls:
  1965 ;;		___lwdiv
  1966 ;;		___wmul
  1967 ;; This function is called by:
  1968 ;;		_main
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text6
  1973  0015F8                     __ptext6:
  1974                           	callstack 0
  1975  0015F8                     _pwmSet1:
  1976                           	callstack 29
  1977                           
  1978                           ;incstack = 0
  1979                           ;pwmSet1@porcento stored from wreg
  1980  0015F8  6E17               	movwf	pwmSet1@porcento^0,c
  1981  0015FA                     
  1982                           ;pwm.c: 24: void pwmSet1(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int v
      +                          al = ((unsigned int)porcento) *(PR2+1);
  1983  0015FA  0E01               	movlw	1
  1984  0015FC  24CB               	addwf	203,w,c	;volatile
  1985  0015FE  6E08               	movwf	___wmul@multiplier^0,c
  1986  001600  6A09               	clrf	(___wmul@multiplier+1)^0,c
  1987  001602  0E00               	movlw	0
  1988  001604  2209               	addwfc	(___wmul@multiplier+1)^0,f,c
  1989  001606  C017  F00A         	movff	pwmSet1@porcento,___wmul@multiplicand
  1990  00160A  6A0B               	clrf	(___wmul@multiplicand+1)^0,c
  1991  00160C  EC05  F00C         	call	___wmul	;wreg free
  1992  001610  C008  F018         	movff	?___wmul,pwmSet1@val
  1993  001614  C009  F019         	movff	?___wmul+1,pwmSet1@val+1
  1994  001618                     
  1995                           ;pwm.c: 32:  val = val / 25;
  1996  001618  C018  F00E         	movff	pwmSet1@val,___lwdiv@dividend
  1997  00161C  C019  F00F         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1998  001620  0E00               	movlw	0
  1999  001622  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  2000  001624  0E19               	movlw	25
  2001  001626  6E10               	movwf	___lwdiv@divisor^0,c
  2002  001628  ECC2  F00A         	call	___lwdiv	;wreg free
  2003  00162C  C00E  F018         	movff	?___lwdiv,pwmSet1@val
  2004  001630  C00F  F019         	movff	?___lwdiv+1,pwmSet1@val+1
  2005  001634                     
  2006                           ;pwm.c: 34:  val &= 0x03ff;
  2007  001634  0EFF               	movlw	255
  2008  001636  1618               	andwf	pwmSet1@val^0,f,c
  2009  001638  0E03               	movlw	3
  2010  00163A  1619               	andwf	(pwmSet1@val+1)^0,f,c
  2011  00163C                     
  2012                           ;pwm.c: 36:  CCPR1L = val >> 2;
  2013  00163C  C018  F015         	movff	pwmSet1@val,??_pwmSet1
  2014  001640  C019  F016         	movff	pwmSet1@val+1,??_pwmSet1+1
  2015  001644  90D8               	bcf	status,0,c
  2016  001646  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  2017  001648  3215               	rrcf	??_pwmSet1^0,f,c
  2018  00164A  90D8               	bcf	status,0,c
  2019  00164C  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  2020  00164E  3215               	rrcf	??_pwmSet1^0,f,c
  2021  001650  5015               	movf	??_pwmSet1^0,w,c
  2022  001652  6EBE               	movwf	190,c	;volatile
  2023  001654                     
  2024                           ;pwm.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  2025  001654  C018  F015         	movff	pwmSet1@val,??_pwmSet1	;volatile
  2026  001658  0E03               	movlw	3
  2027  00165A  1615               	andwf	??_pwmSet1^0,f,c
  2028  00165C  3815               	swapf	??_pwmSet1^0,w,c
  2029  00165E  0BF0               	andlw	240
  2030  001660  12BD               	iorwf	189,f,c	;volatile
  2031  001662  0012               	return		;funcret
  2032  001664                     __end_of_pwmSet1:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function ___wmul *****************
  2036 ;; Defined at:
  2037 ;;		line 15 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  multiplier      2    7[COMRAM] unsigned int 
  2040 ;;  multiplicand    2    9[COMRAM] unsigned int 
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  product         2   11[COMRAM] unsigned int 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  2    7[COMRAM] unsigned int 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, prodl, prodh
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2052 ;;      Params:         4       0       0       0       0       0       0
  2053 ;;      Locals:         2       0       0       0       0       0       0
  2054 ;;      Temps:          0       0       0       0       0       0       0
  2055 ;;      Totals:         6       0       0       0       0       0       0
  2056 ;;Total ram usage:        6 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_pwmSet1
  2062 ;;		_main
  2063 ;;		_setTemperature
  2064 ;;		_pwmSet2
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text7
  2069  00180A                     __ptext7:
  2070                           	callstack 0
  2071  00180A                     ___wmul:
  2072                           	callstack 29
  2073  00180A  5008               	movf	___wmul@multiplier^0,w,c
  2074  00180C  020A               	mulwf	___wmul@multiplicand^0,c
  2075  00180E  CFF3 F00C          	movff	prodl,___wmul@product
  2076  001812  CFF4 F00D          	movff	prodh,___wmul@product+1
  2077  001816  5008               	movf	___wmul@multiplier^0,w,c
  2078  001818  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  2079  00181A  50F3               	movf	243,w,c
  2080  00181C  260D               	addwf	(___wmul@product+1)^0,f,c
  2081  00181E  5009               	movf	(___wmul@multiplier+1)^0,w,c
  2082  001820  020A               	mulwf	___wmul@multiplicand^0,c
  2083  001822  50F3               	movf	243,w,c
  2084  001824  260D               	addwf	(___wmul@product+1)^0,f,c
  2085  001826  C00C  F008         	movff	___wmul@product,?___wmul
  2086  00182A  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  2087  00182E  0012               	return		;funcret
  2088  001830                     __end_of___wmul:
  2089                           	callstack 0
  2090                           
  2091 ;; *************** function ___lwdiv *****************
  2092 ;; Defined at:
  2093 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;  dividend        2   13[COMRAM] unsigned int 
  2096 ;;  divisor         2   15[COMRAM] unsigned int 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  quotient        2   17[COMRAM] unsigned int 
  2099 ;;  counter         1   19[COMRAM] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  2   13[COMRAM] unsigned int 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2109 ;;      Params:         4       0       0       0       0       0       0
  2110 ;;      Locals:         3       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0
  2112 ;;      Totals:         7       0       0       0       0       0       0
  2113 ;;Total ram usage:        7 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_itoa
  2119 ;;		_pwmSet1
  2120 ;;		_main
  2121 ;;		_setTemperature
  2122 ;;		_pwmSet2
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text8
  2127  001584                     __ptext8:
  2128                           	callstack 0
  2129  001584                     ___lwdiv:
  2130                           	callstack 28
  2131  001584  0E00               	movlw	0
  2132  001586  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  2133  001588  0E00               	movlw	0
  2134  00158A  6E12               	movwf	___lwdiv@quotient^0,c
  2135  00158C  5010               	movf	___lwdiv@divisor^0,w,c
  2136  00158E  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2137  001590  B4D8               	btfsc	status,2,c
  2138  001592  EFCD  F00A         	goto	u1271
  2139  001596  EFCF  F00A         	goto	u1270
  2140  00159A                     u1271:
  2141  00159A  EFF7  F00A         	goto	l827
  2142  00159E                     u1270:
  2143  00159E  0E01               	movlw	1
  2144  0015A0  6E14               	movwf	___lwdiv@counter^0,c
  2145  0015A2  EFD7  F00A         	goto	l1781
  2146  0015A6                     l1779:
  2147  0015A6  90D8               	bcf	status,0,c
  2148  0015A8  3610               	rlcf	___lwdiv@divisor^0,f,c
  2149  0015AA  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2150  0015AC  2A14               	incf	___lwdiv@counter^0,f,c
  2151  0015AE                     l1781:
  2152  0015AE  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  2153  0015B0  EFDC  F00A         	goto	u1281
  2154  0015B4  EFDE  F00A         	goto	u1280
  2155  0015B8                     u1281:
  2156  0015B8  EFD3  F00A         	goto	l1779
  2157  0015BC                     u1280:
  2158  0015BC                     l1783:
  2159  0015BC  90D8               	bcf	status,0,c
  2160  0015BE  3612               	rlcf	___lwdiv@quotient^0,f,c
  2161  0015C0  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2162  0015C2  5010               	movf	___lwdiv@divisor^0,w,c
  2163  0015C4  5C0E               	subwf	___lwdiv@dividend^0,w,c
  2164  0015C6  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  2165  0015C8  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2166  0015CA  A0D8               	btfss	status,0,c
  2167  0015CC  EFEA  F00A         	goto	u1291
  2168  0015D0  EFEC  F00A         	goto	u1290
  2169  0015D4                     u1291:
  2170  0015D4  EFF1  F00A         	goto	l1791
  2171  0015D8                     u1290:
  2172  0015D8  5010               	movf	___lwdiv@divisor^0,w,c
  2173  0015DA  5E0E               	subwf	___lwdiv@dividend^0,f,c
  2174  0015DC  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  2175  0015DE  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2176  0015E0  8012               	bsf	___lwdiv@quotient^0,0,c
  2177  0015E2                     l1791:
  2178  0015E2  90D8               	bcf	status,0,c
  2179  0015E4  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2180  0015E6  3210               	rrcf	___lwdiv@divisor^0,f,c
  2181  0015E8  2E14               	decfsz	___lwdiv@counter^0,f,c
  2182  0015EA  EFDE  F00A         	goto	l1783
  2183  0015EE                     l827:
  2184  0015EE  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  2185  0015F2  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2186  0015F6  0012               	return		;funcret
  2187  0015F8                     __end_of___lwdiv:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _pwmInit *****************
  2191 ;; Defined at:
  2192 ;;		line 60 in file "pwm.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2206 ;;      Params:         0       0       0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_main
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text9
  2220  0018A0                     __ptext9:
  2221                           	callstack 0
  2222  0018A0                     _pwmInit:
  2223                           	callstack 30
  2224  0018A0                     
  2225                           ;pwm.c: 62:  ((TRISC) &= ~(1<<(1)));
  2226  0018A0  9294               	bcf	148,1,c	;volatile
  2227                           
  2228                           ;pwm.c: 63:  ((TRISC) &= ~(1<<(2)));
  2229  0018A2  9494               	bcf	148,2,c	;volatile
  2230  0018A4                     
  2231                           ;pwm.c: 65:  T2CON |= 0b00000011;
  2232  0018A4  0E03               	movlw	3
  2233  0018A6  12CA               	iorwf	202,f,c	;volatile
  2234  0018A8                     
  2235                           ;pwm.c: 66:  ((T2CON) |= (1<<(2)));
  2236  0018A8  84CA               	bsf	202,2,c	;volatile
  2237                           
  2238                           ;pwm.c: 69:  CCP1CON |= 0b00001100;
  2239  0018AA  0E0C               	movlw	12
  2240  0018AC  12BD               	iorwf	189,f,c	;volatile
  2241                           
  2242                           ;pwm.c: 70:  CCP2CON |= 0b00001100;
  2243  0018AE  0E0C               	movlw	12
  2244  0018B0  12BA               	iorwf	186,f,c	;volatile
  2245  0018B2  0012               	return		;funcret
  2246  0018B4                     __end_of_pwmInit:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _pwmFrequency *****************
  2250 ;; Defined at:
  2251 ;;		line 53 in file "pwm.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  freq            2   14[COMRAM] unsigned int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         2       0       0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0
  2268 ;;      Totals:         2       0       0       0       0       0       0
  2269 ;;Total ram usage:        2 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 1
  2272 ;; This function calls:
  2273 ;;		___aldiv
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text10
  2280  001830                     __ptext10:
  2281                           	callstack 0
  2282  001830                     _pwmFrequency:
  2283                           	callstack 29
  2284  001830                     
  2285                           ;pwm.c: 53: void pwmFrequency(unsigned int freq);pwm.c: 54: {;pwm.c: 57:  PR2 = (125000/
      +                          (freq)) - 1;
  2286  001830  0E48               	movlw	72
  2287  001832  6E01               	movwf	___aldiv@dividend^0,c
  2288  001834  0EE8               	movlw	232
  2289  001836  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2290  001838  0E01               	movlw	1
  2291  00183A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2292  00183C  0E00               	movlw	0
  2293  00183E  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2294  001840  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2295  001844  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2296  001848  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2297  00184A  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2298  00184C  ECB4  F008         	call	___aldiv	;wreg free
  2299  001850  0401               	decf	?___aldiv^0,w,c
  2300  001852  6ECB               	movwf	203,c	;volatile
  2301  001854  0012               	return		;funcret
  2302  001856                     __end_of_pwmFrequency:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function ___aldiv *****************
  2306 ;; Defined at:
  2307 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  dividend        4    0[COMRAM] long 
  2310 ;;  divisor         4    4[COMRAM] long 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  quotient        4   10[COMRAM] long 
  2313 ;;  sign            1    9[COMRAM] unsigned char 
  2314 ;;  counter         1    8[COMRAM] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  4    0[COMRAM] long 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         8       0       0       0       0       0       0
  2325 ;;      Locals:         6       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:        14       0       0       0       0       0       0
  2328 ;;Total ram usage:       14 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_pwmFrequency
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text11
  2338  001168                     __ptext11:
  2339                           	callstack 0
  2340  001168                     ___aldiv:
  2341                           	callstack 29
  2342  001168  0E00               	movlw	0
  2343  00116A  6E0A               	movwf	___aldiv@sign^0,c
  2344  00116C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2345  00116E  EFBD  F008         	goto	u1570
  2346  001172  EFBB  F008         	goto	u1571
  2347  001176                     u1571:
  2348  001176  EFC7  F008         	goto	l1915
  2349  00117A                     u1570:
  2350  00117A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2351  00117C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2352  00117E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2353  001180  6C05               	negf	___aldiv@divisor^0,c
  2354  001182  0E00               	movlw	0
  2355  001184  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2356  001186  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2357  001188  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2358  00118A  0E01               	movlw	1
  2359  00118C  6E0A               	movwf	___aldiv@sign^0,c
  2360  00118E                     l1915:
  2361  00118E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2362  001190  EFCE  F008         	goto	u1580
  2363  001194  EFCC  F008         	goto	u1581
  2364  001198                     u1581:
  2365  001198  EFD8  F008         	goto	l1921
  2366  00119C                     u1580:
  2367  00119C  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2368  00119E  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2369  0011A0  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2370  0011A2  6C01               	negf	___aldiv@dividend^0,c
  2371  0011A4  0E00               	movlw	0
  2372  0011A6  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2373  0011A8  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2374  0011AA  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2375  0011AC  0E01               	movlw	1
  2376  0011AE  1A0A               	xorwf	___aldiv@sign^0,f,c
  2377  0011B0                     l1921:
  2378  0011B0  0E00               	movlw	0
  2379  0011B2  6E0B               	movwf	___aldiv@quotient^0,c
  2380  0011B4  0E00               	movlw	0
  2381  0011B6  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2382  0011B8  0E00               	movlw	0
  2383  0011BA  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2384  0011BC  0E00               	movlw	0
  2385  0011BE  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2386  0011C0  5005               	movf	___aldiv@divisor^0,w,c
  2387  0011C2  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2388  0011C4  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2389  0011C6  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2390  0011C8  B4D8               	btfsc	status,2,c
  2391  0011CA  EFE9  F008         	goto	u1591
  2392  0011CE  EFEB  F008         	goto	u1590
  2393  0011D2                     u1591:
  2394  0011D2  EF21  F009         	goto	l1943
  2395  0011D6                     u1590:
  2396  0011D6  0E01               	movlw	1
  2397  0011D8  6E09               	movwf	___aldiv@counter^0,c
  2398  0011DA  EFF5  F008         	goto	l1929
  2399  0011DE                     l1927:
  2400  0011DE  90D8               	bcf	status,0,c
  2401  0011E0  3605               	rlcf	___aldiv@divisor^0,f,c
  2402  0011E2  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2403  0011E4  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2404  0011E6  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2405  0011E8  2A09               	incf	___aldiv@counter^0,f,c
  2406  0011EA                     l1929:
  2407  0011EA  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2408  0011EC  EFFA  F008         	goto	u1601
  2409  0011F0  EFFC  F008         	goto	u1600
  2410  0011F4                     u1601:
  2411  0011F4  EFEF  F008         	goto	l1927
  2412  0011F8                     u1600:
  2413  0011F8                     l1931:
  2414  0011F8  90D8               	bcf	status,0,c
  2415  0011FA  360B               	rlcf	___aldiv@quotient^0,f,c
  2416  0011FC  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2417  0011FE  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2418  001200  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2419  001202  5005               	movf	___aldiv@divisor^0,w,c
  2420  001204  5C01               	subwf	___aldiv@dividend^0,w,c
  2421  001206  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2422  001208  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2423  00120A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2424  00120C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2425  00120E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2426  001210  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2427  001212  A0D8               	btfss	status,0,c
  2428  001214  EF0E  F009         	goto	u1611
  2429  001218  EF10  F009         	goto	u1610
  2430  00121C                     u1611:
  2431  00121C  EF19  F009         	goto	l1939
  2432  001220                     u1610:
  2433  001220  5005               	movf	___aldiv@divisor^0,w,c
  2434  001222  5E01               	subwf	___aldiv@dividend^0,f,c
  2435  001224  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2436  001226  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2437  001228  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2438  00122A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2439  00122C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2440  00122E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2441  001230  800B               	bsf	___aldiv@quotient^0,0,c
  2442  001232                     l1939:
  2443  001232  90D8               	bcf	status,0,c
  2444  001234  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2445  001236  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2446  001238  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2447  00123A  3205               	rrcf	___aldiv@divisor^0,f,c
  2448  00123C  2E09               	decfsz	___aldiv@counter^0,f,c
  2449  00123E  EFFC  F008         	goto	l1931
  2450  001242                     l1943:
  2451  001242  500A               	movf	___aldiv@sign^0,w,c
  2452  001244  B4D8               	btfsc	status,2,c
  2453  001246  EF27  F009         	goto	u1621
  2454  00124A  EF29  F009         	goto	u1620
  2455  00124E                     u1621:
  2456  00124E  EF31  F009         	goto	l1947
  2457  001252                     u1620:
  2458  001252  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2459  001254  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2460  001256  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2461  001258  6C0B               	negf	___aldiv@quotient^0,c
  2462  00125A  0E00               	movlw	0
  2463  00125C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2464  00125E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2465  001260  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2466  001262                     l1947:
  2467  001262  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2468  001266  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2469  00126A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2470  00126E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2471  001272  0012               	return		;funcret
  2472  001274                     __end_of___aldiv:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _lcd_str *****************
  2476 ;; Defined at:
  2477 ;;		line 127 in file "lcd.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2480 ;;		 -> STR_8(2), STR_7(4), STR_6(13), STR_5(4), 
  2481 ;;		 -> STR_4(7), STR_3(13), STR_2(14), STR_1(15), 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  i               1   12[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2493 ;;      Params:         2       0       0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0       0       0
  2495 ;;      Temps:          2       0       0       0       0       0       0
  2496 ;;      Totals:         5       0       0       0       0       0       0
  2497 ;;Total ram usage:        5 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 2
  2500 ;; This function calls:
  2501 ;;		_lcdData
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text12
  2508  001780                     __ptext12:
  2509                           	callstack 0
  2510  001780                     _lcd_str:
  2511                           	callstack 28
  2512  001780                     
  2513                           ;lcd.c: 128:     unsigned char i=0;
  2514  001780  0E00               	movlw	0
  2515  001782  6E0D               	movwf	lcd_str@i^0,c
  2516                           
  2517                           ;lcd.c: 130:     while(str[i] != 0 ){
  2518  001784  EFD3  F00B         	goto	l1993
  2519  001788                     l1989:
  2520                           
  2521                           ;lcd.c: 131:         lcdData(str[i]);
  2522  001788  500D               	movf	lcd_str@i^0,w,c
  2523  00178A  2409               	addwf	lcd_str@str^0,w,c
  2524  00178C  6E0B               	movwf	??_lcd_str^0,c
  2525  00178E  0E00               	movlw	0
  2526  001790  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2527  001792  6E0C               	movwf	(??_lcd_str+1)^0,c
  2528  001794  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2529  001798  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2530  00179C                     	if	0	;tblptru may be non-zero
  2531  00179C                     	endif
  2532  00179C                     	if	0	;tblptru may be non-zero
  2533  00179C                     	endif
  2534  00179C  0008               	tblrd		*
  2535  00179E  50F5               	movf	tablat,w,c
  2536  0017A0  EC96  F00B         	call	_lcdData
  2537  0017A4                     
  2538                           ;lcd.c: 132:         i++;
  2539  0017A4  2A0D               	incf	lcd_str@i^0,f,c
  2540  0017A6                     l1993:
  2541                           
  2542                           ;lcd.c: 130:     while(str[i] != 0 ){
  2543  0017A6  500D               	movf	lcd_str@i^0,w,c
  2544  0017A8  2409               	addwf	lcd_str@str^0,w,c
  2545  0017AA  6E0B               	movwf	??_lcd_str^0,c
  2546  0017AC  0E00               	movlw	0
  2547  0017AE  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2548  0017B0  6E0C               	movwf	(??_lcd_str+1)^0,c
  2549  0017B2  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2550  0017B6  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2551  0017BA                     	if	0	;tblptru may be non-zero
  2552  0017BA                     	endif
  2553  0017BA                     	if	0	;tblptru may be non-zero
  2554  0017BA                     	endif
  2555  0017BA  0008               	tblrd		*
  2556  0017BC  50F5               	movf	tablat,w,c
  2557  0017BE  0900               	iorlw	0
  2558  0017C0  A4D8               	btfss	status,2,c
  2559  0017C2  EFE5  F00B         	goto	u1631
  2560  0017C6  EFE7  F00B         	goto	u1630
  2561  0017CA                     u1631:
  2562  0017CA  EFC4  F00B         	goto	l1989
  2563  0017CE                     u1630:
  2564  0017CE  0012               	return		;funcret
  2565  0017D0                     __end_of_lcd_str:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _lcdData *****************
  2569 ;; Defined at:
  2570 ;;		line 74 in file "lcd.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  valor           1    wreg     unsigned char 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  valor           1    6[COMRAM] unsigned char 
  2575 ;;  old_D           1    7[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2585 ;;      Params:         0       0       0       0       0       0       0
  2586 ;;      Locals:         2       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0
  2588 ;;      Totals:         2       0       0       0       0       0       0
  2589 ;;Total ram usage:        2 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 1
  2592 ;; This function calls:
  2593 ;;		_Delay40us
  2594 ;;		_digitalWrite
  2595 ;; This function is called by:
  2596 ;;		_lcd_str
  2597 ;;		_main
  2598 ;;		_setTemperature
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text13
  2603  00172C                     __ptext13:
  2604                           	callstack 0
  2605  00172C                     _lcdData:
  2606                           	callstack 28
  2607                           
  2608                           ;incstack = 0
  2609                           ;lcdData@valor stored from wreg
  2610  00172C  6E07               	movwf	lcdData@valor^0,c
  2611  00172E                     
  2612                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2613  00172E  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2614  001732                     
  2615                           ;lcd.c: 80:     TRISD = 0x00;
  2616  001732  0E00               	movlw	0
  2617  001734  6E95               	movwf	149,c	;volatile
  2618  001736                     
  2619                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2620  001736  0E00               	movlw	0
  2621  001738  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2622  00173A  0E22               	movlw	34
  2623  00173C  6E01               	movwf	digitalWrite@pin^0,c
  2624  00173E  0E00               	movlw	0
  2625  001740  6E04               	movwf	(digitalWrite@value+1)^0,c
  2626  001742  0E01               	movlw	1
  2627  001744  6E03               	movwf	digitalWrite@value^0,c
  2628  001746  ECD0  F006         	call	_digitalWrite	;wreg free
  2629  00174A                     
  2630                           ;lcd.c: 83:  PORTD = valor;
  2631  00174A  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2632  00174E                     
  2633                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2634  00174E  0E00               	movlw	0
  2635  001750  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2636  001752  0E21               	movlw	33
  2637  001754  6E01               	movwf	digitalWrite@pin^0,c
  2638  001756  0E00               	movlw	0
  2639  001758  6E04               	movwf	(digitalWrite@value+1)^0,c
  2640  00175A  0E01               	movlw	1
  2641  00175C  6E03               	movwf	digitalWrite@value^0,c
  2642  00175E  ECD0  F006         	call	_digitalWrite	;wreg free
  2643  001762                     
  2644                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2645  001762  0E00               	movlw	0
  2646  001764  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2647  001766  0E21               	movlw	33
  2648  001768  6E01               	movwf	digitalWrite@pin^0,c
  2649  00176A  0E00               	movlw	0
  2650  00176C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2651  00176E  0E00               	movlw	0
  2652  001770  6E03               	movwf	digitalWrite@value^0,c
  2653  001772  ECD0  F006         	call	_digitalWrite	;wreg free
  2654  001776                     
  2655                           ;lcd.c: 88:     PORTD= old_D;
  2656  001776  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2657  00177A                     
  2658                           ;lcd.c: 90:  Delay40us();
  2659  00177A  EC39  F00C         	call	_Delay40us	;wreg free
  2660  00177E  0012               	return		;funcret
  2661  001780                     __end_of_lcdData:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _lcdInit *****************
  2665 ;; Defined at:
  2666 ;;		line 95 in file "lcd.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;		None
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2680 ;;      Params:         0       0       0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0
  2683 ;;      Totals:         0       0       0       0       0       0       0
  2684 ;;Total ram usage:        0 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 3
  2687 ;; This function calls:
  2688 ;;		_Delay2ms
  2689 ;;		_lcdCommand
  2690 ;;		_pinMode
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text14
  2697  00150C                     __ptext14:
  2698                           	callstack 0
  2699  00150C                     _lcdInit:
  2700                           	callstack 27
  2701  00150C                     
  2702                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2703  00150C  0E00               	movlw	0
  2704  00150E  6E02               	movwf	(pinMode@pin+1)^0,c
  2705  001510  0E22               	movlw	34
  2706  001512  6E01               	movwf	pinMode@pin^0,c
  2707  001514  0E00               	movlw	0
  2708  001516  6E04               	movwf	(pinMode@type+1)^0,c
  2709  001518  0E00               	movlw	0
  2710  00151A  6E03               	movwf	pinMode@type^0,c
  2711  00151C  ECA9  F005         	call	_pinMode	;wreg free
  2712                           
  2713                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2714  001520  0E00               	movlw	0
  2715  001522  6E02               	movwf	(pinMode@pin+1)^0,c
  2716  001524  0E21               	movlw	33
  2717  001526  6E01               	movwf	pinMode@pin^0,c
  2718  001528  0E00               	movlw	0
  2719  00152A  6E04               	movwf	(pinMode@type+1)^0,c
  2720  00152C  0E00               	movlw	0
  2721  00152E  6E03               	movwf	pinMode@type^0,c
  2722  001530  ECA9  F005         	call	_pinMode	;wreg free
  2723  001534                     
  2724                           ;lcd.c: 99:  TRISD = 0x00;
  2725  001534  0E00               	movlw	0
  2726  001536  6E95               	movwf	149,c	;volatile
  2727  001538                     
  2728                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2729  001538  EC2B  F00C         	call	_Delay2ms	;wreg free
  2730  00153C  EC2B  F00C         	call	_Delay2ms	;wreg free
  2731  001540  EC2B  F00C         	call	_Delay2ms	;wreg free
  2732  001544  EC2B  F00C         	call	_Delay2ms	;wreg free
  2733  001548  EC2B  F00C         	call	_Delay2ms	;wreg free
  2734  00154C                     
  2735                           ;lcd.c: 104:     lcdCommand(0x38);
  2736  00154C  0E38               	movlw	56
  2737  00154E  EC47  F00A         	call	_lcdCommand
  2738  001552                     
  2739                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2740  001552  EC2B  F00C         	call	_Delay2ms	;wreg free
  2741  001556  EC2B  F00C         	call	_Delay2ms	;wreg free
  2742  00155A                     
  2743                           ;lcd.c: 106:     lcdCommand(0x38);
  2744  00155A  0E38               	movlw	56
  2745  00155C  EC47  F00A         	call	_lcdCommand
  2746  001560                     
  2747                           ;lcd.c: 107:     Delay2ms();
  2748  001560  EC2B  F00C         	call	_Delay2ms	;wreg free
  2749  001564                     
  2750                           ;lcd.c: 108:     lcdCommand(0x38);
  2751  001564  0E38               	movlw	56
  2752  001566  EC47  F00A         	call	_lcdCommand
  2753  00156A                     
  2754                           ;lcd.c: 110:     lcdCommand(0x38);
  2755  00156A  0E38               	movlw	56
  2756  00156C  EC47  F00A         	call	_lcdCommand
  2757  001570                     
  2758                           ;lcd.c: 111:     lcdCommand(0x06);
  2759  001570  0E06               	movlw	6
  2760  001572  EC47  F00A         	call	_lcdCommand
  2761  001576                     
  2762                           ;lcd.c: 114:     lcdCommand(0x0C);
  2763  001576  0E0C               	movlw	12
  2764  001578  EC47  F00A         	call	_lcdCommand
  2765  00157C                     
  2766                           ;lcd.c: 115:     lcdCommand(0x01);
  2767  00157C  0E01               	movlw	1
  2768  00157E  EC47  F00A         	call	_lcdCommand
  2769  001582  0012               	return		;funcret
  2770  001584                     __end_of_lcdInit:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _pinMode *****************
  2774 ;; Defined at:
  2775 ;;		line 54 in file "io.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  pin             2    0[COMRAM] int 
  2778 ;;  type            2    2[COMRAM] int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2790 ;;      Params:         4       0       0       0       0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0
  2792 ;;      Temps:          2       0       0       0       0       0       0
  2793 ;;      Totals:         6       0       0       0       0       0       0
  2794 ;;Total ram usage:        6 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_lcdInit
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text15
  2804  000B52                     __ptext15:
  2805                           	callstack 0
  2806  000B52                     _pinMode:
  2807                           	callstack 29
  2808  000B52                     
  2809                           ;io.c: 56:     if(pin <8){
  2810  000B52  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2811  000B54  EFB7  F005         	goto	u1330
  2812  000B58  5002               	movf	(pinMode@pin+1)^0,w,c
  2813  000B5A  E107               	bnz	u1331
  2814  000B5C  0E08               	movlw	8
  2815  000B5E  5C01               	subwf	pinMode@pin^0,w,c
  2816  000B60  B0D8               	btfsc	status,0,c
  2817  000B62  EFB5  F005         	goto	u1331
  2818  000B66  EFB7  F005         	goto	u1330
  2819  000B6A                     u1331:
  2820  000B6A  EFE1  F005         	goto	l1819
  2821  000B6E                     u1330:
  2822  000B6E                     
  2823                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2824  000B6E  5003               	movf	pinMode@type^0,w,c
  2825  000B70  1004               	iorwf	(pinMode@type+1)^0,w,c
  2826  000B72  B4D8               	btfsc	status,2,c
  2827  000B74  EFBE  F005         	goto	u1341
  2828  000B78  EFC0  F005         	goto	u1340
  2829  000B7C                     u1341:
  2830  000B7C  EFD0  F005         	goto	l1817
  2831  000B80                     u1340:
  2832  000B80  C001  F005         	movff	pinMode@pin,??_pinMode
  2833  000B84  0E01               	movlw	1
  2834  000B86  6E06               	movwf	(??_pinMode+1)^0,c
  2835  000B88  2A05               	incf	??_pinMode^0,f,c
  2836  000B8A  EFC9  F005         	goto	u1354
  2837  000B8E                     u1355:
  2838  000B8E  90D8               	bcf	status,0,c
  2839  000B90  3606               	rlcf	(??_pinMode+1)^0,f,c
  2840  000B92                     u1354:
  2841  000B92  2E05               	decfsz	??_pinMode^0,f,c
  2842  000B94  EFC7  F005         	goto	u1355
  2843  000B98  5006               	movf	(??_pinMode+1)^0,w,c
  2844  000B9A  1292               	iorwf	146,f,c	;volatile
  2845  000B9C  EFCF  F006         	goto	l76
  2846  000BA0                     l1817:
  2847  000BA0  C001  F005         	movff	pinMode@pin,??_pinMode
  2848  000BA4  0E01               	movlw	1
  2849  000BA6  6E06               	movwf	(??_pinMode+1)^0,c
  2850  000BA8  2A05               	incf	??_pinMode^0,f,c
  2851  000BAA  EFD9  F005         	goto	u1364
  2852  000BAE                     u1365:
  2853  000BAE  90D8               	bcf	status,0,c
  2854  000BB0  3606               	rlcf	(??_pinMode+1)^0,f,c
  2855  000BB2                     u1364:
  2856  000BB2  2E05               	decfsz	??_pinMode^0,f,c
  2857  000BB4  EFD7  F005         	goto	u1365
  2858  000BB8  5006               	movf	(??_pinMode+1)^0,w,c
  2859  000BBA  0AFF               	xorlw	255
  2860  000BBC  1692               	andwf	146,f,c	;volatile
  2861  000BBE  EFCF  F006         	goto	l76
  2862  000BC2                     l1819:
  2863  000BC2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2864  000BC4  EFEF  F005         	goto	u1370
  2865  000BC8  5002               	movf	(pinMode@pin+1)^0,w,c
  2866  000BCA  E107               	bnz	u1371
  2867  000BCC  0E10               	movlw	16
  2868  000BCE  5C01               	subwf	pinMode@pin^0,w,c
  2869  000BD0  B0D8               	btfsc	status,0,c
  2870  000BD2  EFED  F005         	goto	u1371
  2871  000BD6  EFEF  F005         	goto	u1370
  2872  000BDA                     u1371:
  2873  000BDA  EF1D  F006         	goto	l1827
  2874  000BDE                     u1370:
  2875  000BDE                     
  2876                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2877  000BDE  5003               	movf	pinMode@type^0,w,c
  2878  000BE0  1004               	iorwf	(pinMode@type+1)^0,w,c
  2879  000BE2  B4D8               	btfsc	status,2,c
  2880  000BE4  EFF6  F005         	goto	u1381
  2881  000BE8  EFF8  F005         	goto	u1380
  2882  000BEC                     u1381:
  2883  000BEC  EF0A  F006         	goto	l1825
  2884  000BF0                     u1380:
  2885  000BF0  C001  F005         	movff	pinMode@pin,??_pinMode
  2886  000BF4  0EF8               	movlw	-8
  2887  000BF6  2605               	addwf	??_pinMode^0,f,c
  2888  000BF8  0E01               	movlw	1
  2889  000BFA  6E06               	movwf	(??_pinMode+1)^0,c
  2890  000BFC  2A05               	incf	??_pinMode^0,f,c
  2891  000BFE  EF03  F006         	goto	u1394
  2892  000C02                     u1395:
  2893  000C02  90D8               	bcf	status,0,c
  2894  000C04  3606               	rlcf	(??_pinMode+1)^0,f,c
  2895  000C06                     u1394:
  2896  000C06  2E05               	decfsz	??_pinMode^0,f,c
  2897  000C08  EF01  F006         	goto	u1395
  2898  000C0C  5006               	movf	(??_pinMode+1)^0,w,c
  2899  000C0E  1293               	iorwf	147,f,c	;volatile
  2900  000C10  EFCF  F006         	goto	l76
  2901  000C14                     l1825:
  2902  000C14  C001  F005         	movff	pinMode@pin,??_pinMode
  2903  000C18  0EF8               	movlw	-8
  2904  000C1A  2605               	addwf	??_pinMode^0,f,c
  2905  000C1C  0E01               	movlw	1
  2906  000C1E  6E06               	movwf	(??_pinMode+1)^0,c
  2907  000C20  2A05               	incf	??_pinMode^0,f,c
  2908  000C22  EF15  F006         	goto	u1404
  2909  000C26                     u1405:
  2910  000C26  90D8               	bcf	status,0,c
  2911  000C28  3606               	rlcf	(??_pinMode+1)^0,f,c
  2912  000C2A                     u1404:
  2913  000C2A  2E05               	decfsz	??_pinMode^0,f,c
  2914  000C2C  EF13  F006         	goto	u1405
  2915  000C30  5006               	movf	(??_pinMode+1)^0,w,c
  2916  000C32  0AFF               	xorlw	255
  2917  000C34  1693               	andwf	147,f,c	;volatile
  2918  000C36  EFCF  F006         	goto	l76
  2919  000C3A                     l1827:
  2920  000C3A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2921  000C3C  EF2B  F006         	goto	u1410
  2922  000C40  5002               	movf	(pinMode@pin+1)^0,w,c
  2923  000C42  E107               	bnz	u1411
  2924  000C44  0E18               	movlw	24
  2925  000C46  5C01               	subwf	pinMode@pin^0,w,c
  2926  000C48  B0D8               	btfsc	status,0,c
  2927  000C4A  EF29  F006         	goto	u1411
  2928  000C4E  EF2B  F006         	goto	u1410
  2929  000C52                     u1411:
  2930  000C52  EF59  F006         	goto	l1835
  2931  000C56                     u1410:
  2932  000C56                     
  2933                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2934  000C56  5003               	movf	pinMode@type^0,w,c
  2935  000C58  1004               	iorwf	(pinMode@type+1)^0,w,c
  2936  000C5A  B4D8               	btfsc	status,2,c
  2937  000C5C  EF32  F006         	goto	u1421
  2938  000C60  EF34  F006         	goto	u1420
  2939  000C64                     u1421:
  2940  000C64  EF46  F006         	goto	l1833
  2941  000C68                     u1420:
  2942  000C68  C001  F005         	movff	pinMode@pin,??_pinMode
  2943  000C6C  0EF0               	movlw	-16
  2944  000C6E  2605               	addwf	??_pinMode^0,f,c
  2945  000C70  0E01               	movlw	1
  2946  000C72  6E06               	movwf	(??_pinMode+1)^0,c
  2947  000C74  2A05               	incf	??_pinMode^0,f,c
  2948  000C76  EF3F  F006         	goto	u1434
  2949  000C7A                     u1435:
  2950  000C7A  90D8               	bcf	status,0,c
  2951  000C7C  3606               	rlcf	(??_pinMode+1)^0,f,c
  2952  000C7E                     u1434:
  2953  000C7E  2E05               	decfsz	??_pinMode^0,f,c
  2954  000C80  EF3D  F006         	goto	u1435
  2955  000C84  5006               	movf	(??_pinMode+1)^0,w,c
  2956  000C86  1294               	iorwf	148,f,c	;volatile
  2957  000C88  EFCF  F006         	goto	l76
  2958  000C8C                     l1833:
  2959  000C8C  C001  F005         	movff	pinMode@pin,??_pinMode
  2960  000C90  0EF0               	movlw	-16
  2961  000C92  2605               	addwf	??_pinMode^0,f,c
  2962  000C94  0E01               	movlw	1
  2963  000C96  6E06               	movwf	(??_pinMode+1)^0,c
  2964  000C98  2A05               	incf	??_pinMode^0,f,c
  2965  000C9A  EF51  F006         	goto	u1444
  2966  000C9E                     u1445:
  2967  000C9E  90D8               	bcf	status,0,c
  2968  000CA0  3606               	rlcf	(??_pinMode+1)^0,f,c
  2969  000CA2                     u1444:
  2970  000CA2  2E05               	decfsz	??_pinMode^0,f,c
  2971  000CA4  EF4F  F006         	goto	u1445
  2972  000CA8  5006               	movf	(??_pinMode+1)^0,w,c
  2973  000CAA  0AFF               	xorlw	255
  2974  000CAC  1694               	andwf	148,f,c	;volatile
  2975  000CAE  EFCF  F006         	goto	l76
  2976  000CB2                     l1835:
  2977  000CB2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2978  000CB4  EF67  F006         	goto	u1450
  2979  000CB8  5002               	movf	(pinMode@pin+1)^0,w,c
  2980  000CBA  E107               	bnz	u1451
  2981  000CBC  0E20               	movlw	32
  2982  000CBE  5C01               	subwf	pinMode@pin^0,w,c
  2983  000CC0  B0D8               	btfsc	status,0,c
  2984  000CC2  EF65  F006         	goto	u1451
  2985  000CC6  EF67  F006         	goto	u1450
  2986  000CCA                     u1451:
  2987  000CCA  EF95  F006         	goto	l1843
  2988  000CCE                     u1450:
  2989  000CCE                     
  2990                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2991  000CCE  5003               	movf	pinMode@type^0,w,c
  2992  000CD0  1004               	iorwf	(pinMode@type+1)^0,w,c
  2993  000CD2  B4D8               	btfsc	status,2,c
  2994  000CD4  EF6E  F006         	goto	u1461
  2995  000CD8  EF70  F006         	goto	u1460
  2996  000CDC                     u1461:
  2997  000CDC  EF82  F006         	goto	l1841
  2998  000CE0                     u1460:
  2999  000CE0  C001  F005         	movff	pinMode@pin,??_pinMode
  3000  000CE4  0EE8               	movlw	-24
  3001  000CE6  2605               	addwf	??_pinMode^0,f,c
  3002  000CE8  0E01               	movlw	1
  3003  000CEA  6E06               	movwf	(??_pinMode+1)^0,c
  3004  000CEC  2A05               	incf	??_pinMode^0,f,c
  3005  000CEE  EF7B  F006         	goto	u1474
  3006  000CF2                     u1475:
  3007  000CF2  90D8               	bcf	status,0,c
  3008  000CF4  3606               	rlcf	(??_pinMode+1)^0,f,c
  3009  000CF6                     u1474:
  3010  000CF6  2E05               	decfsz	??_pinMode^0,f,c
  3011  000CF8  EF79  F006         	goto	u1475
  3012  000CFC  5006               	movf	(??_pinMode+1)^0,w,c
  3013  000CFE  1295               	iorwf	149,f,c	;volatile
  3014  000D00  EFCF  F006         	goto	l76
  3015  000D04                     l1841:
  3016  000D04  C001  F005         	movff	pinMode@pin,??_pinMode
  3017  000D08  0EE8               	movlw	-24
  3018  000D0A  2605               	addwf	??_pinMode^0,f,c
  3019  000D0C  0E01               	movlw	1
  3020  000D0E  6E06               	movwf	(??_pinMode+1)^0,c
  3021  000D10  2A05               	incf	??_pinMode^0,f,c
  3022  000D12  EF8D  F006         	goto	u1484
  3023  000D16                     u1485:
  3024  000D16  90D8               	bcf	status,0,c
  3025  000D18  3606               	rlcf	(??_pinMode+1)^0,f,c
  3026  000D1A                     u1484:
  3027  000D1A  2E05               	decfsz	??_pinMode^0,f,c
  3028  000D1C  EF8B  F006         	goto	u1485
  3029  000D20  5006               	movf	(??_pinMode+1)^0,w,c
  3030  000D22  0AFF               	xorlw	255
  3031  000D24  1695               	andwf	149,f,c	;volatile
  3032  000D26  EFCF  F006         	goto	l76
  3033  000D2A                     l1843:
  3034  000D2A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3035  000D2C  EFA3  F006         	goto	u1490
  3036  000D30  5002               	movf	(pinMode@pin+1)^0,w,c
  3037  000D32  E107               	bnz	u1491
  3038  000D34  0E28               	movlw	40
  3039  000D36  5C01               	subwf	pinMode@pin^0,w,c
  3040  000D38  B0D8               	btfsc	status,0,c
  3041  000D3A  EFA1  F006         	goto	u1491
  3042  000D3E  EFA3  F006         	goto	u1490
  3043  000D42                     u1491:
  3044  000D42  EFCF  F006         	goto	l76
  3045  000D46                     u1490:
  3046  000D46                     
  3047                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3048  000D46  5003               	movf	pinMode@type^0,w,c
  3049  000D48  1004               	iorwf	(pinMode@type+1)^0,w,c
  3050  000D4A  B4D8               	btfsc	status,2,c
  3051  000D4C  EFAA  F006         	goto	u1501
  3052  000D50  EFAC  F006         	goto	u1500
  3053  000D54                     u1501:
  3054  000D54  EFBE  F006         	goto	l1849
  3055  000D58                     u1500:
  3056  000D58  C001  F005         	movff	pinMode@pin,??_pinMode
  3057  000D5C  0EE0               	movlw	-32
  3058  000D5E  2605               	addwf	??_pinMode^0,f,c
  3059  000D60  0E01               	movlw	1
  3060  000D62  6E06               	movwf	(??_pinMode+1)^0,c
  3061  000D64  2A05               	incf	??_pinMode^0,f,c
  3062  000D66  EFB7  F006         	goto	u1514
  3063  000D6A                     u1515:
  3064  000D6A  90D8               	bcf	status,0,c
  3065  000D6C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3066  000D6E                     u1514:
  3067  000D6E  2E05               	decfsz	??_pinMode^0,f,c
  3068  000D70  EFB5  F006         	goto	u1515
  3069  000D74  5006               	movf	(??_pinMode+1)^0,w,c
  3070  000D76  1296               	iorwf	150,f,c	;volatile
  3071  000D78  EFCF  F006         	goto	l76
  3072  000D7C                     l1849:
  3073  000D7C  C001  F005         	movff	pinMode@pin,??_pinMode
  3074  000D80  0EE0               	movlw	-32
  3075  000D82  2605               	addwf	??_pinMode^0,f,c
  3076  000D84  0E01               	movlw	1
  3077  000D86  6E06               	movwf	(??_pinMode+1)^0,c
  3078  000D88  2A05               	incf	??_pinMode^0,f,c
  3079  000D8A  EFC9  F006         	goto	u1524
  3080  000D8E                     u1525:
  3081  000D8E  90D8               	bcf	status,0,c
  3082  000D90  3606               	rlcf	(??_pinMode+1)^0,f,c
  3083  000D92                     u1524:
  3084  000D92  2E05               	decfsz	??_pinMode^0,f,c
  3085  000D94  EFC7  F006         	goto	u1525
  3086  000D98  5006               	movf	(??_pinMode+1)^0,w,c
  3087  000D9A  0AFF               	xorlw	255
  3088  000D9C  1696               	andwf	150,f,c	;volatile
  3089  000D9E                     l76:
  3090  000D9E  0012               	return		;funcret
  3091  000DA0                     __end_of_pinMode:
  3092                           	callstack 0
  3093                           
  3094 ;; *************** function _lcdCommand *****************
  3095 ;; Defined at:
  3096 ;;		line 50 in file "lcd.c"
  3097 ;; Parameters:    Size  Location     Type
  3098 ;;  cmd             1    wreg     unsigned char 
  3099 ;; Auto vars:     Size  Location     Type
  3100 ;;  cmd             1    7[COMRAM] unsigned char 
  3101 ;;  old_D           1    6[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0, cstack
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3111 ;;      Params:         0       0       0       0       0       0       0
  3112 ;;      Locals:         2       0       0       0       0       0       0
  3113 ;;      Temps:          0       0       0       0       0       0       0
  3114 ;;      Totals:         2       0       0       0       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 2
  3118 ;; This function calls:
  3119 ;;		_Delay2ms
  3120 ;;		_Delay40us
  3121 ;;		_digitalWrite
  3122 ;; This function is called by:
  3123 ;;		_lcdInit
  3124 ;;		_lcdPosition
  3125 ;;		_main
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text16
  3130  00148E                     __ptext16:
  3131                           	callstack 0
  3132  00148E                     _lcdCommand:
  3133                           	callstack 26
  3134                           
  3135                           ;incstack = 0
  3136                           ;lcdCommand@cmd stored from wreg
  3137  00148E  6E08               	movwf	lcdCommand@cmd^0,c
  3138  001490                     
  3139                           ;lcd.c: 50: void lcdCommand(unsigned char cmd);lcd.c: 51: {;lcd.c: 52:     unsigned char
      +                           old_D;;lcd.c: 53:     old_D = PORTD;
  3140  001490  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3141  001494                     
  3142                           ;lcd.c: 56:     TRISD = 0x00;
  3143  001494  0E00               	movlw	0
  3144  001496  6E95               	movwf	149,c	;volatile
  3145  001498                     
  3146                           ;lcd.c: 58:     digitalWrite(PIN_E2, 0);
  3147  001498  0E00               	movlw	0
  3148  00149A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3149  00149C  0E22               	movlw	34
  3150  00149E  6E01               	movwf	digitalWrite@pin^0,c
  3151  0014A0  0E00               	movlw	0
  3152  0014A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3153  0014A4  0E00               	movlw	0
  3154  0014A6  6E03               	movwf	digitalWrite@value^0,c
  3155  0014A8  ECD0  F006         	call	_digitalWrite	;wreg free
  3156  0014AC                     
  3157                           ;lcd.c: 59:     PORTD = cmd;
  3158  0014AC  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3159  0014B0                     
  3160                           ;lcd.c: 61:     digitalWrite(PIN_E1, 1);
  3161  0014B0  0E00               	movlw	0
  3162  0014B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3163  0014B4  0E21               	movlw	33
  3164  0014B6  6E01               	movwf	digitalWrite@pin^0,c
  3165  0014B8  0E00               	movlw	0
  3166  0014BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  3167  0014BC  0E01               	movlw	1
  3168  0014BE  6E03               	movwf	digitalWrite@value^0,c
  3169  0014C0  ECD0  F006         	call	_digitalWrite	;wreg free
  3170  0014C4                     
  3171                           ;lcd.c: 62:     digitalWrite(PIN_E1, 0);
  3172  0014C4  0E00               	movlw	0
  3173  0014C6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3174  0014C8  0E21               	movlw	33
  3175  0014CA  6E01               	movwf	digitalWrite@pin^0,c
  3176  0014CC  0E00               	movlw	0
  3177  0014CE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3178  0014D0  0E00               	movlw	0
  3179  0014D2  6E03               	movwf	digitalWrite@value^0,c
  3180  0014D4  ECD0  F006         	call	_digitalWrite	;wreg free
  3181  0014D8                     
  3182                           ;lcd.c: 65:     PORTD = old_D;
  3183  0014D8  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3184  0014DC                     
  3185                           ;lcd.c: 67:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3186  0014DC  0E02               	movlw	2
  3187  0014DE  1808               	xorwf	lcdCommand@cmd^0,w,c
  3188  0014E0  B4D8               	btfsc	status,2,c
  3189  0014E2  EF75  F00A         	goto	u1251
  3190  0014E6  EF77  F00A         	goto	u1250
  3191  0014EA                     u1251:
  3192  0014EA  EF7F  F00A         	goto	l1769
  3193  0014EE                     u1250:
  3194  0014EE  0408               	decf	lcdCommand@cmd^0,w,c
  3195  0014F0  A4D8               	btfss	status,2,c
  3196  0014F2  EF7D  F00A         	goto	u1261
  3197  0014F6  EF7F  F00A         	goto	u1260
  3198  0014FA                     u1261:
  3199  0014FA  EF83  F00A         	goto	l1771
  3200  0014FE                     u1260:
  3201  0014FE                     l1769:
  3202                           
  3203                           ;lcd.c: 68:         Delay2ms();
  3204  0014FE  EC2B  F00C         	call	_Delay2ms	;wreg free
  3205                           
  3206                           ;lcd.c: 69:     } else {
  3207  001502  EF85  F00A         	goto	l137
  3208  001506                     l1771:
  3209                           
  3210                           ;lcd.c: 70:         Delay40us();
  3211  001506  EC39  F00C         	call	_Delay40us	;wreg free
  3212  00150A                     l137:
  3213  00150A  0012               	return		;funcret
  3214  00150C                     __end_of_lcdCommand:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _digitalWrite *****************
  3218 ;; Defined at:
  3219 ;;		line 14 in file "io.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  pin             2    0[COMRAM] int 
  3222 ;;  value           2    2[COMRAM] int 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;		None
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg, status,2, status,0
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3234 ;;      Params:         4       0       0       0       0       0       0
  3235 ;;      Locals:         0       0       0       0       0       0       0
  3236 ;;      Temps:          2       0       0       0       0       0       0
  3237 ;;      Totals:         6       0       0       0       0       0       0
  3238 ;;Total ram usage:        6 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_lcdCommand
  3244 ;;		_lcdData
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           	psect	text17
  3249  000DA0                     __ptext17:
  3250                           	callstack 0
  3251  000DA0                     _digitalWrite:
  3252                           	callstack 27
  3253  000DA0                     
  3254                           ;io.c: 16:     if(pin <8){
  3255  000DA0  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3256  000DA2  EFDE  F006         	goto	u1050
  3257  000DA6  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3258  000DA8  E107               	bnz	u1051
  3259  000DAA  0E08               	movlw	8
  3260  000DAC  5C01               	subwf	digitalWrite@pin^0,w,c
  3261  000DAE  B0D8               	btfsc	status,0,c
  3262  000DB0  EFDC  F006         	goto	u1051
  3263  000DB4  EFDE  F006         	goto	u1050
  3264  000DB8                     u1051:
  3265  000DB8  EF08  F007         	goto	l1719
  3266  000DBC                     u1050:
  3267  000DBC                     
  3268                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3269  000DBC  5003               	movf	digitalWrite@value^0,w,c
  3270  000DBE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3271  000DC0  B4D8               	btfsc	status,2,c
  3272  000DC2  EFE5  F006         	goto	u1061
  3273  000DC6  EFE7  F006         	goto	u1060
  3274  000DCA                     u1061:
  3275  000DCA  EFF7  F006         	goto	l1717
  3276  000DCE                     u1060:
  3277  000DCE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3278  000DD2  0E01               	movlw	1
  3279  000DD4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3280  000DD6  2A05               	incf	??_digitalWrite^0,f,c
  3281  000DD8  EFF0  F006         	goto	u1074
  3282  000DDC                     u1075:
  3283  000DDC  90D8               	bcf	status,0,c
  3284  000DDE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3285  000DE0                     u1074:
  3286  000DE0  2E05               	decfsz	??_digitalWrite^0,f,c
  3287  000DE2  EFEE  F006         	goto	u1075
  3288  000DE6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3289  000DE8  1280               	iorwf	128,f,c	;volatile
  3290  000DEA  EFF6  F007         	goto	l42
  3291  000DEE                     l1717:
  3292  000DEE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3293  000DF2  0E01               	movlw	1
  3294  000DF4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3295  000DF6  2A05               	incf	??_digitalWrite^0,f,c
  3296  000DF8  EF00  F007         	goto	u1084
  3297  000DFC                     u1085:
  3298  000DFC  90D8               	bcf	status,0,c
  3299  000DFE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3300  000E00                     u1084:
  3301  000E00  2E05               	decfsz	??_digitalWrite^0,f,c
  3302  000E02  EFFE  F006         	goto	u1085
  3303  000E06  5006               	movf	(??_digitalWrite+1)^0,w,c
  3304  000E08  0AFF               	xorlw	255
  3305  000E0A  1680               	andwf	128,f,c	;volatile
  3306  000E0C  EFF6  F007         	goto	l42
  3307  000E10                     l1719:
  3308  000E10  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3309  000E12  EF16  F007         	goto	u1090
  3310  000E16  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3311  000E18  E107               	bnz	u1091
  3312  000E1A  0E10               	movlw	16
  3313  000E1C  5C01               	subwf	digitalWrite@pin^0,w,c
  3314  000E1E  B0D8               	btfsc	status,0,c
  3315  000E20  EF14  F007         	goto	u1091
  3316  000E24  EF16  F007         	goto	u1090
  3317  000E28                     u1091:
  3318  000E28  EF44  F007         	goto	l1727
  3319  000E2C                     u1090:
  3320  000E2C                     
  3321                           ;io.c: 20:         pin -=8;
  3322  000E2C  0EF8               	movlw	248
  3323  000E2E  2601               	addwf	digitalWrite@pin^0,f,c
  3324  000E30  0EFF               	movlw	255
  3325  000E32  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3326                           
  3327                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3328  000E34  5003               	movf	digitalWrite@value^0,w,c
  3329  000E36  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3330  000E38  B4D8               	btfsc	status,2,c
  3331  000E3A  EF21  F007         	goto	u1101
  3332  000E3E  EF23  F007         	goto	u1100
  3333  000E42                     u1101:
  3334  000E42  EF33  F007         	goto	l1725
  3335  000E46                     u1100:
  3336  000E46  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3337  000E4A  0E01               	movlw	1
  3338  000E4C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3339  000E4E  2A05               	incf	??_digitalWrite^0,f,c
  3340  000E50  EF2C  F007         	goto	u1114
  3341  000E54                     u1115:
  3342  000E54  90D8               	bcf	status,0,c
  3343  000E56  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3344  000E58                     u1114:
  3345  000E58  2E05               	decfsz	??_digitalWrite^0,f,c
  3346  000E5A  EF2A  F007         	goto	u1115
  3347  000E5E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3348  000E60  1281               	iorwf	129,f,c	;volatile
  3349  000E62  EFF6  F007         	goto	l42
  3350  000E66                     l1725:
  3351  000E66  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3352  000E6A  0E01               	movlw	1
  3353  000E6C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3354  000E6E  2A05               	incf	??_digitalWrite^0,f,c
  3355  000E70  EF3C  F007         	goto	u1124
  3356  000E74                     u1125:
  3357  000E74  90D8               	bcf	status,0,c
  3358  000E76  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3359  000E78                     u1124:
  3360  000E78  2E05               	decfsz	??_digitalWrite^0,f,c
  3361  000E7A  EF3A  F007         	goto	u1125
  3362  000E7E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3363  000E80  0AFF               	xorlw	255
  3364  000E82  1681               	andwf	129,f,c	;volatile
  3365  000E84  EFF6  F007         	goto	l42
  3366  000E88                     l1727:
  3367  000E88  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3368  000E8A  EF52  F007         	goto	u1130
  3369  000E8E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3370  000E90  E107               	bnz	u1131
  3371  000E92  0E18               	movlw	24
  3372  000E94  5C01               	subwf	digitalWrite@pin^0,w,c
  3373  000E96  B0D8               	btfsc	status,0,c
  3374  000E98  EF50  F007         	goto	u1131
  3375  000E9C  EF52  F007         	goto	u1130
  3376  000EA0                     u1131:
  3377  000EA0  EF80  F007         	goto	l1735
  3378  000EA4                     u1130:
  3379  000EA4                     
  3380                           ;io.c: 24:         pin -=16;
  3381  000EA4  0EF0               	movlw	240
  3382  000EA6  2601               	addwf	digitalWrite@pin^0,f,c
  3383  000EA8  0EFF               	movlw	255
  3384  000EAA  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3385                           
  3386                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3387  000EAC  5003               	movf	digitalWrite@value^0,w,c
  3388  000EAE  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3389  000EB0  B4D8               	btfsc	status,2,c
  3390  000EB2  EF5D  F007         	goto	u1141
  3391  000EB6  EF5F  F007         	goto	u1140
  3392  000EBA                     u1141:
  3393  000EBA  EF6F  F007         	goto	l1733
  3394  000EBE                     u1140:
  3395  000EBE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3396  000EC2  0E01               	movlw	1
  3397  000EC4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3398  000EC6  2A05               	incf	??_digitalWrite^0,f,c
  3399  000EC8  EF68  F007         	goto	u1154
  3400  000ECC                     u1155:
  3401  000ECC  90D8               	bcf	status,0,c
  3402  000ECE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3403  000ED0                     u1154:
  3404  000ED0  2E05               	decfsz	??_digitalWrite^0,f,c
  3405  000ED2  EF66  F007         	goto	u1155
  3406  000ED6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3407  000ED8  1282               	iorwf	130,f,c	;volatile
  3408  000EDA  EFF6  F007         	goto	l42
  3409  000EDE                     l1733:
  3410  000EDE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3411  000EE2  0E01               	movlw	1
  3412  000EE4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3413  000EE6  2A05               	incf	??_digitalWrite^0,f,c
  3414  000EE8  EF78  F007         	goto	u1164
  3415  000EEC                     u1165:
  3416  000EEC  90D8               	bcf	status,0,c
  3417  000EEE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3418  000EF0                     u1164:
  3419  000EF0  2E05               	decfsz	??_digitalWrite^0,f,c
  3420  000EF2  EF76  F007         	goto	u1165
  3421  000EF6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3422  000EF8  0AFF               	xorlw	255
  3423  000EFA  1682               	andwf	130,f,c	;volatile
  3424  000EFC  EFF6  F007         	goto	l42
  3425  000F00                     l1735:
  3426  000F00  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3427  000F02  EF8E  F007         	goto	u1170
  3428  000F06  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3429  000F08  E107               	bnz	u1171
  3430  000F0A  0E20               	movlw	32
  3431  000F0C  5C01               	subwf	digitalWrite@pin^0,w,c
  3432  000F0E  B0D8               	btfsc	status,0,c
  3433  000F10  EF8C  F007         	goto	u1171
  3434  000F14  EF8E  F007         	goto	u1170
  3435  000F18                     u1171:
  3436  000F18  EFBC  F007         	goto	l1743
  3437  000F1C                     u1170:
  3438  000F1C                     
  3439                           ;io.c: 28:         pin -=24;
  3440  000F1C  0EE8               	movlw	232
  3441  000F1E  2601               	addwf	digitalWrite@pin^0,f,c
  3442  000F20  0EFF               	movlw	255
  3443  000F22  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3444                           
  3445                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3446  000F24  5003               	movf	digitalWrite@value^0,w,c
  3447  000F26  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3448  000F28  B4D8               	btfsc	status,2,c
  3449  000F2A  EF99  F007         	goto	u1181
  3450  000F2E  EF9B  F007         	goto	u1180
  3451  000F32                     u1181:
  3452  000F32  EFAB  F007         	goto	l1741
  3453  000F36                     u1180:
  3454  000F36  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3455  000F3A  0E01               	movlw	1
  3456  000F3C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3457  000F3E  2A05               	incf	??_digitalWrite^0,f,c
  3458  000F40  EFA4  F007         	goto	u1194
  3459  000F44                     u1195:
  3460  000F44  90D8               	bcf	status,0,c
  3461  000F46  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3462  000F48                     u1194:
  3463  000F48  2E05               	decfsz	??_digitalWrite^0,f,c
  3464  000F4A  EFA2  F007         	goto	u1195
  3465  000F4E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3466  000F50  1283               	iorwf	131,f,c	;volatile
  3467  000F52  EFF6  F007         	goto	l42
  3468  000F56                     l1741:
  3469  000F56  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3470  000F5A  0E01               	movlw	1
  3471  000F5C  6E06               	movwf	(??_digitalWrite+1)^0,c
  3472  000F5E  2A05               	incf	??_digitalWrite^0,f,c
  3473  000F60  EFB4  F007         	goto	u1204
  3474  000F64                     u1205:
  3475  000F64  90D8               	bcf	status,0,c
  3476  000F66  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3477  000F68                     u1204:
  3478  000F68  2E05               	decfsz	??_digitalWrite^0,f,c
  3479  000F6A  EFB2  F007         	goto	u1205
  3480  000F6E  5006               	movf	(??_digitalWrite+1)^0,w,c
  3481  000F70  0AFF               	xorlw	255
  3482  000F72  1683               	andwf	131,f,c	;volatile
  3483  000F74  EFF6  F007         	goto	l42
  3484  000F78                     l1743:
  3485  000F78  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3486  000F7A  EFCA  F007         	goto	u1210
  3487  000F7E  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3488  000F80  E107               	bnz	u1211
  3489  000F82  0E28               	movlw	40
  3490  000F84  5C01               	subwf	digitalWrite@pin^0,w,c
  3491  000F86  B0D8               	btfsc	status,0,c
  3492  000F88  EFC8  F007         	goto	u1211
  3493  000F8C  EFCA  F007         	goto	u1210
  3494  000F90                     u1211:
  3495  000F90  EFF6  F007         	goto	l42
  3496  000F94                     u1210:
  3497  000F94                     
  3498                           ;io.c: 32:         pin -=32;
  3499  000F94  0EE0               	movlw	224
  3500  000F96  2601               	addwf	digitalWrite@pin^0,f,c
  3501  000F98  0EFF               	movlw	255
  3502  000F9A  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3503                           
  3504                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3505  000F9C  5003               	movf	digitalWrite@value^0,w,c
  3506  000F9E  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3507  000FA0  B4D8               	btfsc	status,2,c
  3508  000FA2  EFD5  F007         	goto	u1221
  3509  000FA6  EFD7  F007         	goto	u1220
  3510  000FAA                     u1221:
  3511  000FAA  EFE7  F007         	goto	l1749
  3512  000FAE                     u1220:
  3513  000FAE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3514  000FB2  0E01               	movlw	1
  3515  000FB4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3516  000FB6  2A05               	incf	??_digitalWrite^0,f,c
  3517  000FB8  EFE0  F007         	goto	u1234
  3518  000FBC                     u1235:
  3519  000FBC  90D8               	bcf	status,0,c
  3520  000FBE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3521  000FC0                     u1234:
  3522  000FC0  2E05               	decfsz	??_digitalWrite^0,f,c
  3523  000FC2  EFDE  F007         	goto	u1235
  3524  000FC6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3525  000FC8  1284               	iorwf	132,f,c	;volatile
  3526  000FCA  EFF6  F007         	goto	l42
  3527  000FCE                     l1749:
  3528  000FCE  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3529  000FD2  0E01               	movlw	1
  3530  000FD4  6E06               	movwf	(??_digitalWrite+1)^0,c
  3531  000FD6  2A05               	incf	??_digitalWrite^0,f,c
  3532  000FD8  EFF0  F007         	goto	u1244
  3533  000FDC                     u1245:
  3534  000FDC  90D8               	bcf	status,0,c
  3535  000FDE  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3536  000FE0                     u1244:
  3537  000FE0  2E05               	decfsz	??_digitalWrite^0,f,c
  3538  000FE2  EFEE  F007         	goto	u1245
  3539  000FE6  5006               	movf	(??_digitalWrite+1)^0,w,c
  3540  000FE8  0AFF               	xorlw	255
  3541  000FEA  1684               	andwf	132,f,c	;volatile
  3542  000FEC                     l42:
  3543  000FEC  0012               	return		;funcret
  3544  000FEE                     __end_of_digitalWrite:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _Delay2ms *****************
  3548 ;; Defined at:
  3549 ;;		line 39 in file "lcd.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;		None
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  i               1    1[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  1    wreg      void 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         0       0       0       0       0       0       0
  3564 ;;      Locals:         1       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:         1       0       0       0       0       0       0
  3567 ;;Total ram usage:        1 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 1
  3570 ;; This function calls:
  3571 ;;		_Delay40us
  3572 ;; This function is called by:
  3573 ;;		_lcdCommand
  3574 ;;		_lcdInit
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text18
  3579  001856                     __ptext18:
  3580                           	callstack 0
  3581  001856                     _Delay2ms:
  3582                           	callstack 26
  3583  001856                     
  3584                           ;lcd.c: 41:  unsigned char i;;lcd.c: 42:  for(i=0; i < 50; i++)
  3585  001856  0E00               	movlw	0
  3586  001858  6E02               	movwf	Delay2ms@i^0,c
  3587  00185A                     l1065:
  3588                           
  3589                           ;lcd.c: 43:  {;lcd.c: 44:   Delay40us();
  3590  00185A  EC39  F00C         	call	_Delay40us	;wreg free
  3591  00185E                     
  3592                           ;lcd.c: 45:  }
  3593  00185E  2A02               	incf	Delay2ms@i^0,f,c
  3594  001860  0E31               	movlw	49
  3595  001862  6402               	cpfsgt	Delay2ms@i^0,c
  3596  001864  EF36  F00C         	goto	u221
  3597  001868  EF38  F00C         	goto	u220
  3598  00186C                     u221:
  3599  00186C  EF2D  F00C         	goto	l1065
  3600  001870                     u220:
  3601  001870  0012               	return		;funcret
  3602  001872                     __end_of_Delay2ms:
  3603                           	callstack 0
  3604                           
  3605 ;; *************** function _Delay40us *****************
  3606 ;; Defined at:
  3607 ;;		line 33 in file "lcd.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  i               1    0[COMRAM] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3621 ;;      Params:         0       0       0       0       0       0       0
  3622 ;;      Locals:         1       0       0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0
  3624 ;;      Totals:         1       0       0       0       0       0       0
  3625 ;;Total ram usage:        1 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; This function calls:
  3628 ;;		Nothing
  3629 ;; This function is called by:
  3630 ;;		_Delay2ms
  3631 ;;		_lcdCommand
  3632 ;;		_lcdData
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           	psect	text19
  3637  001872                     __ptext19:
  3638                           	callstack 0
  3639  001872                     _Delay40us:
  3640                           	callstack 27
  3641  001872                     
  3642                           ;lcd.c: 35:  unsigned char i;;lcd.c: 36:  for(i=0; i < 25; i++);
  3643  001872  0E00               	movlw	0
  3644  001874  6E01               	movwf	Delay40us@i^0,c
  3645  001876                     l1015:
  3646  001876  2A01               	incf	Delay40us@i^0,f,c
  3647  001878  0E18               	movlw	24
  3648  00187A  6401               	cpfsgt	Delay40us@i^0,c
  3649  00187C  EF42  F00C         	goto	u11
  3650  001880  EF44  F00C         	goto	u10
  3651  001884                     u11:
  3652  001884  EF3B  F00C         	goto	l1015
  3653  001888                     u10:
  3654  001888  0012               	return		;funcret
  3655  00188A                     __end_of_Delay40us:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function _kpRead *****************
  3659 ;; Defined at:
  3660 ;;		line 35 in file "keypad.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  2    0[COMRAM] unsigned int 
  3667 ;; Registers used:
  3668 ;;		None
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3674 ;;      Params:         2       0       0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0
  3677 ;;      Totals:         2       0       0       0       0       0       0
  3678 ;;Total ram usage:        2 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; This function calls:
  3681 ;;		Nothing
  3682 ;; This function is called by:
  3683 ;;		_main
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           	psect	text20
  3688  0018B4                     __ptext20:
  3689                           	callstack 0
  3690  0018B4                     _kpRead:
  3691                           	callstack 30
  3692  0018B4                     
  3693                           ;keypad.c: 36:     return valor;
  3694  0018B4  C055  F001         	movff	_valor,?_kpRead
  3695  0018B8  C056  F002         	movff	_valor+1,?_kpRead+1
  3696  0018BC  0012               	return		;funcret
  3697  0018BE                     __end_of_kpRead:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _kpInit *****************
  3701 ;; Defined at:
  3702 ;;		line 87 in file "keypad.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3716 ;;      Params:         0       0       0       0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used: 1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text21
  3730  0018BE                     __ptext21:
  3731                           	callstack 0
  3732  0018BE                     _kpInit:
  3733                           	callstack 30
  3734  0018BE                     
  3735                           ;keypad.c: 89:     TRISB &= 0x07;
  3736  0018BE  0E07               	movlw	7
  3737  0018C0  1693               	andwf	147,f,c	;volatile
  3738                           
  3739                           ;keypad.c: 91:     TRISD |= 0x0f;
  3740  0018C2  0E0F               	movlw	15
  3741  0018C4  1295               	iorwf	149,f,c	;volatile
  3742  0018C6  0012               	return		;funcret
  3743  0018C8                     __end_of_kpInit:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _kpDebounce *****************
  3747 ;; Defined at:
  3748 ;;		line 39 in file "keypad.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  k               2    6[COMRAM] int 
  3753 ;;  i               1    9[COMRAM] unsigned char 
  3754 ;;  j               1    8[COMRAM] unsigned char 
  3755 ;;  old_D           1    5[COMRAM] unsigned char 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, prodl, prodh
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3765 ;;      Params:         0       0       0       0       0       0       0
  3766 ;;      Locals:         5       0       0       0       0       0       0
  3767 ;;      Temps:          5       0       0       0       0       0       0
  3768 ;;      Totals:        10       0       0       0       0       0       0
  3769 ;;Total ram usage:       10 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_main
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text22
  3779  000FEE                     __ptext22:
  3780                           	callstack 0
  3781  000FEE                     _kpDebounce:
  3782                           	callstack 30
  3783  000FEE                     
  3784                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3785  000FEE  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3786  000FF2                     
  3787                           ;keypad.c: 51:     TRISD |= 0x0f;
  3788  000FF2  0E0F               	movlw	15
  3789  000FF4  1295               	iorwf	149,f,c	;volatile
  3790  000FF6                     
  3791                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3792  000FF6  0E00               	movlw	0
  3793  000FF8  6E0A               	movwf	kpDebounce@i^0,c
  3794  000FFA                     l1283:
  3795                           
  3796                           ;keypad.c: 55:         TRISB &= 0xF8;
  3797  000FFA  0EF8               	movlw	248
  3798  000FFC  1693               	andwf	147,f,c	;volatile
  3799                           
  3800                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3801  000FFE  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3802  001002  0E01               	movlw	1
  3803  001004  6E02               	movwf	(??_kpDebounce+1)^0,c
  3804  001006  2A01               	incf	??_kpDebounce^0,f,c
  3805  001008  EF08  F008         	goto	u614
  3806  00100C                     u615:
  3807  00100C  90D8               	bcf	status,0,c
  3808  00100E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3809  001010                     u614:
  3810  001010  2E01               	decfsz	??_kpDebounce^0,f,c
  3811  001012  EF06  F008         	goto	u615
  3812  001016  5002               	movf	(??_kpDebounce+1)^0,w,c
  3813  001018  1293               	iorwf	147,f,c	;volatile
  3814                           
  3815                           ;keypad.c: 59:         PORTB |= 0x07;
  3816  00101A  0E07               	movlw	7
  3817  00101C  1281               	iorwf	129,f,c	;volatile
  3818                           
  3819                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3820  00101E  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3821  001022  0E01               	movlw	1
  3822  001024  6E02               	movwf	(??_kpDebounce+1)^0,c
  3823  001026  2A01               	incf	??_kpDebounce^0,f,c
  3824  001028  EF18  F008         	goto	u624
  3825  00102C                     u625:
  3826  00102C  90D8               	bcf	status,0,c
  3827  00102E  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3828  001030                     u624:
  3829  001030  2E01               	decfsz	??_kpDebounce^0,f,c
  3830  001032  EF16  F008         	goto	u625
  3831  001036  5002               	movf	(??_kpDebounce+1)^0,w,c
  3832  001038  0AFF               	xorlw	255
  3833  00103A  1681               	andwf	129,f,c	;volatile
  3834  00103C                     
  3835                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3836  00103C  0E00               	movlw	0
  3837  00103E  6E08               	movwf	(kpDebounce@k+1)^0,c
  3838  001040  0E00               	movlw	0
  3839  001042  6E07               	movwf	kpDebounce@k^0,c
  3840  001044                     l1291:
  3841  001044  4A07               	infsnz	kpDebounce@k^0,f,c
  3842  001046  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3843  001048  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3844  00104A  EF30  F008         	goto	u631
  3845  00104E  5008               	movf	(kpDebounce@k+1)^0,w,c
  3846  001050  E109               	bnz	u630
  3847  001052  0E0A               	movlw	10
  3848  001054  5C07               	subwf	kpDebounce@k^0,w,c
  3849  001056  A0D8               	btfss	status,0,c
  3850  001058  EF30  F008         	goto	u631
  3851  00105C  EF32  F008         	goto	u630
  3852  001060                     u631:
  3853  001060  EF22  F008         	goto	l1291
  3854  001064                     u630:
  3855  001064                     
  3856                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3857  001064  0E00               	movlw	0
  3858  001066  6E09               	movwf	kpDebounce@j^0,c
  3859  001068                     l1301:
  3860                           
  3861                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3862  001068  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3863  00106C  0E01               	movlw	1
  3864  00106E  6E02               	movwf	(??_kpDebounce+1)^0,c
  3865  001070  2A01               	incf	??_kpDebounce^0,f,c
  3866  001072  EF3D  F008         	goto	u644
  3867  001076                     u645:
  3868  001076  90D8               	bcf	status,0,c
  3869  001078  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3870  00107A                     u644:
  3871  00107A  2E01               	decfsz	??_kpDebounce^0,f,c
  3872  00107C  EF3B  F008         	goto	u645
  3873  001080  5002               	movf	(??_kpDebounce+1)^0,w,c
  3874  001082  1483               	andwf	131,w,c	;volatile
  3875  001084  0900               	iorlw	0
  3876  001086  A4D8               	btfss	status,2,c
  3877  001088  EF48  F008         	goto	u651
  3878  00108C  EF4A  F008         	goto	u650
  3879  001090                     u651:
  3880  001090  EF62  F008         	goto	l1305
  3881  001094                     u650:
  3882  001094                     
  3883                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3884  001094  500A               	movf	kpDebounce@i^0,w,c
  3885  001096  0D04               	mullw	4
  3886  001098  50F3               	movf	243,w,c
  3887  00109A  2409               	addwf	kpDebounce@j^0,w,c
  3888  00109C  6E01               	movwf	??_kpDebounce^0,c
  3889  00109E  0E01               	movlw	1
  3890  0010A0  6E02               	movwf	(??_kpDebounce+1)^0,c
  3891  0010A2  0E00               	movlw	0
  3892  0010A4  6E03               	movwf	(??_kpDebounce+2)^0,c
  3893  0010A6  2A01               	incf	??_kpDebounce^0,f,c
  3894  0010A8  EF59  F008         	goto	u664
  3895  0010AC                     u665:
  3896  0010AC  90D8               	bcf	status,0,c
  3897  0010AE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3898  0010B0  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3899  0010B2                     u664:
  3900  0010B2  2E01               	decfsz	??_kpDebounce^0,f,c
  3901  0010B4  EF56  F008         	goto	u665
  3902  0010B8  5002               	movf	(??_kpDebounce+1)^0,w,c
  3903  0010BA  1253               	iorwf	kpDebounce@valorNovo^0,f,c
  3904  0010BC  5003               	movf	(??_kpDebounce+2)^0,w,c
  3905  0010BE  1254               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3906                           
  3907                           ;keypad.c: 69:             } else {
  3908  0010C0  EF7C  F008         	goto	l1307
  3909  0010C4                     l1305:
  3910                           
  3911                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3912  0010C4  500A               	movf	kpDebounce@i^0,w,c
  3913  0010C6  0D04               	mullw	4
  3914  0010C8  50F3               	movf	243,w,c
  3915  0010CA  2409               	addwf	kpDebounce@j^0,w,c
  3916  0010CC  6E01               	movwf	??_kpDebounce^0,c
  3917  0010CE  0E01               	movlw	1
  3918  0010D0  6E02               	movwf	(??_kpDebounce+1)^0,c
  3919  0010D2  0E00               	movlw	0
  3920  0010D4  6E03               	movwf	(??_kpDebounce+2)^0,c
  3921  0010D6  2A01               	incf	??_kpDebounce^0,f,c
  3922  0010D8  EF71  F008         	goto	u674
  3923  0010DC                     u675:
  3924  0010DC  90D8               	bcf	status,0,c
  3925  0010DE  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3926  0010E0  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3927  0010E2                     u674:
  3928  0010E2  2E01               	decfsz	??_kpDebounce^0,f,c
  3929  0010E4  EF6E  F008         	goto	u675
  3930  0010E8  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3931  0010EA  6E04               	movwf	(??_kpDebounce+3)^0,c
  3932  0010EC  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3933  0010EE  6E05               	movwf	(??_kpDebounce+4)^0,c
  3934  0010F0  5004               	movf	(??_kpDebounce+3)^0,w,c
  3935  0010F2  1653               	andwf	kpDebounce@valorNovo^0,f,c
  3936  0010F4  5005               	movf	(??_kpDebounce+4)^0,w,c
  3937  0010F6  1654               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3938  0010F8                     l1307:
  3939                           
  3940                           ;keypad.c: 72:         }
  3941  0010F8  2A09               	incf	kpDebounce@j^0,f,c
  3942  0010FA  0E03               	movlw	3
  3943  0010FC  6409               	cpfsgt	kpDebounce@j^0,c
  3944  0010FE  EF83  F008         	goto	u681
  3945  001102  EF85  F008         	goto	u680
  3946  001106                     u681:
  3947  001106  EF34  F008         	goto	l1301
  3948  00110A                     u680:
  3949  00110A                     
  3950                           ;keypad.c: 73:     }
  3951  00110A  2A0A               	incf	kpDebounce@i^0,f,c
  3952  00110C  0E02               	movlw	2
  3953  00110E  640A               	cpfsgt	kpDebounce@i^0,c
  3954  001110  EF8C  F008         	goto	u691
  3955  001114  EF8E  F008         	goto	u690
  3956  001118                     u691:
  3957  001118  EFFD  F007         	goto	l1283
  3958  00111C                     u690:
  3959  00111C                     
  3960                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3961  00111C  5053               	movf	kpDebounce@valorNovo^0,w,c
  3962  00111E  1851               	xorwf	kpDebounce@valorAntigo^0,w,c
  3963  001120  E107               	bnz	u701
  3964  001122  5054               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3965  001124  1852               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3966  001126  A4D8               	btfss	status,2,c
  3967  001128  EF98  F008         	goto	u701
  3968  00112C  EF9A  F008         	goto	u700
  3969  001130                     u701:
  3970  001130  EF9D  F008         	goto	l1319
  3971  001134                     u700:
  3972  001134                     
  3973                           ;keypad.c: 75:         tempo--;
  3974  001134  065C               	decf	kpDebounce@tempo^0,f,c
  3975                           
  3976                           ;keypad.c: 76:     } else {
  3977  001136  EFA3  F008         	goto	l107
  3978  00113A                     l1319:
  3979                           
  3980                           ;keypad.c: 77:         tempo = 10;
  3981  00113A  0E0A               	movlw	10
  3982  00113C  6E5C               	movwf	kpDebounce@tempo^0,c
  3983  00113E                     
  3984                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3985  00113E  C053  F051         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3986  001142  C054  F052         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3987  001146                     l107:
  3988                           
  3989                           ;keypad.c: 80:     if (tempo == 0) {
  3990  001146  505C               	movf	kpDebounce@tempo^0,w,c
  3991  001148  A4D8               	btfss	status,2,c
  3992  00114A  EFA9  F008         	goto	u711
  3993  00114E  EFAB  F008         	goto	u710
  3994  001152                     u711:
  3995  001152  EFAF  F008         	goto	l108
  3996  001156                     u710:
  3997  001156                     
  3998                           ;keypad.c: 81:         valor = valorAntigo;
  3999  001156  C051  F055         	movff	kpDebounce@valorAntigo,_valor
  4000  00115A  C052  F056         	movff	kpDebounce@valorAntigo+1,_valor+1
  4001  00115E                     l108:
  4002                           
  4003                           ;keypad.c: 83:     PORTD = old_D;
  4004  00115E  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4005  001162                     
  4006                           ;keypad.c: 84:     TRISD = 0x00;
  4007  001162  0E00               	movlw	0
  4008  001164  6E95               	movwf	149,c	;volatile
  4009  001166  0012               	return		;funcret
  4010  001168                     __end_of_kpDebounce:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _atraso_ms *****************
  4014 ;; Defined at:
  4015 ;;		line 3 in file "atraso.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;  t               2    0[COMRAM] unsigned int 
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;  i               2    2[COMRAM] volatile unsigned int 
  4020 ;;  k               1    5[COMRAM] volatile unsigned char 
  4021 ;;  j               1    4[COMRAM] volatile unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4031 ;;      Params:         2       0       0       0       0       0       0
  4032 ;;      Locals:         4       0       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0
  4034 ;;      Totals:         6       0       0       0       0       0       0
  4035 ;;Total ram usage:        6 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; This function calls:
  4038 ;;		Nothing
  4039 ;; This function is called by:
  4040 ;;		_main
  4041 ;; This function uses a non-reentrant model
  4042 ;;
  4043                           
  4044                           	psect	text23
  4045  0016C8                     __ptext23:
  4046                           	callstack 0
  4047  0016C8                     _atraso_ms:
  4048                           	callstack 30
  4049  0016C8                     
  4050                           ;atraso.c: 4:     volatile unsigned char j, k;;atraso.c: 5:     volatile unsigned int i;
      +                          ;atraso.c: 6:     for (i = 0; i < t; i++) {
  4051  0016C8  0E00               	movlw	0
  4052  0016CA  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4053  0016CC  0E00               	movlw	0
  4054  0016CE  6E03               	movwf	atraso_ms@i^0,c	;volatile
  4055  0016D0  EF8A  F00B         	goto	l2019
  4056  0016D4                     l1997:
  4057                           
  4058                           ;atraso.c: 7:         for (j = 0; j < 41; j++) {
  4059  0016D4  0E00               	movlw	0
  4060  0016D6  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4061  0016D8                     l1999:
  4062  0016D8  0E28               	movlw	40
  4063  0016DA  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4064  0016DC  EF72  F00B         	goto	u1641
  4065  0016E0  EF74  F00B         	goto	u1640
  4066  0016E4                     u1641:
  4067  0016E4  EF76  F00B         	goto	l2003
  4068  0016E8                     u1640:
  4069  0016E8  EF88  F00B         	goto	l2017
  4070  0016EC                     l2003:
  4071                           
  4072                           ;atraso.c: 8:             for (k = 0; k < 3; k++);
  4073  0016EC  0E00               	movlw	0
  4074  0016EE  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4075  0016F0                     l2005:
  4076  0016F0  0E02               	movlw	2
  4077  0016F2  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4078  0016F4  EF7E  F00B         	goto	u1651
  4079  0016F8  EF80  F00B         	goto	u1650
  4080  0016FC                     u1651:
  4081  0016FC  EF82  F00B         	goto	l2009
  4082  001700                     u1650:
  4083  001700  EF85  F00B         	goto	l2013
  4084  001704                     l2009:
  4085  001704  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4086  001706  EF78  F00B         	goto	l2005
  4087  00170A                     l2013:
  4088                           
  4089                           ;atraso.c: 9:         }
  4090  00170A  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4091  00170C  EF6C  F00B         	goto	l1999
  4092  001710                     l2017:
  4093                           
  4094                           ;atraso.c: 10:     }
  4095  001710  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  4096  001712  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4097  001714                     l2019:
  4098  001714  5001               	movf	atraso_ms@t^0,w,c
  4099  001716  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  4100  001718  5002               	movf	(atraso_ms@t+1)^0,w,c
  4101  00171A  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4102  00171C  A0D8               	btfss	status,0,c
  4103  00171E  EF93  F00B         	goto	u1661
  4104  001722  EF95  F00B         	goto	u1660
  4105  001726                     u1661:
  4106  001726  EF6A  F00B         	goto	l1997
  4107  00172A                     u1660:
  4108  00172A  0012               	return		;funcret
  4109  00172C                     __end_of_atraso_ms:
  4110                           	callstack 0
  4111                           
  4112                           	psect	rparam
  4113  0000                     
  4114                           	psect	idloc
  4115                           
  4116                           ;Config register IDLOC0 @ 0x200000
  4117                           ;	unspecified, using default values
  4118  200000                     	org	2097152
  4119  200000  FF                 	db	255
  4120                           
  4121                           ;Config register IDLOC1 @ 0x200001
  4122                           ;	unspecified, using default values
  4123  200001                     	org	2097153
  4124  200001  FF                 	db	255
  4125                           
  4126                           ;Config register IDLOC2 @ 0x200002
  4127                           ;	unspecified, using default values
  4128  200002                     	org	2097154
  4129  200002  FF                 	db	255
  4130                           
  4131                           ;Config register IDLOC3 @ 0x200003
  4132                           ;	unspecified, using default values
  4133  200003                     	org	2097155
  4134  200003  FF                 	db	255
  4135                           
  4136                           ;Config register IDLOC4 @ 0x200004
  4137                           ;	unspecified, using default values
  4138  200004                     	org	2097156
  4139  200004  FF                 	db	255
  4140                           
  4141                           ;Config register IDLOC5 @ 0x200005
  4142                           ;	unspecified, using default values
  4143  200005                     	org	2097157
  4144  200005  FF                 	db	255
  4145                           
  4146                           ;Config register IDLOC6 @ 0x200006
  4147                           ;	unspecified, using default values
  4148  200006                     	org	2097158
  4149  200006  FF                 	db	255
  4150                           
  4151                           ;Config register IDLOC7 @ 0x200007
  4152                           ;	unspecified, using default values
  4153  200007                     	org	2097159
  4154  200007  FF                 	db	255
  4155                           
  4156                           	psect	config
  4157                           
  4158                           ; Padding undefined space
  4159  300000                     	org	3145728
  4160  300000  FF                 	db	255
  4161                           
  4162                           ;Config register CONFIG1H @ 0x300001
  4163                           ;	Oscillator Selection bits
  4164                           ;	OSC = HS, HS oscillator
  4165                           ;	Fail-Safe Clock Monitor Enable bit
  4166                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4167                           ;	Internal/External Oscillator Switchover bit
  4168                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4169  300001                     	org	3145729
  4170  300001  02                 	db	2
  4171                           
  4172                           ;Config register CONFIG2L @ 0x300002
  4173                           ;	Power-up Timer Enable bit
  4174                           ;	PWRT = OFF, PWRT disabled
  4175                           ;	Brown-out Reset Enable bits
  4176                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4177                           ;	Brown Out Reset Voltage bits
  4178                           ;	BORV = 0x2E, user specified literal
  4179  300002                     	org	3145730
  4180  300002  71                 	db	369
  4181                           
  4182                           ;Config register CONFIG2H @ 0x300003
  4183                           ;	Watchdog Timer Enable bit
  4184                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4185                           ;	Watchdog Timer Postscale Select bits
  4186                           ;	WDTPS = 1, 1:1
  4187  300003                     	org	3145731
  4188  300003  00                 	db	0
  4189                           
  4190                           ; Padding undefined space
  4191  300004                     	org	3145732
  4192  300004  FF                 	db	255
  4193                           
  4194                           ;Config register CONFIG3H @ 0x300005
  4195                           ;	CCP2 MUX bit
  4196                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4197                           ;	PORTB A/D Enable bit
  4198                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4199                           ;	Low-Power Timer1 Oscillator Enable bit
  4200                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4201                           ;	MCLR Pin Enable bit
  4202                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4203  300005                     	org	3145733
  4204  300005  83                 	db	131
  4205                           
  4206                           ;Config register CONFIG4L @ 0x300006
  4207                           ;	Stack Full/Underflow Reset Enable bit
  4208                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4209                           ;	Single-Supply ICSP Enable bit
  4210                           ;	LVP = OFF, Single-Supply ICSP disabled
  4211                           ;	Extended Instruction Set Enable bit
  4212                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4213                           ;	Background Debugger Enable bit
  4214                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4215  300006                     	org	3145734
  4216  300006  80                 	db	128
  4217                           
  4218                           ; Padding undefined space
  4219  300007                     	org	3145735
  4220  300007  FF                 	db	255
  4221                           
  4222                           ;Config register CONFIG5L @ 0x300008
  4223                           ;	Code Protection bit
  4224                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4225                           ;	Code Protection bit
  4226                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4227                           ;	Code Protection bit
  4228                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4229                           ;	Code Protection bit
  4230                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4231  300008                     	org	3145736
  4232  300008  0F                 	db	15
  4233                           
  4234                           ;Config register CONFIG5H @ 0x300009
  4235                           ;	Boot Block Code Protection bit
  4236                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4237                           ;	Data EEPROM Code Protection bit
  4238                           ;	CPD = OFF, Data EEPROM not code-protected
  4239  300009                     	org	3145737
  4240  300009  C0                 	db	192
  4241                           
  4242                           ;Config register CONFIG6L @ 0x30000A
  4243                           ;	Write Protection bit
  4244                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4245                           ;	Write Protection bit
  4246                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4247                           ;	Write Protection bit
  4248                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4249                           ;	Write Protection bit
  4250                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4251  30000A                     	org	3145738
  4252  30000A  0F                 	db	15
  4253                           
  4254                           ;Config register CONFIG6H @ 0x30000B
  4255                           ;	Configuration Register Write Protection bit
  4256                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4257                           ;	Boot Block Write Protection bit
  4258                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4259                           ;	Data EEPROM Write Protection bit
  4260                           ;	WRTD = OFF, Data EEPROM not write-protected
  4261  30000B                     	org	3145739
  4262  30000B  E0                 	db	224
  4263                           
  4264                           ;Config register CONFIG7L @ 0x30000C
  4265                           ;	Table Read Protection bit
  4266                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4267                           ;	Table Read Protection bit
  4268                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4269                           ;	Table Read Protection bit
  4270                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4271                           ;	Table Read Protection bit
  4272                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4273  30000C                     	org	3145740
  4274  30000C  0F                 	db	15
  4275                           
  4276                           ;Config register CONFIG7H @ 0x30000D
  4277                           ;	Boot Block Table Read Protection bit
  4278                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4279  30000D                     	org	3145741
  4280  30000D  40                 	db	64
  4281                           tosu	equ	0xFFF
  4282                           tosh	equ	0xFFE
  4283                           tosl	equ	0xFFD
  4284                           stkptr	equ	0xFFC
  4285                           pclatu	equ	0xFFB
  4286                           pclath	equ	0xFFA
  4287                           pcl	equ	0xFF9
  4288                           tblptru	equ	0xFF8
  4289                           tblptrh	equ	0xFF7
  4290                           tblptrl	equ	0xFF6
  4291                           tablat	equ	0xFF5
  4292                           prodh	equ	0xFF4
  4293                           prodl	equ	0xFF3
  4294                           indf0	equ	0xFEF
  4295                           postinc0	equ	0xFEE
  4296                           postdec0	equ	0xFED
  4297                           preinc0	equ	0xFEC
  4298                           plusw0	equ	0xFEB
  4299                           fsr0h	equ	0xFEA
  4300                           fsr0l	equ	0xFE9
  4301                           wreg	equ	0xFE8
  4302                           indf1	equ	0xFE7
  4303                           postinc1	equ	0xFE6
  4304                           postdec1	equ	0xFE5
  4305                           preinc1	equ	0xFE4
  4306                           plusw1	equ	0xFE3
  4307                           fsr1h	equ	0xFE2
  4308                           fsr1l	equ	0xFE1
  4309                           bsr	equ	0xFE0
  4310                           indf2	equ	0xFDF
  4311                           postinc2	equ	0xFDE
  4312                           postdec2	equ	0xFDD
  4313                           preinc2	equ	0xFDC
  4314                           plusw2	equ	0xFDB
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     80      92
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> setTemperature@str(COMRAM[6]), main@str(COMRAM[6]), main@tempoRelogio(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[13]), STR_5(CODE[4]), 
		 -> STR_4(CODE[7]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_setTemperature
    _setTemperature->_itoa
    _lcdPosition->_lcdCommand
    _itoa->___lwdiv
    _pwmSet1->___lwdiv
    ___wmul->_adc_amostra
    ___lwdiv->___wmul
    _pwmFrequency->___aldiv
    _lcd_str->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   29876
                                             37 COMRAM    43    43      0
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                          _atraso_ms
                               _itoa
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_str
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                     _setTemperature
 ---------------------------------------------------------------------------------
 (1) _setTemperature                                      15    13      2    9400
                                             24 COMRAM    13    11      2
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                               _itoa
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          3     2      1    2332
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    2843
                                             20 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    2692
                                             20 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              7 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2129
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2339
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     670
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
     ___wmul (ARG)
       _adc_amostra (ARG)
     _adc_amostra (ARG)
   ___wmul
   _adc_amostra
   _atraso_ms
   _itoa
     ___lwdiv
     ___lwmod
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
     _lcdCommand
   _lcd_str
     _lcdData
   _pwmFrequency
     ___aldiv
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _setTemperature
     ___lwdiv
     ___wmul
     _adc_amostra
     _itoa
     _lcdData
     _lcdPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     50      5C       1       72.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      15        0.0%
DATA                 0      0      5C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug  1 14:09:51 2021

                        _i 005B                         l42 0FEC                         l76 0D9E  
                       l89 18BC                         u10 1888                         u11 1884  
      ___wmul@multiplicand 000A       __size_of_adc_amostra 0090                        l112 18C6  
                      l130 1870                        l107 1146                        l108 115E  
                      l140 177E                        l109 1166                        l125 1888  
                      l302 0826                        l143 1582                        l137 150A  
                      l154 17CE                        l146 17EC                        l235 1854  
                      l164 172A                        l148 1808                        l229 1662  
                      l333 148C                        l238 18B2                        l190 140A  
                      l415 1272                        l336 182E                        l184 13CC  
                      l193 137A                        l290 0818                        l187 13CE  
                      l291 07B0                        l295 07E6                        l834 15F6  
                      l827 15EE                        l844 16C6                        l837 16BE  
                      u220 1870                        u221 186C                        _PR2 000FCB  
                      u700 1134                        u701 1130                        u710 1156  
                      u630 1064                        u614 1010                        u711 1152  
                      u631 1060                        u615 100C                        u624 1030  
                      u625 102C                        u650 1094                        u651 1090  
                      u644 107A                        u645 1076                        u680 110A  
                      u664 10B2                        u681 1106                        u665 10AC  
                      u690 111C                        u674 10E2                        u691 1118  
                      u675 10DC                        _cnt 005A                        wreg 000FE8  
                     l1015 1876                       l1017 1878                       l1009 1872  
                     l2003 16EC                       l2013 170A                       l2005 16F0  
                     l1301 1068                       l2021 15FA                       l2101 073C  
                     l1311 110A                       l1303 1094                       l2031 1830  
                     l2023 1618                       l2111 077A                       l2103 0742  
                     l2009 1704                       l2017 1710                       l1321 113E  
                     l1313 110C                       l1305 10C4                       l1065 185A  
                     l2025 1634                       l2041 1472                       l2033 140C  
                     l2201 09EA                       l2121 07BE                       l2113 0788  
                     l2105 074E                       l2019 1714                       l1323 1156  
                     l1315 111C                       l1307 10F8                       l1067 185E  
                     l1059 1856                       l1411 18A4                       l2027 163C  
                     l2043 1478                       l2035 143E                       l2211 0A04  
                     l2203 09EE                       l2131 0806                       l2123 07D0  
                     l2115 079A                       l2107 0752                       l1325 1162  
                     l1317 1134                       l1309 10FA                       l1069 1860  
                     l1413 18A8                       l2029 1654                       l2045 147E  
                     l2037 1456                       l2213 0A0C                       l2205 09F0  
                     l2141 0846                       l2133 080E                       l2125 07D8  
                     l2117 07A2                       l2109 076E                       l2061 0646  
                     l1319 113A                       l1327 18BE                       l2047 1484  
                     l2039 1468                       l2223 0A52                       l2207 09F2  
                     l2151 0878                       l2143 0856                       l2127 07DA  
                     l2119 07A4                       l2135 0818                       l2071 0694  
                     l2063 0676                       l1273 0FEE                       l1409 18A0  
                     l2241 0A9E                       l2225 0A54                       l2233 0A6A  
                     l2217 0A2C                       l2209 09F8                       l2161 08A8  
                     l2153 0882                       l2145 085C                       l2137 0834  
                     l2129 07F4                       l2081 06D6                       l2073 069E  
                     l2065 067A                       l1291 1044                       l1283 0FFA  
                     l1275 0FF2                       l2243 0AA6                       l2235 0A76  
                     l2219 0A34                       l2171 0924                       l2163 08B4  
                     l2155 0896                       l2147 0862                       l2139 083A  
                     l2091 0710                       l2083 06E4                       l2075 06AA  
                     l2067 067E                       l1293 1048                       l1285 103C  
                     l1277 0FF6                       l2261 0AF0                       l2253 0AD2  
                     l2237 0A7E                       l2229 0A60                       l2181 0950  
                     l2173 0938                       l2165 08BA                       l2157 089C  
                     l2149 086C                       l2093 071A                       l2085 06EE  
                     l2077 06AE                       l2069 0688                       l1295 1064  
                     l1711 0DA0                       l2271 0B36                       l2247 0AC4  
                     l2191 09A4                       l2183 0956                       l2175 093E  
                     l2167 08E2                       l2159 08A2                       l2095 0726  
                     l2087 06F8                       l2079 06CA                       l1721 0E2C  
                     l1713 0DBC                       l1801 1686                       l2273 0B38  
                     l2265 0B10                       l2249 0AC6                       l2257 0ADC  
                     l2193 09A6                       l2185 0962                       l2177 0944  
                     l2169 091A                       l2097 0730                       l2089 0704  
                     l1731 0EBE                       l1723 0E46                       l1715 0DCE  
                     l1811 0B52                       l1803 1694                       l2267 0B18  
                     l2259 0AE8                       l2195 09D0                       l2187 096E  
                     l2179 094A                       l2099 0736                       l1741 0F56  
                     l1733 0EDE                       l1725 0E66                       l1717 0DEE  
                     l1821 0BDE                       l1813 0B6E                       l1901 180A  
                     l2285 13AE                       l1805 16AA                       l2277 0B44  
                     l2189 0998                       l2197 09D2                       l1743 0F78  
                     l1735 0F00                       l1727 0E88                       l1719 0E10  
                     l1751 1490                       l1831 0C68                       l1823 0BF0  
                     l1815 0B80                       l1911 117A                       l1903 1826  
                     l1807 16B2                       l2199 09E4                       l1745 0F94  
                     l1737 0F1C                       l1729 0EA4                       l1761 14C4  
                     l1753 1494                       l1841 0D04                       l1833 0C8C  
                     l1825 0C14                       l1817 0BA0                       l1921 11B0  
                     l1913 118A                       l1809 16B8                       l1747 0FAE  
                     l1739 0F36                       l1771 1506                       l1763 14D8  
                     l1755 1498                       l1843 0D2A                       l1835 0CB2  
                     l1827 0C3A                       l1819 0BC2                       l1851 172E  
                     l1931 11F8                       l1923 11C0                       l1915 118E  
                     l1907 1168                       l1749 0FCE                       l1765 14DC  
                     l1757 14AC                       l1845 0D46                       l1837 0CCE  
                     l1829 0C56                       l1861 1762                       l1853 1732  
                     l1941 123C                       l1933 1202                       l1925 11D6  
                     l1917 119C                       l1909 116C                       l1781 15AE  
                     l1773 1584                       l1951 18B4                       l1767 14EE  
                     l1759 14B0                       l1847 0D58                       l1839 0CE0  
                     l1863 1776                       l1855 1736                       l1935 1220  
                     l1927 11DE                       l1943 1242                       l1919 11AC  
                     l1791 15E2                       l1783 15BC                       l1775 158C  
                     l1871 17E6                       l1769 14FE                       l1849 0D7C  
                     l1961 1540                       l1953 150C                       l1865 177A  
                     l1857 174A                       l1945 1252                       l1937 1230  
                     l1929 11EA                       l1793 15E8                       l1785 15C2  
                     l1777 159E                       l1881 138A                       l1873 17FC  
                     l1971 1556                       l1963 1544                       l1955 1534  
                     l1859 174E                       l1947 1262                       l1939 1232  
                     l1787 15D8                       l1779 15A6                       l1883 1392  
                     l1795 1664                       l1875 1802                       l1867 17D2  
                     l1981 1570                       l1973 155A                       l1965 1548  
                     l1957 1538                       l1789 15E0                       l1877 137E  
                     l1797 1676                       l1869 17D6                       l1983 1576  
                     l1975 1560                       l1967 154C                       l1959 153C  
                     l1991 17A4                       l1879 1382                       l1887 139A  
                     l1799 167E                       l1985 157C                       l1977 1564  
                     l1969 1552                       l1993 17A6                       l1889 13DC  
                     l1897 1274                       l1995 16C8                       l1979 156A  
                     l1987 1780                       l1899 136A                       l1997 16D4  
                     l1989 1788                       l1999 16D8                       STR_1 0601  
                     STR_2 0610                       STR_3 062B                       STR_4 0638  
                     STR_5 063F                       STR_6 061E                       STR_7 063F  
                     STR_8 0643                       u1100 0E46                       u1101 0E42  
                     u1210 0F94                       u1130 0EA4                       u1114 0E58  
                     u1050 0DBC                       u1211 0F90                       u1131 0EA0  
                     u1115 0E54                       u1051 0DB8                       u1220 0FAE  
                     u1204 0F68                       u1140 0EBE                       u1124 0E78  
                     u1060 0DCE                       u1300 1676                       u1221 0FAA  
                     u1205 0F64                       u1141 0EBA                       u1125 0E74  
                     u1061 0DCA                       u1301 1672                       u1310 1694  
                     u1311 1690                       u1320 16AA                       u1321 16A6  
                     u1234 0FC0                       u1170 0F1C                       u1154 0ED0  
                     u1090 0E2C                       u1074 0DE0                       u1250 14EE  
                     u1410 0C56                       u1330 0B6E                       u1235 0FBC  
                     u1171 0F18                       u1155 0ECC                       u1091 0E28  
                     u1075 0DDC                       u1251 14EA                       u1411 0C52  
                     u1331 0B6A                       u1244 0FE0                       u1180 0F36  
                     u1164 0EF0                       u1084 0E00                       u1260 14FE  
                     u1500 0D58                       u1420 0C68                       u1404 0C2A  
                     u1340 0B80                       u1245 0FDC                       u1181 0F32  
                     u1165 0EEC                       u1085 0DFC                       u1261 14FA  
                     u1501 0D54                       u1421 0C64                       u1405 0C26  
                     u1341 0B7C                       u1270 159E                       u1271 159A  
                     u1600 11F8                       u1280 15BC                       u1601 11F4  
                     u1281 15B8                       u1194 0F48                       u1514 0D6E  
                     u1450 0CCE                       u1434 0C7E                       u1370 0BDE  
                     u1354 0B92                       u1610 1220                       u1290 15D8  
                     u1530 17E6                       u1195 0F44                       u1515 0D6A  
                     u1451 0CCA                       u1435 0C7A                       u1371 0BDA  
                     u1355 0B8E                       u1611 121C                       u1291 15D4  
                     u1531 17E2                       u1524 0D92                       u1460 0CE0  
                     u1444 0CA2                       u1380 0BF0                       u1364 0BB2  
                     u1620 1252                       u1540 17FC                       u1700 0788  
                     u1525 0D8E                       u1461 0CDC                       u1445 0C9E  
                     u1381 0BEC                       u1365 0BAE                       u1621 124E  
                     u1541 17F8                       u1701 0784                       u1630 17CE  
                     u1550 13DC                       u1710 079A                       u1631 17CA  
                     u1551 13D8                       u1711 0796                       u1640 16E8  
                     u1800 09E4                       u1720 07BE                       u1641 16E4  
                     u1801 09E0                       u1721 07BA                       u1650 1700  
                     u1490 0D46                       u1474 0CF6                       u1394 0C06  
                     u1570 117A                       u1810 0A28                       u1730 07D0  
                     u1651 16FC                       u1491 0D42                       u1475 0CF2  
                     u1395 0C02                       u1571 1176                       u1811 0A24  
                     u1731 07CC                       u1660 172A                       u1484 0D1A  
                     u1580 119C                       u1820 0A4E                       u1740 07F4  
                     u1661 1726                       u1485 0D16                       u1581 1198  
                     u1565 13E4                       u1821 0A4A                       u1741 07F0  
                     u1590 11D6                       u1830 0A9A                       u1750 0806  
                     u1670 06CA                       u1591 11D2                       u1831 0A96  
                     u1751 0802                       u1671 06C6                       u1840 0AC0  
                     u1760 0826                       u1680 06E4                       u1841 0ABC  
                     u1761 0822                       u1681 06E0                       u1850 0B0C  
                     u1770 0834                       u1690 076E                       u1851 0B08  
                     u1771 0830                       u1691 076A                       u1860 0B32  
                     u1780 0998                       u1861 0B2E                       u1781 0994  
                     u1790 09D0                       u1791 09CC                       _main 0646  
                     _itoa 1274                       _perc 0059                       _tmax 0058  
                     _tmin 0057                       fsr2h 000FDA                       indf2 000FDF  
                     fsr2l 000FD9                       prodh 000FF4                       prodl 000FF3  
                     start 0000               ___param_bank 000000    __size_of_setTemperature 0082  
          __end_of___aldiv 1274                      ?_main 0001                      ?_itoa 0015  
                    _T2CON 000FCA            __end_of___lwdiv 15F8            __end_of___lwmod 16C8  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _PORTD 000F83                      _PORTE 000F84                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96            __end_of_lcdData 1780            __end_of_lcdInit 1584  
          __end_of_lcd_str 17D0         main@temperaturaLcd 0045            __end_of_pinMode 0DA0  
                    _valor 0055                      main@i 003C                      main@j 0049  
                    tablat 000FF5            __end_of_pwmSet1 1664            __end_of_pwmInit 18B4  
                    status 000FD8           __end_of_Delay2ms 1872       __end_of_digitalWrite 0FEE  
          __initialization 188A               __end_of_main 0B52               __end_of_itoa 137C  
       __size_of_Delay40us 0018                     ??_main 0026                     ??_itoa 0019  
            __activetblptr 000002                     _ADCON0 000FC2                     _ADCON1 000FC1  
                   _ADCON2 000FC0                     _ADRESH 000FC4                     _ADRESL 000FC3  
                   _CCPR1L 000FBE                     _CCPR2L 000FBB       __size_of_lcdPosition 003A  
        lcdPosition@coluna 0009                  ??___aldiv 0009                     ___wmul 180A  
                ??___lwdiv 0012                  ??___lwmod 0005                     _kpInit 18BE  
                   _kpRead 18B4                     clear_0 1890                  ??_lcdData 0007  
                   isa$std 000001                  ??_lcdInit 0009                  ??_lcd_str 000B  
                ??_pinMode 0005               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_pwmSet1 0015  
                ??_pwmInit 0001          __end_of_Delay40us 188A                 __accesstop 0080  
  __end_of__initialization 1896              ___rparam_used 000001             _setTemperature 140C  
              pinMode@type 0003             __pcstackCOMRAM 0001                  ?_Delay2ms 0001  
       __size_of_atraso_ms 0064      __size_of_digitalWrite 024E          main@minutosDezena 0043  
   __end_of_setTemperature 148E                 _lcdCommand 148E                    ?___wmul 0008  
            ??_adc_amostra 0003                    ?_kpInit 0001                    ?_kpRead 0001  
                  _CCP1CON 000FBD                    _CCP2CON 000FBA                 _kpDebounce 0FEE  
               ??_Delay2ms 0002               _digitalWrite 0DA0            ?_setTemperature 0019  
                  __Hparam 0000                    __Lparam 0000            kpDebounce@old_D 0006  
       lcdPosition@comando 000A            kpDebounce@tempo 005C                    ___aldiv 1168  
          __size_of___wmul 0026                    ___lwdiv 1584                    ___lwmod 1664  
        __end_of_atraso_ms 172C               __psmallconst 0600            __size_of_kpInit 000A  
          __size_of_kpRead 000A                    __pcinit 188A                    _lcdData 172C  
                  __ramtop 0600                    _lcdInit 150C                    __ptext0 0646  
                  __ptext1 140C                    __ptext2 17D0                    __ptext3 1274  
                  __ptext4 1664                    __ptext5 137C                    __ptext6 15F8  
                  __ptext7 180A                    __ptext8 1584                    __ptext9 18A0  
                  _lcd_str 1780        __end_of_adc_amostra 140C                    _pinMode 0B52  
         ___aldiv@dividend 0001                    _pwmSet1 15F8                    _pwmInit 18A0  
                Delay2ms@i 0002                    main@str 0034        kpDebounce@valorNovo 0053  
           main@tempoTotal 0047       end_of_initialization 1896                    itoa@val 0015  
            __Lmediumconst 0000                    itoa@str 0017              ?_pwmFrequency 000F  
         ___aldiv@quotient 000B                ?_lcdCommand 0001                    postinc0 000FEE  
              ?_kpDebounce 0001                  _PORTCbits 000F82                  _TRISCbits 000F94  
            ??_lcdPosition 000A             ??_pwmFrequency 0011                  _Delay40us 1872  
               lcd_str@str 0009                _adc_amostra 137C                 atraso_ms@i 0003  
               atraso_ms@j 0005                 atraso_ms@k 0006                 atraso_ms@t 0001  
           __end_of___wmul 1830             __end_of_kpInit 18C8             __end_of_kpRead 18BE  
      start_initialization 188A          __size_of_Delay2ms 001C        __size_of_lcdCommand 007E  
setTemperature@temperatura 0024        __size_of_kpDebounce 017A                 ?_Delay40us 0001  
      __end_of_lcdPosition 180A          setTemperature@tmp 0023          setTemperature@str 001D  
         lcdPosition@linha 000B                   ??___wmul 000C                   ??_kpInit 0001  
                 ??_kpRead 0003                __pbssCOMRAM 0051                 pinMode@pin 0001  
       main@minutosCentena 0042           ??_setTemperature 001B         main@minutosUnidade 0044  
         ___lwdiv@dividend 000E                   ?___aldiv 0001                   ?___lwdiv 000E  
                 ?___lwmod 0001                   ?_lcdData 0001                   ?_lcdInit 0001  
                 ?_lcd_str 0009       __end_of_pwmFrequency 1856              lcdCommand@cmd 0008  
                _atraso_ms 16C8                __smallconst 0600                   ?_pinMode 0001  
                 ?_pwmSet1 0001                   ?_pwmInit 0001           ___lwdiv@quotient 0012  
              _lcdPosition 17D0           pwmFrequency@freq 000F            ___aldiv@divisor 0005  
          ___aldiv@counter 0009                ??_Delay40us 0001             ___wmul@product 000C  
             ??_lcdCommand 0007                 pwmSet1@val 0018               ??_kpDebounce 0001  
               _ADCON0bits 000FC2                  main@i_436 003E                  main@i_438 0040  
                main@j_437 004B                  main@j_439 004D          ___wmul@multiplier 0008  
               ?_atraso_ms 0001            lcdCommand@old_D 0007      kpDebounce@valorAntigo 0051  
                 _Delay2ms 1856                  main@tecla 004F           main@tempoRelogio 0028  
       __end_of_lcdCommand 150C               lcdData@old_D 0008               lcdData@valor 0007  
       __end_of_kpDebounce 1168                   __Hrparam 0000                   __Lrparam 0000  
             ?_adc_amostra 0001           __size_of___aldiv 010C           __size_of___lwdiv 0074  
         __size_of___lwmod 0064            pwmSet1@porcento 0017           __size_of_lcdData 0054  
         __size_of_lcdInit 0078           __size_of_lcd_str 0050           __size_of_pinMode 024E  
          ___lwdiv@divisor 0010            ___lwdiv@counter 0014                   __ptext10 1830  
                 __ptext11 1168                   __ptext20 18B4                   __ptext12 1780  
                 __ptext21 18BE                   __ptext13 172C                   __ptext22 0FEE  
                 __ptext14 150C                   __ptext23 16C8                   __ptext15 0B52  
                 __ptext16 148E                   __ptext17 0DA0                   __ptext18 1856  
                 __ptext19 1872           __size_of_pwmSet1 006C           __size_of_pwmInit 0014  
            __size_of_main 050C              __size_of_itoa 0108      main@temperaturaMaxima 002E  
    main@temperaturaMinima 0030                 Delay40us@i 0001                   isa$xinst 000000  
    __size_of_pwmFrequency 0026                   lcd_str@i 000D                   main@tmpi 0032  
          main@temperatura 003A                ??_atraso_ms 0003              ?_digitalWrite 0001  
        digitalWrite@value 0003           ___lwmod@dividend 0001               _pwmFrequency 1830  
          ___lwmod@divisor 0003                kpDebounce@i 000A                kpDebounce@j 0009  
              kpDebounce@k 0007            ___lwmod@counter 0005             ??_digitalWrite 0005  
         adc_amostra@canal 0007               ___aldiv@sign 000A               ?_lcdPosition 0009  
          digitalWrite@pin 0001  
