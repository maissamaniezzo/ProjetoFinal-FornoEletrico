

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug  1 17:37:37 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4520 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _TRISCbits	set	3988
    73  0000                     _PORTCbits	set	3970
    74  0000                     _T2CON	set	4042
    75  0000                     _CCP2CON	set	4026
    76  0000                     _CCPR2L	set	4027
    77  0000                     _CCP1CON	set	4029
    78  0000                     _CCPR1L	set	4030
    79  0000                     _PR2	set	4043
    80  0000                     _ADRESL	set	4035
    81  0000                     _ADRESH	set	4036
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON1	set	4033
    85  0000                     _ADCON0	set	4034
    86  0000                     _TRISE	set	3990
    87  0000                     _TRISD	set	3989
    88  0000                     _TRISC	set	3988
    89  0000                     _TRISB	set	3987
    90  0000                     _TRISA	set	3986
    91  0000                     _PORTE	set	3972
    92  0000                     _PORTD	set	3971
    93  0000                     _PORTC	set	3970
    94  0000                     _PORTB	set	3969
    95  0000                     _PORTA	set	3968
    96                           
    97                           	psect	smallconst
    98  000600                     __psmallconst:
    99                           	callstack 0
   100  000600  00                 	db	0
   101  000601                     STR_1:
   102  000601  56                 	db	86	;'V'
   103  000602  61                 	db	97	;'a'
   104  000603  6D                 	db	109	;'m'
   105  000604  6F                 	db	111	;'o'
   106  000605  73                 	db	115	;'s'
   107  000606  20                 	db	32
   108  000607  69                 	db	105	;'i'
   109  000608  6E                 	db	110	;'n'
   110  000609  69                 	db	105	;'i'
   111  00060A  63                 	db	99	;'c'
   112  00060B  69                 	db	105	;'i'
   113  00060C  61                 	db	97	;'a'
   114  00060D  72                 	db	114	;'r'
   115  00060E  21                 	db	33
   116  00060F  00                 	db	0
   117  000610                     STR_2:
   118  000610  43                 	db	67	;'C'
   119  000611  6C                 	db	108	;'l'
   120  000612  69                 	db	105	;'i'
   121  000613  71                 	db	113	;'q'
   122  000614  75                 	db	117	;'u'
   123  000615  65                 	db	101	;'e'
   124  000616  20                 	db	32
   125  000617  65                 	db	101	;'e'
   126  000618  6D                 	db	109	;'m'
   127  000619  20                 	db	32
   128  00061A  28                 	db	40
   129  00061B  31                 	db	49	;'1'
   130  00061C  29                 	db	41
   131  00061D  00                 	db	0
   132  00061E                     STR_6:
   133  00061E  46                 	db	70	;'F'
   134  00061F  75                 	db	117	;'u'
   135  000620  6E                 	db	110	;'n'
   136  000621  63                 	db	99	;'c'
   137  000622  69                 	db	105	;'i'
   138  000623  6F                 	db	111	;'o'
   139  000624  6E                 	db	110	;'n'
   140  000625  61                 	db	97	;'a'
   141  000626  6E                 	db	110	;'n'
   142  000627  64                 	db	100	;'d'
   143  000628  6F                 	db	111	;'o'
   144  000629  21                 	db	33
   145  00062A  00                 	db	0
   146  00062B                     STR_3:
   147  00062B  54                 	db	84	;'T'
   148  00062C  65                 	db	101	;'e'
   149  00062D  6D                 	db	109	;'m'
   150  00062E  70                 	db	112	;'p'
   151  00062F  65                 	db	101	;'e'
   152  000630  72                 	db	114	;'r'
   153  000631  61                 	db	97	;'a'
   154  000632  74                 	db	116	;'t'
   155  000633  75                 	db	117	;'u'
   156  000634  72                 	db	114	;'r'
   157  000635  61                 	db	97	;'a'
   158  000636  3A                 	db	58	;':'
   159  000637  00                 	db	0
   160  000638                     STR_4:
   161  000638  54                 	db	84	;'T'
   162  000639  65                 	db	101	;'e'
   163  00063A  6D                 	db	109	;'m'
   164  00063B  70                 	db	112	;'p'
   165  00063C  6F                 	db	111	;'o'
   166  00063D  3A                 	db	58	;':'
   167  00063E  00                 	db	0
   168  00063F                     STR_5:
   169  00063F  6D                 	db	109	;'m'
   170  000640  69                 	db	105	;'i'
   171  000641  6E                 	db	110	;'n'
   172  000642  00                 	db	0
   173  000643                     STR_8:
   174  000643  43                 	db	67	;'C'
   175  000644  00                 	db	0
   176  000645  00                 	db	0	; dummy byte at the end
   177  0000                     
   178                           ; #config settings
   179                           
   180                           	psect	cinit
   181  00187E                     __pcinit:
   182                           	callstack 0
   183  00187E                     start_initialization:
   184                           	callstack 0
   185  00187E                     __initialization:
   186                           	callstack 0
   187                           
   188                           ; Clear objects allocated to COMRAM (12 bytes)
   189  00187E  EE00  F051         	lfsr	0,__pbssCOMRAM
   190  001882  0E0C               	movlw	12
   191  001884                     clear_0:
   192  001884  6AEE               	clrf	postinc0,c
   193  001886  06E8               	decf	wreg,f,c
   194  001888  E1FD               	bnz	clear_0
   195  00188A                     end_of_initialization:
   196                           	callstack 0
   197  00188A                     __end_of__initialization:
   198                           	callstack 0
   199  00188A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   200  00188C  6EF8               	movwf	tblptru,c
   201  00188E  0100               	movlb	0
   202  001890  EF23  F003         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205  000051                     __pbssCOMRAM:
   206                           	callstack 0
   207  000051                     kpDebounce@valorAntigo:
   208                           	callstack 0
   209  000051                     	ds	2
   210  000053                     kpDebounce@valorNovo:
   211                           	callstack 0
   212  000053                     	ds	2
   213  000055                     _valor:
   214                           	callstack 0
   215  000055                     	ds	2
   216  000057                     _tmin:
   217                           	callstack 0
   218  000057                     	ds	1
   219  000058                     _tmax:
   220                           	callstack 0
   221  000058                     	ds	1
   222  000059                     _perc:
   223                           	callstack 0
   224  000059                     	ds	1
   225  00005A                     _cnt:
   226                           	callstack 0
   227  00005A                     	ds	1
   228  00005B                     _i:
   229                           	callstack 0
   230  00005B                     	ds	1
   231  00005C                     kpDebounce@tempo:
   232                           	callstack 0
   233  00005C                     	ds	1
   234                           
   235                           	psect	cstackCOMRAM
   236  000001                     __pcstackCOMRAM:
   237                           	callstack 0
   238  000001                     ??_kpDebounce:
   239  000001                     ?_kpRead:
   240                           	callstack 0
   241  000001                     ?_adc_amostra:
   242                           	callstack 0
   243  000001                     ?___lwmod:
   244                           	callstack 0
   245  000001                     ?___aldiv:
   246                           	callstack 0
   247  000001                     Delay40us@i:
   248                           	callstack 0
   249  000001                     digitalWrite@pin:
   250                           	callstack 0
   251  000001                     pinMode@pin:
   252                           	callstack 0
   253  000001                     atraso_ms@t:
   254                           	callstack 0
   255  000001                     ___lwmod@dividend:
   256                           	callstack 0
   257  000001                     ___aldiv@dividend:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x0
   261  000001                     	ds	1
   262  000002                     Delay2ms@i:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x1
   266  000002                     	ds	1
   267  000003                     ??_adc_amostra:
   268  000003                     digitalWrite@value:
   269                           	callstack 0
   270  000003                     pinMode@type:
   271                           	callstack 0
   272  000003                     atraso_ms@i:
   273                           	callstack 0
   274  000003                     ___lwmod@divisor:
   275                           	callstack 0
   276                           
   277                           ; 2 bytes @ 0x2
   278  000003                     	ds	2
   279  000005                     ??_digitalWrite:
   280  000005                     ??_pinMode:
   281  000005                     atraso_ms@j:
   282                           	callstack 0
   283  000005                     ___lwmod@counter:
   284                           	callstack 0
   285  000005                     ___aldiv@divisor:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x4
   289  000005                     	ds	1
   290  000006                     kpDebounce@old_D:
   291                           	callstack 0
   292  000006                     atraso_ms@k:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0x5
   296  000006                     	ds	1
   297  000007                     lcdCommand@old_D:
   298                           	callstack 0
   299  000007                     lcdData@valor:
   300                           	callstack 0
   301  000007                     adc_amostra@canal:
   302                           	callstack 0
   303  000007                     kpDebounce@k:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x6
   307  000007                     	ds	1
   308  000008                     ?___wmul:
   309                           	callstack 0
   310  000008                     lcdCommand@cmd:
   311                           	callstack 0
   312  000008                     lcdData@old_D:
   313                           	callstack 0
   314  000008                     ___wmul@multiplier:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x7
   318  000008                     	ds	1
   319  000009                     kpDebounce@j:
   320                           	callstack 0
   321  000009                     lcdPosition@coluna:
   322                           	callstack 0
   323  000009                     ___aldiv@counter:
   324                           	callstack 0
   325  000009                     lcd_str@str:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x8
   329  000009                     	ds	1
   330  00000A                     kpDebounce@i:
   331                           	callstack 0
   332  00000A                     lcdPosition@comando:
   333                           	callstack 0
   334  00000A                     ___aldiv@sign:
   335                           	callstack 0
   336  00000A                     ___wmul@multiplicand:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x9
   340  00000A                     	ds	1
   341  00000B                     ??_lcd_str:
   342  00000B                     lcdPosition@linha:
   343                           	callstack 0
   344  00000B                     ___aldiv@quotient:
   345                           	callstack 0
   346                           
   347                           ; 4 bytes @ 0xA
   348  00000B                     	ds	1
   349  00000C                     ___wmul@product:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0xB
   353  00000C                     	ds	1
   354  00000D                     lcd_str@i:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0xC
   358  00000D                     	ds	1
   359  00000E                     ?___lwdiv:
   360                           	callstack 0
   361  00000E                     ___lwdiv@dividend:
   362                           	callstack 0
   363                           
   364                           ; 2 bytes @ 0xD
   365  00000E                     	ds	1
   366  00000F                     pwmFrequency@freq:
   367                           	callstack 0
   368                           
   369                           ; 2 bytes @ 0xE
   370  00000F                     	ds	1
   371  000010                     ___lwdiv@divisor:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0xF
   375  000010                     	ds	1
   376  000011                     
   377                           ; 1 bytes @ 0x10
   378  000011                     	ds	1
   379  000012                     ___lwdiv@quotient:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x11
   383  000012                     	ds	2
   384  000014                     ___lwdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388  000014                     	ds	1
   389  000015                     ??_pwmSet1:
   390  000015                     itoa@val:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x14
   394  000015                     	ds	2
   395  000017                     pwmSet1@porcento:
   396                           	callstack 0
   397  000017                     itoa@str:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x16
   401  000017                     	ds	1
   402  000018                     pwmSet1@val:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x17
   406  000018                     	ds	1
   407  000019                     ?_setTemperature:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x18
   411  000019                     	ds	2
   412  00001B                     ??_setTemperature:
   413                           
   414                           ; 1 bytes @ 0x1A
   415  00001B                     	ds	2
   416  00001D                     setTemperature@str:
   417                           	callstack 0
   418                           
   419                           ; 6 bytes @ 0x1C
   420  00001D                     	ds	6
   421  000023                     setTemperature@tmp:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x22
   425  000023                     	ds	1
   426  000024                     setTemperature@temperatura:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x23
   430  000024                     	ds	2
   431  000026                     ??_main:
   432                           
   433                           ; 1 bytes @ 0x25
   434  000026                     	ds	2
   435  000028                     main@tempoRelogio:
   436                           	callstack 0
   437                           
   438                           ; 6 bytes @ 0x27
   439  000028                     	ds	6
   440  00002E                     main@temperaturaMaxima:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x2D
   444  00002E                     	ds	2
   445  000030                     main@temperaturaMinima:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x2F
   449  000030                     	ds	2
   450  000032                     main@tmpi:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x31
   454  000032                     	ds	2
   455  000034                     main@str:
   456                           	callstack 0
   457                           
   458                           ; 6 bytes @ 0x33
   459  000034                     	ds	6
   460  00003A                     main@temperatura:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x39
   464  00003A                     	ds	2
   465  00003C                     main@i:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x3B
   469  00003C                     	ds	2
   470  00003E                     main@i_436:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x3D
   474  00003E                     	ds	2
   475  000040                     main@i_438:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x3F
   479  000040                     	ds	2
   480  000042                     main@minutosCentena:
   481                           	callstack 0
   482                           
   483                           ; 1 bytes @ 0x41
   484  000042                     	ds	1
   485  000043                     main@minutosDezena:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x42
   489  000043                     	ds	1
   490  000044                     main@minutosUnidade:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x43
   494  000044                     	ds	1
   495  000045                     main@temperaturaLcd:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x44
   499  000045                     	ds	2
   500  000047                     main@tempoTotal:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x46
   504  000047                     	ds	2
   505  000049                     main@j:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x48
   509  000049                     	ds	2
   510  00004B                     main@j_437:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x4A
   514  00004B                     	ds	2
   515  00004D                     main@j_439:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x4C
   519  00004D                     	ds	2
   520  00004F                     main@tecla:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x4E
   524  00004F                     	ds	2
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 16 in file "main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  j               2   76[COMRAM] int 
   536 ;;  j               2   74[COMRAM] int 
   537 ;;  j               2   72[COMRAM] int 
   538 ;;  i               2   63[COMRAM] int 
   539 ;;  i               2   61[COMRAM] int 
   540 ;;  i               2   59[COMRAM] int 
   541 ;;  str             6   51[COMRAM] unsigned char [6]
   542 ;;  tempoRelogio    6   39[COMRAM] unsigned char [6]
   543 ;;  tecla           2   78[COMRAM] unsigned int 
   544 ;;  tempoTotal      2   70[COMRAM] unsigned int 
   545 ;;  temperaturaL    2   68[COMRAM] unsigned int 
   546 ;;  temperatura     2   57[COMRAM] unsigned int 
   547 ;;  tmpi            2   49[COMRAM] unsigned int 
   548 ;;  temperaturaM    2   47[COMRAM] unsigned int 
   549 ;;  temperaturaM    2   45[COMRAM] unsigned int 
   550 ;;  minutosUnida    1   67[COMRAM] unsigned char 
   551 ;;  minutosDezen    1   66[COMRAM] unsigned char 
   552 ;;  minutosCente    1   65[COMRAM] unsigned char 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         0       0       0       0       0       0       0
   563 ;;      Locals:        41       0       0       0       0       0       0
   564 ;;      Temps:          2       0       0       0       0       0       0
   565 ;;      Totals:        43       0       0       0       0       0       0
   566 ;;Total ram usage:       43 bytes
   567 ;; Hardware stack levels required when called: 5
   568 ;; This function calls:
   569 ;;		___lwdiv
   570 ;;		___wmul
   571 ;;		_adc_amostra
   572 ;;		_atraso_ms
   573 ;;		_itoa
   574 ;;		_kpDebounce
   575 ;;		_kpInit
   576 ;;		_kpRead
   577 ;;		_lcdCommand
   578 ;;		_lcdData
   579 ;;		_lcdInit
   580 ;;		_lcdPosition
   581 ;;		_lcd_str
   582 ;;		_pwmFrequency
   583 ;;		_pwmInit
   584 ;;		_pwmSet1
   585 ;;		_setTemperature
   586 ;; This function is called by:
   587 ;;		Startup code after reset
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text0
   592  000646                     __ptext0:
   593                           	callstack 0
   594  000646                     _main:
   595                           	callstack 26
   596  000646                     
   597                           ;main.c: 17:     unsigned int tecla = 16;
   598  000646  0E00               	movlw	0
   599  000648  6E50               	movwf	(main@tecla+1)^0,c
   600  00064A  0E10               	movlw	16
   601  00064C  6E4F               	movwf	main@tecla^0,c
   602                           
   603                           ;main.c: 18:     unsigned int temperatura = 180, temperaturaMaxima, temperaturaMinima;
   604  00064E  0E00               	movlw	0
   605  000650  6E3B               	movwf	(main@temperatura+1)^0,c
   606  000652  0EB4               	movlw	180
   607  000654  6E3A               	movwf	main@temperatura^0,c
   608                           
   609                           ;main.c: 19:     char minutosCentena = 48, minutosDezena = 48, minutosUnidade = 48;
   610  000656  0E30               	movlw	48
   611  000658  6E42               	movwf	main@minutosCentena^0,c
   612  00065A  0E30               	movlw	48
   613  00065C  6E43               	movwf	main@minutosDezena^0,c
   614  00065E  0E30               	movlw	48
   615  000660  6E44               	movwf	main@minutosUnidade^0,c
   616                           
   617                           ;main.c: 21:     char str[6];;main.c: 22:     char tempoRelogio[6];;main.c: 23:     unsi
      +                          gned int tmpi, temperaturaLcd, tempoTotal = 0;
   618  000662  0E00               	movlw	0
   619  000664  6E48               	movwf	(main@tempoTotal+1)^0,c
   620  000666  0E00               	movlw	0
   621  000668  6E47               	movwf	main@tempoTotal^0,c
   622                           
   623                           ;main.c: 25:     TRISA = 0x07;
   624  00066A  0E07               	movlw	7
   625  00066C  6E92               	movwf	146,c	;volatile
   626                           
   627                           ;main.c: 26:     TRISB = 0x00;
   628  00066E  0E00               	movlw	0
   629  000670  6E93               	movwf	147,c	;volatile
   630                           
   631                           ;main.c: 27:     TRISC = 0x00;
   632  000672  0E00               	movlw	0
   633  000674  6E94               	movwf	148,c	;volatile
   634  000676                     
   635                           ;main.c: 29:     lcdInit();
   636  000676  EC80  F00A         	call	_lcdInit	;wreg free
   637  00067A                     
   638                           ;main.c: 30:     kpInit();
   639  00067A  EC59  F00C         	call	_kpInit	;wreg free
   640  00067E                     l2065:
   641                           
   642                           ;main.c: 35:         lcdPosition(0, 1);
   643  00067E  0E01               	movlw	1
   644  000680  6E09               	movwf	lcdPosition@coluna^0,c
   645  000682  0E00               	movlw	0
   646  000684  ECE2  F00B         	call	_lcdPosition
   647  000688                     
   648                           ;main.c: 36:         lcd_str("Vamos iniciar!");
   649  000688  0E01               	movlw	low STR_1
   650  00068A  6E09               	movwf	lcd_str@str^0,c
   651  00068C  0E06               	movlw	high STR_1
   652  00068E  6E0A               	movwf	(lcd_str@str+1)^0,c
   653  000690  ECBA  F00B         	call	_lcd_str	;wreg free
   654  000694                     
   655                           ;main.c: 37:         lcdPosition(1, 1);
   656  000694  0E01               	movlw	1
   657  000696  6E09               	movwf	lcdPosition@coluna^0,c
   658  000698  0E01               	movlw	1
   659  00069A  ECE2  F00B         	call	_lcdPosition
   660  00069E                     
   661                           ;main.c: 38:         lcd_str("Clique em (1)");
   662  00069E  0E10               	movlw	low STR_2
   663  0006A0  6E09               	movwf	lcd_str@str^0,c
   664  0006A2  0E06               	movlw	high STR_2
   665  0006A4  6E0A               	movwf	(lcd_str@str+1)^0,c
   666  0006A6  ECBA  F00B         	call	_lcd_str	;wreg free
   667  0006AA                     
   668                           ;main.c: 40:         kpDebounce();
   669  0006AA  ECF1  F007         	call	_kpDebounce	;wreg free
   670  0006AE                     
   671                           ;main.c: 41:         if (kpRead() != tecla) {
   672  0006AE  EC54  F00C         	call	_kpRead	;wreg free
   673  0006B2  504F               	movf	main@tecla^0,w,c
   674  0006B4  1801               	xorwf	?_kpRead^0,w,c
   675  0006B6  E109               	bnz	u1670
   676  0006B8  5050               	movf	(main@tecla+1)^0,w,c
   677  0006BA  1802               	xorwf	(?_kpRead+1)^0,w,c
   678  0006BC  B4D8               	btfsc	status,2,c
   679  0006BE  EF63  F003         	goto	u1671
   680  0006C2  EF65  F003         	goto	u1670
   681  0006C6                     u1671:
   682  0006C6  EF3F  F003         	goto	l2065
   683  0006CA                     u1670:
   684  0006CA                     
   685                           ;main.c: 42:             tecla = kpRead();
   686  0006CA  EC54  F00C         	call	_kpRead	;wreg free
   687  0006CE  C001  F04F         	movff	?_kpRead,main@tecla
   688  0006D2  C002  F050         	movff	?_kpRead+1,main@tecla+1
   689  0006D6                     
   690                           ;main.c: 45:             if (((tecla) & (1<<(3)))) {
   691  0006D6  A64F               	btfss	main@tecla^0,3,c
   692  0006D8  EF70  F003         	goto	u1681
   693  0006DC  EF72  F003         	goto	u1680
   694  0006E0                     u1681:
   695  0006E0  EF3F  F003         	goto	l2065
   696  0006E4                     u1680:
   697  0006E4                     
   698                           ;main.c: 46:                 lcdCommand(0x01);
   699  0006E4  0E01               	movlw	1
   700  0006E6  EC41  F00A         	call	_lcdCommand
   701                           
   702                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   703  0006EA  EF0C  F004         	goto	l2133
   704  0006EE                     l2083:
   705                           
   706                           ;main.c: 52:                     lcdPosition(0, 0);
   707  0006EE  0E00               	movlw	0
   708  0006F0  6E09               	movwf	lcdPosition@coluna^0,c
   709  0006F2  0E00               	movlw	0
   710  0006F4  ECE2  F00B         	call	_lcdPosition
   711  0006F8                     
   712                           ;main.c: 53:                     lcd_str("Temperatura:");
   713  0006F8  0E2B               	movlw	low STR_3
   714  0006FA  6E09               	movwf	lcd_str@str^0,c
   715  0006FC  0E06               	movlw	high STR_3
   716  0006FE  6E0A               	movwf	(lcd_str@str+1)^0,c
   717  000700  ECBA  F00B         	call	_lcd_str	;wreg free
   718  000704                     
   719                           ;main.c: 54:                     temperatura = setTemperature();
   720  000704  EC00  F00A         	call	_setTemperature	;wreg free
   721  000708  C019  F03A         	movff	?_setTemperature,main@temperatura
   722  00070C  C01A  F03B         	movff	?_setTemperature+1,main@temperatura+1
   723  000710                     
   724                           ;main.c: 58:                     lcdPosition(1, 0);
   725  000710  0E00               	movlw	0
   726  000712  6E09               	movwf	lcdPosition@coluna^0,c
   727  000714  0E01               	movlw	1
   728  000716  ECE2  F00B         	call	_lcdPosition
   729  00071A                     
   730                           ;main.c: 59:                     lcd_str("Tempo:");
   731  00071A  0E38               	movlw	low STR_4
   732  00071C  6E09               	movwf	lcd_str@str^0,c
   733  00071E  0E06               	movlw	high STR_4
   734  000720  6E0A               	movwf	(lcd_str@str+1)^0,c
   735  000722  ECBA  F00B         	call	_lcd_str	;wreg free
   736  000726                     
   737                           ;main.c: 60:                     lcdPosition(1, 6);
   738  000726  0E06               	movlw	6
   739  000728  6E09               	movwf	lcdPosition@coluna^0,c
   740  00072A  0E01               	movlw	1
   741  00072C  ECE2  F00B         	call	_lcdPosition
   742  000730                     
   743                           ;main.c: 61:                     lcdData((char)minutosCentena);
   744  000730  5042               	movf	main@minutosCentena^0,w,c
   745  000732  EC90  F00B         	call	_lcdData
   746  000736                     
   747                           ;main.c: 62:                     lcdData((char)minutosDezena);
   748  000736  5043               	movf	main@minutosDezena^0,w,c
   749  000738  EC90  F00B         	call	_lcdData
   750  00073C                     
   751                           ;main.c: 63:                     lcdData((char)minutosUnidade);
   752  00073C  5044               	movf	main@minutosUnidade^0,w,c
   753  00073E  EC90  F00B         	call	_lcdData
   754  000742                     
   755                           ;main.c: 64:                     lcd_str("min");
   756  000742  0E3F               	movlw	low STR_5
   757  000744  6E09               	movwf	lcd_str@str^0,c
   758  000746  0E06               	movlw	high STR_5
   759  000748  6E0A               	movwf	(lcd_str@str+1)^0,c
   760  00074A  ECBA  F00B         	call	_lcd_str	;wreg free
   761  00074E                     
   762                           ;main.c: 66:                     kpDebounce();
   763  00074E  ECF1  F007         	call	_kpDebounce	;wreg free
   764  000752                     
   765                           ;main.c: 67:                     if (kpRead() != tecla) {
   766  000752  EC54  F00C         	call	_kpRead	;wreg free
   767  000756  504F               	movf	main@tecla^0,w,c
   768  000758  1801               	xorwf	?_kpRead^0,w,c
   769  00075A  E109               	bnz	u1690
   770  00075C  5050               	movf	(main@tecla+1)^0,w,c
   771  00075E  1802               	xorwf	(?_kpRead+1)^0,w,c
   772  000760  B4D8               	btfsc	status,2,c
   773  000762  EFB5  F003         	goto	u1691
   774  000766  EFB7  F003         	goto	u1690
   775  00076A                     u1691:
   776  00076A  EF0C  F004         	goto	l2133
   777  00076E                     u1690:
   778  00076E                     
   779                           ;main.c: 68:                         tecla = kpRead();
   780  00076E  EC54  F00C         	call	_kpRead	;wreg free
   781  000772  C001  F04F         	movff	?_kpRead,main@tecla
   782  000776  C002  F050         	movff	?_kpRead+1,main@tecla+1
   783  00077A                     
   784                           ;main.c: 69:                         if (((tecla) & (1<<(1)))) {
   785  00077A  A24F               	btfss	main@tecla^0,1,c
   786  00077C  EFC2  F003         	goto	u1701
   787  000780  EFC4  F003         	goto	u1700
   788  000784                     u1701:
   789  000784  EFD8  F003         	goto	l291
   790  000788                     u1700:
   791  000788                     
   792                           ;main.c: 70:                             if (minutosCentena == 57) {
   793  000788  0E39               	movlw	57
   794  00078A  1842               	xorwf	main@minutosCentena^0,w,c
   795  00078C  A4D8               	btfss	status,2,c
   796  00078E  EFCB  F003         	goto	u1711
   797  000792  EFCD  F003         	goto	u1710
   798  000796                     u1711:
   799  000796  EFD1  F003         	goto	l2115
   800  00079A                     u1710:
   801  00079A                     
   802                           ;main.c: 71:                                 minutosCentena = 48;
   803  00079A  0E30               	movlw	48
   804  00079C  6E42               	movwf	main@minutosCentena^0,c
   805                           
   806                           ;main.c: 72:                             } else {
   807  00079E  EF0C  F004         	goto	l2133
   808  0007A2                     l2115:
   809                           
   810                           ;main.c: 73:                                 minutosCentena += 1;
   811  0007A2  2A42               	incf	main@minutosCentena^0,f,c
   812  0007A4                     
   813                           ;main.c: 74:                                 tempoTotal += 100;
   814  0007A4  0E64               	movlw	100
   815  0007A6  2647               	addwf	main@tempoTotal^0,f,c
   816  0007A8  0E00               	movlw	0
   817  0007AA  2248               	addwfc	(main@tempoTotal+1)^0,f,c
   818  0007AC  EF0C  F004         	goto	l2133
   819  0007B0                     l291:
   820  0007B0  AA4F               	btfss	main@tecla^0,5,c
   821  0007B2  EFDD  F003         	goto	u1721
   822  0007B6  EFDF  F003         	goto	u1720
   823  0007BA                     u1721:
   824  0007BA  EFF3  F003         	goto	l295
   825  0007BE                     u1720:
   826  0007BE                     
   827                           ;main.c: 77:                             if (minutosDezena == 57) {
   828  0007BE  0E39               	movlw	57
   829  0007C0  1843               	xorwf	main@minutosDezena^0,w,c
   830  0007C2  A4D8               	btfss	status,2,c
   831  0007C4  EFE6  F003         	goto	u1731
   832  0007C8  EFE8  F003         	goto	u1730
   833  0007CC                     u1731:
   834  0007CC  EFEC  F003         	goto	l2123
   835  0007D0                     u1730:
   836  0007D0                     
   837                           ;main.c: 78:                                 minutosDezena = 48;
   838  0007D0  0E30               	movlw	48
   839  0007D2  6E43               	movwf	main@minutosDezena^0,c
   840                           
   841                           ;main.c: 79:                             } else {
   842  0007D4  EF0C  F004         	goto	l2133
   843  0007D8                     l2123:
   844                           
   845                           ;main.c: 80:                                 minutosDezena += 1;
   846  0007D8  2A43               	incf	main@minutosDezena^0,f,c
   847  0007DA                     
   848                           ;main.c: 81:                                 tempoTotal += 10;
   849  0007DA  0E0A               	movlw	10
   850  0007DC  2647               	addwf	main@tempoTotal^0,f,c
   851  0007DE  0E00               	movlw	0
   852  0007E0  2248               	addwfc	(main@tempoTotal+1)^0,f,c
   853  0007E2  EF0C  F004         	goto	l2133
   854  0007E6                     l295:
   855  0007E6  A250               	btfss	(main@tecla+1)^0,1,c
   856  0007E8  EFF8  F003         	goto	u1741
   857  0007EC  EFFA  F003         	goto	u1740
   858  0007F0                     u1741:
   859  0007F0  EF0C  F004         	goto	l290
   860  0007F4                     u1740:
   861  0007F4                     
   862                           ;main.c: 84:                             if (minutosUnidade == 57) {
   863  0007F4  0E39               	movlw	57
   864  0007F6  1844               	xorwf	main@minutosUnidade^0,w,c
   865  0007F8  A4D8               	btfss	status,2,c
   866  0007FA  EF01  F004         	goto	u1751
   867  0007FE  EF03  F004         	goto	u1750
   868  000802                     u1751:
   869  000802  EF07  F004         	goto	l2131
   870  000806                     u1750:
   871  000806                     
   872                           ;main.c: 85:                                 minutosUnidade = 48;
   873  000806  0E30               	movlw	48
   874  000808  6E44               	movwf	main@minutosUnidade^0,c
   875                           
   876                           ;main.c: 86:                             } else {
   877  00080A  EF0C  F004         	goto	l2133
   878  00080E                     l2131:
   879                           
   880                           ;main.c: 87:                                 minutosUnidade += 1;
   881  00080E  2A44               	incf	main@minutosUnidade^0,f,c
   882                           
   883                           ;main.c: 88:                                 tempoTotal += 1;
   884  000810  4A47               	infsnz	main@tempoTotal^0,f,c
   885  000812  2A48               	incf	(main@tempoTotal+1)^0,f,c
   886  000814  EF0C  F004         	goto	l2133
   887  000818                     l290:
   888  000818                     l2133:
   889                           
   890                           ;main.c: 49:                 while (!((tecla) & (1<<(0)))) {
   891  000818  A04F               	btfss	main@tecla^0,0,c
   892  00081A  EF11  F004         	goto	u1761
   893  00081E  EF13  F004         	goto	u1760
   894  000822                     u1761:
   895  000822  EF77  F003         	goto	l2083
   896  000826                     u1760:
   897  000826                     
   898                           ;main.c: 96:                 if (((tecla) & (1<<(0)))) {
   899  000826  A04F               	btfss	main@tecla^0,0,c
   900  000828  EF18  F004         	goto	u1771
   901  00082C  EF1A  F004         	goto	u1770
   902  000830                     u1771:
   903  000830  EFEC  F004         	goto	l2195
   904  000834                     u1770:
   905  000834                     
   906                           ;main.c: 97:                     lcdCommand(0x01);
   907  000834  0E01               	movlw	1
   908  000836  EC41  F00A         	call	_lcdCommand
   909  00083A                     
   910                           ;main.c: 100:                     temperaturaMaxima = temperatura + 10;
   911  00083A  0E0A               	movlw	10
   912  00083C  243A               	addwf	main@temperatura^0,w,c
   913  00083E  6E2E               	movwf	main@temperaturaMaxima^0,c
   914  000840  0E00               	movlw	0
   915  000842  203B               	addwfc	(main@temperatura+1)^0,w,c
   916  000844  6E2F               	movwf	(main@temperaturaMaxima+1)^0,c
   917  000846                     
   918                           ;main.c: 101:                     temperaturaMinima = temperatura - 10;
   919  000846  0EF6               	movlw	246
   920  000848  243A               	addwf	main@temperatura^0,w,c
   921  00084A  6E30               	movwf	main@temperaturaMinima^0,c
   922  00084C  0EFF               	movlw	255
   923  00084E  203B               	addwfc	(main@temperatura+1)^0,w,c
   924  000850  6E31               	movwf	(main@temperaturaMinima+1)^0,c
   925                           
   926                           ;main.c: 104:                     pwmInit();
   927  000852  EC4A  F00C         	call	_pwmInit	;wreg free
   928  000856                     
   929                           ;main.c: 105:                     pwmSet1(30);
   930  000856  0E1E               	movlw	30
   931  000858  ECF6  F00A         	call	_pwmSet1
   932  00085C                     
   933                           ;main.c: 108:                     PORTB = 0xFF;
   934  00085C  6881               	setf	129,c	;volatile
   935                           
   936                           ;main.c: 111:                     while (tempoTotal > 0) {
   937  00085E  EFE3  F004         	goto	l2193
   938  000862                     l2145:
   939                           
   940                           ;main.c: 113:                         lcdPosition(0, 2);
   941  000862  0E02               	movlw	2
   942  000864  6E09               	movwf	lcdPosition@coluna^0,c
   943  000866  0E00               	movlw	0
   944  000868  ECE2  F00B         	call	_lcdPosition
   945  00086C                     
   946                           ;main.c: 114:                         lcd_str("Funcionando!");
   947  00086C  0E1E               	movlw	low STR_6
   948  00086E  6E09               	movwf	lcd_str@str^0,c
   949  000870  0E06               	movlw	high STR_6
   950  000872  6E0A               	movwf	(lcd_str@str+1)^0,c
   951  000874  ECBA  F00B         	call	_lcd_str	;wreg free
   952  000878                     
   953                           ;main.c: 117:                         lcdPosition(1, 9);
   954  000878  0E09               	movlw	9
   955  00087A  6E09               	movwf	lcdPosition@coluna^0,c
   956  00087C  0E01               	movlw	1
   957  00087E  ECE2  F00B         	call	_lcdPosition
   958  000882                     
   959                           ;main.c: 118:                         itoa(tempoTotal, tempoRelogio);
   960  000882  C047  F015         	movff	main@tempoTotal,itoa@val
   961  000886  C048  F016         	movff	main@tempoTotal+1,itoa@val+1
   962  00088A  0E28               	movlw	low main@tempoRelogio
   963  00088C  6E17               	movwf	itoa@str^0,c
   964  00088E  0E00               	movlw	high main@tempoRelogio
   965  000890  6E18               	movwf	(itoa@str+1)^0,c
   966  000892  EC34  F009         	call	_itoa	;wreg free
   967  000896                     
   968                           ;main.c: 119:                         lcdData(tempoRelogio[2]);
   969  000896  502A               	movf	(main@tempoRelogio+2)^0,w,c
   970  000898  EC90  F00B         	call	_lcdData
   971  00089C                     
   972                           ;main.c: 120:                         lcdData(tempoRelogio[3]);
   973  00089C  502B               	movf	(main@tempoRelogio+3)^0,w,c
   974  00089E  EC90  F00B         	call	_lcdData
   975  0008A2                     
   976                           ;main.c: 121:                         lcdData(tempoRelogio[4]);
   977  0008A2  502C               	movf	(main@tempoRelogio+4)^0,w,c
   978  0008A4  EC90  F00B         	call	_lcdData
   979  0008A8                     
   980                           ;main.c: 122:                         lcd_str("min");
   981  0008A8  0E3F               	movlw	low STR_5
   982  0008AA  6E09               	movwf	lcd_str@str^0,c
   983  0008AC  0E06               	movlw	high STR_5
   984  0008AE  6E0A               	movwf	(lcd_str@str+1)^0,c
   985  0008B0  ECBA  F00B         	call	_lcd_str	;wreg free
   986  0008B4                     
   987                           ;main.c: 123:                         tempoTotal--;
   988  0008B4  0647               	decf	main@tempoTotal^0,f,c
   989  0008B6  A0D8               	btfss	status,0,c
   990  0008B8  0648               	decf	(main@tempoTotal+1)^0,f,c
   991  0008BA                     
   992                           ;main.c: 126:                         tmpi = (adc_amostra(1)*10) / 2;
   993  0008BA  0E01               	movlw	1
   994  0008BC  ECB8  F009         	call	_adc_amostra
   995  0008C0  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   996  0008C4  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   997  0008C8  0E00               	movlw	0
   998  0008CA  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   999  0008CC  0E0A               	movlw	10
  1000  0008CE  6E0A               	movwf	___wmul@multiplicand^0,c
  1001  0008D0  ECFF  F00B         	call	___wmul	;wreg free
  1002  0008D4  90D8               	bcf	status,0,c
  1003  0008D6  3009               	rrcf	(?___wmul+1)^0,w,c
  1004  0008D8  6E26               	movwf	??_main^0,c
  1005  0008DA  3008               	rrcf	?___wmul^0,w,c
  1006  0008DC  6E32               	movwf	main@tmpi^0,c
  1007  0008DE  C026  F033         	movff	??_main,main@tmpi+1
  1008  0008E2                     
  1009                           ;main.c: 127:                         temperaturaLcd = ((tmpi - 280) * 222 / 46) + 280;
  1010  0008E2  0EE8               	movlw	232
  1011  0008E4  2432               	addwf	main@tmpi^0,w,c
  1012  0008E6  6E08               	movwf	___wmul@multiplier^0,c
  1013  0008E8  0EFE               	movlw	254
  1014  0008EA  2033               	addwfc	(main@tmpi+1)^0,w,c
  1015  0008EC  6E09               	movwf	(___wmul@multiplier+1)^0,c
  1016  0008EE  0E00               	movlw	0
  1017  0008F0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1018  0008F2  0EDE               	movlw	222
  1019  0008F4  6E0A               	movwf	___wmul@multiplicand^0,c
  1020  0008F6  ECFF  F00B         	call	___wmul	;wreg free
  1021  0008FA  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1022  0008FE  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1023  000902  0E00               	movlw	0
  1024  000904  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1025  000906  0E2E               	movlw	46
  1026  000908  6E10               	movwf	___lwdiv@divisor^0,c
  1027  00090A  ECBC  F00A         	call	___lwdiv	;wreg free
  1028  00090E  0E18               	movlw	24
  1029  000910  240E               	addwf	?___lwdiv^0,w,c
  1030  000912  6E45               	movwf	main@temperaturaLcd^0,c
  1031  000914  0E01               	movlw	1
  1032  000916  200F               	addwfc	(?___lwdiv+1)^0,w,c
  1033  000918  6E46               	movwf	(main@temperaturaLcd+1)^0,c
  1034  00091A                     
  1035                           ;main.c: 130:                         lcdPosition(1, 1);
  1036  00091A  0E01               	movlw	1
  1037  00091C  6E09               	movwf	lcdPosition@coluna^0,c
  1038  00091E  0E01               	movlw	1
  1039  000920  ECE2  F00B         	call	_lcdPosition
  1040  000924                     
  1041                           ;main.c: 131:                         itoa(temperaturaLcd, str);
  1042  000924  C045  F015         	movff	main@temperaturaLcd,itoa@val
  1043  000928  C046  F016         	movff	main@temperaturaLcd+1,itoa@val+1
  1044  00092C  0E34               	movlw	low main@str
  1045  00092E  6E17               	movwf	itoa@str^0,c
  1046  000930  0E00               	movlw	high main@str
  1047  000932  6E18               	movwf	(itoa@str+1)^0,c
  1048  000934  EC34  F009         	call	_itoa	;wreg free
  1049  000938                     
  1050                           ;main.c: 132:                         lcdData(str[1]);
  1051  000938  5035               	movf	(main@str+1)^0,w,c
  1052  00093A  EC90  F00B         	call	_lcdData
  1053  00093E                     
  1054                           ;main.c: 133:                         lcdData(str[2]);
  1055  00093E  5036               	movf	(main@str+2)^0,w,c
  1056  000940  EC90  F00B         	call	_lcdData
  1057  000944                     
  1058                           ;main.c: 134:                         lcdData(str[3]);
  1059  000944  5037               	movf	(main@str+3)^0,w,c
  1060  000946  EC90  F00B         	call	_lcdData
  1061  00094A                     
  1062                           ;main.c: 135:                         lcdData(',');
  1063  00094A  0E2C               	movlw	44
  1064  00094C  EC90  F00B         	call	_lcdData
  1065  000950                     
  1066                           ;main.c: 136:                         lcdData(str[4]);
  1067  000950  5038               	movf	(main@str+4)^0,w,c
  1068  000952  EC90  F00B         	call	_lcdData
  1069  000956                     
  1070                           ;main.c: 137:                         lcd_str("C");
  1071  000956  0E43               	movlw	low STR_8
  1072  000958  6E09               	movwf	lcd_str@str^0,c
  1073  00095A  0E06               	movlw	high STR_8
  1074  00095C  6E0A               	movwf	(lcd_str@str+1)^0,c
  1075  00095E  ECBA  F00B         	call	_lcd_str	;wreg free
  1076  000962                     
  1077                           ;main.c: 139:                         atraso_ms(1000);
  1078  000962  0E03               	movlw	3
  1079  000964  6E02               	movwf	(atraso_ms@t+1)^0,c
  1080  000966  0EE8               	movlw	232
  1081  000968  6E01               	movwf	atraso_ms@t^0,c
  1082  00096A  EC5E  F00B         	call	_atraso_ms	;wreg free
  1083  00096E                     
  1084                           ;main.c: 142:                         if (temperaturaLcd > temperaturaMaxima * 10) {
  1085  00096E  C02E  F008         	movff	main@temperaturaMaxima,___wmul@multiplier
  1086  000972  C02F  F009         	movff	main@temperaturaMaxima+1,___wmul@multiplier+1
  1087  000976  0E00               	movlw	0
  1088  000978  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1089  00097A  0E0A               	movlw	10
  1090  00097C  6E0A               	movwf	___wmul@multiplicand^0,c
  1091  00097E  ECFF  F00B         	call	___wmul	;wreg free
  1092  000982  5045               	movf	main@temperaturaLcd^0,w,c
  1093  000984  5C08               	subwf	?___wmul^0,w,c
  1094  000986  5046               	movf	(main@temperaturaLcd+1)^0,w,c
  1095  000988  5809               	subwfb	(?___wmul+1)^0,w,c
  1096  00098A  B0D8               	btfsc	status,0,c
  1097  00098C  EFCA  F004         	goto	u1781
  1098  000990  EFCC  F004         	goto	u1780
  1099  000994                     u1781:
  1100  000994  EFCD  F004         	goto	l2189
  1101  000998                     u1780:
  1102  000998                     
  1103                           ;main.c: 143:                             PORTCbits.RC5 = 0;
  1104  000998  9A82               	bcf	130,5,c	;volatile
  1105  00099A                     l2189:
  1106                           
  1107                           ;main.c: 145:                         if (temperaturaLcd < temperaturaMinima * 10) {
  1108  00099A  C030  F008         	movff	main@temperaturaMinima,___wmul@multiplier
  1109  00099E  C031  F009         	movff	main@temperaturaMinima+1,___wmul@multiplier+1
  1110  0009A2  0E00               	movlw	0
  1111  0009A4  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1112  0009A6  0E0A               	movlw	10
  1113  0009A8  6E0A               	movwf	___wmul@multiplicand^0,c
  1114  0009AA  ECFF  F00B         	call	___wmul	;wreg free
  1115  0009AE  5008               	movf	?___wmul^0,w,c
  1116  0009B0  5C45               	subwf	main@temperaturaLcd^0,w,c
  1117  0009B2  5009               	movf	(?___wmul+1)^0,w,c
  1118  0009B4  5846               	subwfb	(main@temperaturaLcd+1)^0,w,c
  1119  0009B6  B0D8               	btfsc	status,0,c
  1120  0009B8  EFE0  F004         	goto	u1791
  1121  0009BC  EFE2  F004         	goto	u1790
  1122  0009C0                     u1791:
  1123  0009C0  EFE3  F004         	goto	l2193
  1124  0009C4                     u1790:
  1125  0009C4                     
  1126                           ;main.c: 146:                             PORTCbits.RC5 = 1;
  1127  0009C4  8A82               	bsf	130,5,c	;volatile
  1128  0009C6                     l2193:
  1129                           
  1130                           ;main.c: 111:                     while (tempoTotal > 0) {
  1131  0009C6  5047               	movf	main@tempoTotal^0,w,c
  1132  0009C8  1048               	iorwf	(main@tempoTotal+1)^0,w,c
  1133  0009CA  A4D8               	btfss	status,2,c
  1134  0009CC  EFEA  F004         	goto	u1801
  1135  0009D0  EFEC  F004         	goto	u1800
  1136  0009D4                     u1801:
  1137  0009D4  EF31  F004         	goto	l2145
  1138  0009D8                     u1800:
  1139  0009D8                     l2195:
  1140                           
  1141                           ;main.c: 151:                 lcdCommand(0x01);
  1142  0009D8  0E01               	movlw	1
  1143  0009DA  EC41  F00A         	call	_lcdCommand
  1144  0009DE                     
  1145                           ;main.c: 152:                 PORTB = 0x00;
  1146  0009DE  0E00               	movlw	0
  1147  0009E0  6E81               	movwf	129,c	;volatile
  1148  0009E2                     
  1149                           ;main.c: 153:                 PORTCbits.RC5 = 0;
  1150  0009E2  9A82               	bcf	130,5,c	;volatile
  1151  0009E4                     
  1152                           ;main.c: 154:                 TRISCbits.TRISC0 = 0;
  1153  0009E4  9094               	bcf	148,0,c	;volatile
  1154  0009E6                     
  1155                           ;main.c: 155:                 pwmSet1(0);
  1156  0009E6  0E00               	movlw	0
  1157  0009E8  ECF6  F00A         	call	_pwmSet1
  1158  0009EC                     
  1159                           ;main.c: 158:                 pwmFrequency(100);
  1160  0009EC  0E00               	movlw	0
  1161  0009EE  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  1162  0009F0  0E64               	movlw	100
  1163  0009F2  6E0F               	movwf	pwmFrequency@freq^0,c
  1164  0009F4  EC12  F00C         	call	_pwmFrequency	;wreg free
  1165  0009F8                     
  1166                           ;main.c: 159:                 for (int i = 0; i < 2; i++) {
  1167  0009F8  0E00               	movlw	0
  1168  0009FA  6E3D               	movwf	(main@i+1)^0,c
  1169  0009FC  0E00               	movlw	0
  1170  0009FE  6E3C               	movwf	main@i^0,c
  1171  000A00                     l2209:
  1172  000A00  BE3D               	btfsc	(main@i+1)^0,7,c
  1173  000A02  EF0C  F005         	goto	u1811
  1174  000A06  503D               	movf	(main@i+1)^0,w,c
  1175  000A08  E109               	bnz	u1810
  1176  000A0A  0E02               	movlw	2
  1177  000A0C  5C3C               	subwf	main@i^0,w,c
  1178  000A0E  A0D8               	btfss	status,0,c
  1179  000A10  EF0C  F005         	goto	u1811
  1180  000A14  EF0E  F005         	goto	u1810
  1181  000A18                     u1811:
  1182  000A18  EF10  F005         	goto	l2213
  1183  000A1C                     u1810:
  1184  000A1C  EF2F  F005         	goto	l2229
  1185  000A20                     l2213:
  1186                           
  1187                           ;main.c: 160:                     for (int j = 1; j > 0; j = j * 2) {
  1188  000A20  0E00               	movlw	0
  1189  000A22  6E4A               	movwf	(main@j+1)^0,c
  1190  000A24  0E01               	movlw	1
  1191  000A26  6E49               	movwf	main@j^0,c
  1192  000A28  BE4A               	btfsc	(main@j+1)^0,7,c
  1193  000A2A  EF21  F005         	goto	u1820
  1194  000A2E  504A               	movf	(main@j+1)^0,w,c
  1195  000A30  E106               	bnz	u1821
  1196  000A32  0449               	decf	main@j^0,w,c
  1197  000A34  B0D8               	btfsc	status,0,c
  1198  000A36  EF1F  F005         	goto	u1821
  1199  000A3A  EF21  F005         	goto	u1820
  1200  000A3E                     u1821:
  1201  000A3E  EF23  F005         	goto	l2219
  1202  000A42                     u1820:
  1203  000A42  EF2A  F005         	goto	l2225
  1204  000A46                     l2219:
  1205                           
  1206                           ;main.c: 161:                         ((TRISC) |= (1<<(1)));
  1207  000A46  8294               	bsf	148,1,c	;volatile
  1208  000A48                     
  1209                           ;main.c: 162:                         atraso_ms(100);
  1210  000A48  0E00               	movlw	0
  1211  000A4A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1212  000A4C  0E64               	movlw	100
  1213  000A4E  6E01               	movwf	atraso_ms@t^0,c
  1214  000A50  EC5E  F00B         	call	_atraso_ms	;wreg free
  1215  000A54                     l2225:
  1216                           
  1217                           ;main.c: 165:                     ((TRISC) &= ~(1<<(1)));
  1218  000A54  9294               	bcf	148,1,c	;volatile
  1219                           
  1220                           ;main.c: 166:                 }
  1221  000A56  4A3C               	infsnz	main@i^0,f,c
  1222  000A58  2A3D               	incf	(main@i+1)^0,f,c
  1223  000A5A  EF00  F005         	goto	l2209
  1224  000A5E                     l2229:
  1225                           
  1226                           ;main.c: 167:                 atraso_ms(1000);
  1227  000A5E  0E03               	movlw	3
  1228  000A60  6E02               	movwf	(atraso_ms@t+1)^0,c
  1229  000A62  0EE8               	movlw	232
  1230  000A64  6E01               	movwf	atraso_ms@t^0,c
  1231  000A66  EC5E  F00B         	call	_atraso_ms	;wreg free
  1232  000A6A                     
  1233                           ;main.c: 168:                 for (int i = 0; i < 2; i++) {
  1234  000A6A  0E00               	movlw	0
  1235  000A6C  6E3F               	movwf	(main@i_436+1)^0,c
  1236  000A6E  0E00               	movlw	0
  1237  000A70  6E3E               	movwf	main@i_436^0,c
  1238  000A72                     l2233:
  1239  000A72  BE3F               	btfsc	(main@i_436+1)^0,7,c
  1240  000A74  EF45  F005         	goto	u1831
  1241  000A78  503F               	movf	(main@i_436+1)^0,w,c
  1242  000A7A  E109               	bnz	u1830
  1243  000A7C  0E02               	movlw	2
  1244  000A7E  5C3E               	subwf	main@i_436^0,w,c
  1245  000A80  A0D8               	btfss	status,0,c
  1246  000A82  EF45  F005         	goto	u1831
  1247  000A86  EF47  F005         	goto	u1830
  1248  000A8A                     u1831:
  1249  000A8A  EF49  F005         	goto	l2237
  1250  000A8E                     u1830:
  1251  000A8E  EF68  F005         	goto	l2253
  1252  000A92                     l2237:
  1253                           
  1254                           ;main.c: 169:                     for (int j = 1; j > 0; j = j * 2) {
  1255  000A92  0E00               	movlw	0
  1256  000A94  6E4C               	movwf	(main@j_437+1)^0,c
  1257  000A96  0E01               	movlw	1
  1258  000A98  6E4B               	movwf	main@j_437^0,c
  1259  000A9A  BE4C               	btfsc	(main@j_437+1)^0,7,c
  1260  000A9C  EF5A  F005         	goto	u1840
  1261  000AA0  504C               	movf	(main@j_437+1)^0,w,c
  1262  000AA2  E106               	bnz	u1841
  1263  000AA4  044B               	decf	main@j_437^0,w,c
  1264  000AA6  B0D8               	btfsc	status,0,c
  1265  000AA8  EF58  F005         	goto	u1841
  1266  000AAC  EF5A  F005         	goto	u1840
  1267  000AB0                     u1841:
  1268  000AB0  EF5C  F005         	goto	l2243
  1269  000AB4                     u1840:
  1270  000AB4  EF63  F005         	goto	l2249
  1271  000AB8                     l2243:
  1272                           
  1273                           ;main.c: 170:                         ((TRISC) |= (1<<(1)));
  1274  000AB8  8294               	bsf	148,1,c	;volatile
  1275  000ABA                     
  1276                           ;main.c: 171:                         atraso_ms(100);
  1277  000ABA  0E00               	movlw	0
  1278  000ABC  6E02               	movwf	(atraso_ms@t+1)^0,c
  1279  000ABE  0E64               	movlw	100
  1280  000AC0  6E01               	movwf	atraso_ms@t^0,c
  1281  000AC2  EC5E  F00B         	call	_atraso_ms	;wreg free
  1282  000AC6                     l2249:
  1283                           
  1284                           ;main.c: 174:                     ((TRISC) &= ~(1<<(1)));
  1285  000AC6  9294               	bcf	148,1,c	;volatile
  1286                           
  1287                           ;main.c: 175:                 }
  1288  000AC8  4A3E               	infsnz	main@i_436^0,f,c
  1289  000ACA  2A3F               	incf	(main@i_436+1)^0,f,c
  1290  000ACC  EF39  F005         	goto	l2233
  1291  000AD0                     l2253:
  1292                           
  1293                           ;main.c: 176:                 atraso_ms(1000);
  1294  000AD0  0E03               	movlw	3
  1295  000AD2  6E02               	movwf	(atraso_ms@t+1)^0,c
  1296  000AD4  0EE8               	movlw	232
  1297  000AD6  6E01               	movwf	atraso_ms@t^0,c
  1298  000AD8  EC5E  F00B         	call	_atraso_ms	;wreg free
  1299  000ADC                     
  1300                           ;main.c: 177:                 for (int i = 0; i < 2; i++) {
  1301  000ADC  0E00               	movlw	0
  1302  000ADE  6E41               	movwf	(main@i_438+1)^0,c
  1303  000AE0  0E00               	movlw	0
  1304  000AE2  6E40               	movwf	main@i_438^0,c
  1305  000AE4                     l2257:
  1306  000AE4  BE41               	btfsc	(main@i_438+1)^0,7,c
  1307  000AE6  EF7E  F005         	goto	u1851
  1308  000AEA  5041               	movf	(main@i_438+1)^0,w,c
  1309  000AEC  E109               	bnz	u1850
  1310  000AEE  0E02               	movlw	2
  1311  000AF0  5C40               	subwf	main@i_438^0,w,c
  1312  000AF2  A0D8               	btfss	status,0,c
  1313  000AF4  EF7E  F005         	goto	u1851
  1314  000AF8  EF80  F005         	goto	u1850
  1315  000AFC                     u1851:
  1316  000AFC  EF82  F005         	goto	l2261
  1317  000B00                     u1850:
  1318  000B00  EF3F  F003         	goto	l2065
  1319  000B04                     l2261:
  1320                           
  1321                           ;main.c: 178:                     for (int j = 1; j > 0; j = j * 2) {
  1322  000B04  0E00               	movlw	0
  1323  000B06  6E4E               	movwf	(main@j_439+1)^0,c
  1324  000B08  0E01               	movlw	1
  1325  000B0A  6E4D               	movwf	main@j_439^0,c
  1326  000B0C  BE4E               	btfsc	(main@j_439+1)^0,7,c
  1327  000B0E  EF93  F005         	goto	u1860
  1328  000B12  504E               	movf	(main@j_439+1)^0,w,c
  1329  000B14  E106               	bnz	u1861
  1330  000B16  044D               	decf	main@j_439^0,w,c
  1331  000B18  B0D8               	btfsc	status,0,c
  1332  000B1A  EF91  F005         	goto	u1861
  1333  000B1E  EF93  F005         	goto	u1860
  1334  000B22                     u1861:
  1335  000B22  EF95  F005         	goto	l2267
  1336  000B26                     u1860:
  1337  000B26  EF9C  F005         	goto	l2273
  1338  000B2A                     l2267:
  1339                           
  1340                           ;main.c: 179:                         ((TRISC) |= (1<<(1)));
  1341  000B2A  8294               	bsf	148,1,c	;volatile
  1342  000B2C                     
  1343                           ;main.c: 180:                         atraso_ms(100);
  1344  000B2C  0E00               	movlw	0
  1345  000B2E  6E02               	movwf	(atraso_ms@t+1)^0,c
  1346  000B30  0E64               	movlw	100
  1347  000B32  6E01               	movwf	atraso_ms@t^0,c
  1348  000B34  EC5E  F00B         	call	_atraso_ms	;wreg free
  1349  000B38                     l2273:
  1350                           
  1351                           ;main.c: 183:                     ((TRISC) &= ~(1<<(1)));
  1352  000B38  9294               	bcf	148,1,c	;volatile
  1353                           
  1354                           ;main.c: 184:                 }
  1355  000B3A  4A40               	infsnz	main@i_438^0,f,c
  1356  000B3C  2A41               	incf	(main@i_438+1)^0,f,c
  1357  000B3E  EF72  F005         	goto	l2257
  1358  000B42  EF00  F000         	goto	start
  1359  000B46                     __end_of_main:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _setTemperature *****************
  1363 ;; Defined at:
  1364 ;;		line 7 in file "temperaturaForno.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  str             6   28[COMRAM] unsigned char [6]
  1369 ;;  temperatura     2   35[COMRAM] int 
  1370 ;;  i               2    0        int 
  1371 ;;  tmp             1   34[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  2   24[COMRAM] int 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1381 ;;      Params:         2       0       0       0       0       0       0
  1382 ;;      Locals:         9       0       0       0       0       0       0
  1383 ;;      Temps:          2       0       0       0       0       0       0
  1384 ;;      Totals:        13       0       0       0       0       0       0
  1385 ;;Total ram usage:       13 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 4
  1388 ;; This function calls:
  1389 ;;		___lwdiv
  1390 ;;		___wmul
  1391 ;;		_adc_amostra
  1392 ;;		_itoa
  1393 ;;		_lcdData
  1394 ;;		_lcdPosition
  1395 ;; This function is called by:
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text1
  1401  001400                     __ptext1:
  1402                           	callstack 0
  1403  001400                     _setTemperature:
  1404                           	callstack 26
  1405  001400                     
  1406                           ;temperaturaForno.c: 8:     char str[6];;temperaturaForno.c: 9:     unsigned char tmp;;t
      +                          emperaturaForno.c: 10:     int i, temperatura;;temperaturaForno.c: 12:     tmp = (adc_am
      +                          ostra(0)*10) / 204;
  1407  001400  0E00               	movlw	0
  1408  001402  ECB8  F009         	call	_adc_amostra
  1409  001406  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
  1410  00140A  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
  1411  00140E  0E00               	movlw	0
  1412  001410  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1413  001412  0E0A               	movlw	10
  1414  001414  6E0A               	movwf	___wmul@multiplicand^0,c
  1415  001416  ECFF  F00B         	call	___wmul	;wreg free
  1416  00141A  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1417  00141E  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1418  001422  0E00               	movlw	0
  1419  001424  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1420  001426  0ECC               	movlw	204
  1421  001428  6E10               	movwf	___lwdiv@divisor^0,c
  1422  00142A  ECBC  F00A         	call	___lwdiv	;wreg free
  1423  00142E  500E               	movf	?___lwdiv^0,w,c
  1424  001430  6E23               	movwf	setTemperature@tmp^0,c
  1425  001432                     
  1426                           ;temperaturaForno.c: 13:     temperatura = (((int) tmp) * 4) + 50;
  1427  001432  5023               	movf	setTemperature@tmp^0,w,c
  1428  001434  0D04               	mullw	4
  1429  001436  CFF3 F01B          	movff	prodl,??_setTemperature
  1430  00143A  CFF4 F01C          	movff	prodh,??_setTemperature+1
  1431  00143E  0E32               	movlw	50
  1432  001440  241B               	addwf	??_setTemperature^0,w,c
  1433  001442  6E24               	movwf	setTemperature@temperatura^0,c
  1434  001444  0E00               	movlw	0
  1435  001446  201C               	addwfc	(??_setTemperature+1)^0,w,c
  1436  001448  6E25               	movwf	(setTemperature@temperatura+1)^0,c
  1437  00144A                     
  1438                           ;temperaturaForno.c: 15:     itoa((char) temperatura, str);
  1439  00144A  C024  F015         	movff	setTemperature@temperatura,itoa@val
  1440  00144E  6A16               	clrf	(itoa@val+1)^0,c
  1441  001450  0E1D               	movlw	low setTemperature@str
  1442  001452  6E17               	movwf	itoa@str^0,c
  1443  001454  0E00               	movlw	high setTemperature@str
  1444  001456  6E18               	movwf	(itoa@str+1)^0,c
  1445  001458  EC34  F009         	call	_itoa	;wreg free
  1446  00145C                     
  1447                           ;temperaturaForno.c: 17:     lcdPosition(0, 12);
  1448  00145C  0E0C               	movlw	12
  1449  00145E  6E09               	movwf	lcdPosition@coluna^0,c
  1450  001460  0E00               	movlw	0
  1451  001462  ECE2  F00B         	call	_lcdPosition
  1452  001466                     
  1453                           ;temperaturaForno.c: 18:     lcdData(str[2]);
  1454  001466  501F               	movf	(setTemperature@str+2)^0,w,c
  1455  001468  EC90  F00B         	call	_lcdData
  1456  00146C                     
  1457                           ;temperaturaForno.c: 19:     lcdData(str[3]);
  1458  00146C  5020               	movf	(setTemperature@str+3)^0,w,c
  1459  00146E  EC90  F00B         	call	_lcdData
  1460  001472                     
  1461                           ;temperaturaForno.c: 20:     lcdData(str[4]);
  1462  001472  5021               	movf	(setTemperature@str+4)^0,w,c
  1463  001474  EC90  F00B         	call	_lcdData
  1464  001478                     
  1465                           ;temperaturaForno.c: 22:     return temperatura;
  1466  001478  C024  F019         	movff	setTemperature@temperatura,?_setTemperature
  1467  00147C  C025  F01A         	movff	setTemperature@temperatura+1,?_setTemperature+1
  1468  001480  0012               	return		;funcret
  1469  001482                     __end_of_setTemperature:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _lcdPosition *****************
  1473 ;; Defined at:
  1474 ;;		line 118 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  linha           1    wreg     unsigned char 
  1477 ;;  coluna          1    8[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  linha           1   10[COMRAM] unsigned char 
  1480 ;;  comando         1    9[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1490 ;;      Params:         1       0       0       0       0       0       0
  1491 ;;      Locals:         2       0       0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0
  1493 ;;      Totals:         3       0       0       0       0       0       0
  1494 ;;Total ram usage:        3 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 3
  1497 ;; This function calls:
  1498 ;;		_lcdCommand
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;;		_setTemperature
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           	psect	text2
  1506  0017C4                     __ptext2:
  1507                           	callstack 0
  1508  0017C4                     _lcdPosition:
  1509                           	callstack 26
  1510                           
  1511                           ;incstack = 0
  1512                           ;lcdPosition@linha stored from wreg
  1513  0017C4  6E0B               	movwf	lcdPosition@linha^0,c
  1514  0017C6                     
  1515                           ;lcd.c: 119:     char comando = 0;
  1516  0017C6  0E00               	movlw	0
  1517  0017C8  6E0A               	movwf	lcdPosition@comando^0,c
  1518  0017CA                     
  1519                           ;lcd.c: 121:     if(linha == 0) comando = 0x80 + coluna;
  1520  0017CA  500B               	movf	lcdPosition@linha^0,w,c
  1521  0017CC  A4D8               	btfss	status,2,c
  1522  0017CE  EFEB  F00B         	goto	u1531
  1523  0017D2  EFED  F00B         	goto	u1530
  1524  0017D6                     u1531:
  1525  0017D6  EFF0  F00B         	goto	l146
  1526  0017DA                     u1530:
  1527  0017DA  5009               	movf	lcdPosition@coluna^0,w,c
  1528  0017DC  0F80               	addlw	128
  1529  0017DE  6E0A               	movwf	lcdPosition@comando^0,c
  1530  0017E0                     l146:
  1531                           
  1532                           ;lcd.c: 122:     if(linha == 1) comando = 0xC0 + coluna;
  1533  0017E0  040B               	decf	lcdPosition@linha^0,w,c
  1534  0017E2  A4D8               	btfss	status,2,c
  1535  0017E4  EFF6  F00B         	goto	u1541
  1536  0017E8  EFF8  F00B         	goto	u1540
  1537  0017EC                     u1541:
  1538  0017EC  EFFB  F00B         	goto	l1873
  1539  0017F0                     u1540:
  1540  0017F0  5009               	movf	lcdPosition@coluna^0,w,c
  1541  0017F2  0FC0               	addlw	192
  1542  0017F4  6E0A               	movwf	lcdPosition@comando^0,c
  1543  0017F6                     l1873:
  1544                           
  1545                           ;lcd.c: 124:     lcdCommand(comando);
  1546  0017F6  500A               	movf	lcdPosition@comando^0,w,c
  1547  0017F8  EC41  F00A         	call	_lcdCommand
  1548  0017FC  0012               	return		;funcret
  1549  0017FE                     __end_of_lcdPosition:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _itoa *****************
  1553 ;; Defined at:
  1554 ;;		line 26 in file "itoa.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  val             2   20[COMRAM] unsigned int 
  1557 ;;  str             2   22[COMRAM] PTR unsigned char 
  1558 ;;		 -> setTemperature@str(6), main@str(6), main@tempoRelogio(6), 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1570 ;;      Params:         4       0       0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0
  1573 ;;      Totals:         4       0       0       0       0       0       0
  1574 ;;Total ram usage:        4 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 1
  1577 ;; This function calls:
  1578 ;;		___lwdiv
  1579 ;;		___lwmod
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;;		_setTemperature
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text3
  1587  001268                     __ptext3:
  1588                           	callstack 0
  1589  001268                     _itoa:
  1590                           	callstack 28
  1591  001268                     
  1592                           ;itoa.c: 26: void itoa(unsigned int val, char* str );itoa.c: 27: {;itoa.c: 28:   str[0]=
      +                          (val/10000)+0x30;
  1593  001268  C015  F00E         	movff	itoa@val,___lwdiv@dividend
  1594  00126C  C016  F00F         	movff	itoa@val+1,___lwdiv@dividend+1
  1595  001270  0E27               	movlw	39
  1596  001272  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1597  001274  0E10               	movlw	16
  1598  001276  6E10               	movwf	___lwdiv@divisor^0,c
  1599  001278  ECBC  F00A         	call	___lwdiv	;wreg free
  1600  00127C  500E               	movf	?___lwdiv^0,w,c
  1601  00127E  0F30               	addlw	48
  1602  001280  C017  FFD9         	movff	itoa@str,fsr2l
  1603  001284  C018  FFDA         	movff	itoa@str+1,fsr2h
  1604  001288  6EDF               	movwf	indf2,c
  1605                           
  1606                           ;itoa.c: 29:   str[1]=((val%10000)/1000)+0x30;
  1607  00128A  EE20 F001          	lfsr	2,1
  1608  00128E  5017               	movf	itoa@str^0,w,c
  1609  001290  26D9               	addwf	fsr2l,f,c
  1610  001292  5018               	movf	(itoa@str+1)^0,w,c
  1611  001294  22DA               	addwfc	fsr2h,f,c
  1612  001296  0E27               	movlw	39
  1613  001298  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1614  00129A  0E10               	movlw	16
  1615  00129C  6E03               	movwf	___lwmod@divisor^0,c
  1616  00129E  C015  F001         	movff	itoa@val,___lwmod@dividend
  1617  0012A2  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1618  0012A6  EC2C  F00B         	call	___lwmod	;wreg free
  1619  0012AA  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1620  0012AE  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1621  0012B2  0E03               	movlw	3
  1622  0012B4  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1623  0012B6  0EE8               	movlw	232
  1624  0012B8  6E10               	movwf	___lwdiv@divisor^0,c
  1625  0012BA  ECBC  F00A         	call	___lwdiv	;wreg free
  1626  0012BE  500E               	movf	?___lwdiv^0,w,c
  1627  0012C0  0F30               	addlw	48
  1628  0012C2  6EDF               	movwf	indf2,c
  1629                           
  1630                           ;itoa.c: 30:   str[2]=((val%1000)/100)+0x30;
  1631  0012C4  EE20 F002          	lfsr	2,2
  1632  0012C8  5017               	movf	itoa@str^0,w,c
  1633  0012CA  26D9               	addwf	fsr2l,f,c
  1634  0012CC  5018               	movf	(itoa@str+1)^0,w,c
  1635  0012CE  22DA               	addwfc	fsr2h,f,c
  1636  0012D0  0E03               	movlw	3
  1637  0012D2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1638  0012D4  0EE8               	movlw	232
  1639  0012D6  6E03               	movwf	___lwmod@divisor^0,c
  1640  0012D8  C015  F001         	movff	itoa@val,___lwmod@dividend
  1641  0012DC  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1642  0012E0  EC2C  F00B         	call	___lwmod	;wreg free
  1643  0012E4  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1644  0012E8  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1645  0012EC  0E00               	movlw	0
  1646  0012EE  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1647  0012F0  0E64               	movlw	100
  1648  0012F2  6E10               	movwf	___lwdiv@divisor^0,c
  1649  0012F4  ECBC  F00A         	call	___lwdiv	;wreg free
  1650  0012F8  500E               	movf	?___lwdiv^0,w,c
  1651  0012FA  0F30               	addlw	48
  1652  0012FC  6EDF               	movwf	indf2,c
  1653                           
  1654                           ;itoa.c: 31:   str[3]=((val%100)/10)+0x30;
  1655  0012FE  EE20 F003          	lfsr	2,3
  1656  001302  5017               	movf	itoa@str^0,w,c
  1657  001304  26D9               	addwf	fsr2l,f,c
  1658  001306  5018               	movf	(itoa@str+1)^0,w,c
  1659  001308  22DA               	addwfc	fsr2h,f,c
  1660  00130A  0E00               	movlw	0
  1661  00130C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1662  00130E  0E64               	movlw	100
  1663  001310  6E03               	movwf	___lwmod@divisor^0,c
  1664  001312  C015  F001         	movff	itoa@val,___lwmod@dividend
  1665  001316  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1666  00131A  EC2C  F00B         	call	___lwmod	;wreg free
  1667  00131E  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1668  001322  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1669  001326  0E00               	movlw	0
  1670  001328  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1671  00132A  0E0A               	movlw	10
  1672  00132C  6E10               	movwf	___lwdiv@divisor^0,c
  1673  00132E  ECBC  F00A         	call	___lwdiv	;wreg free
  1674  001332  500E               	movf	?___lwdiv^0,w,c
  1675  001334  0F30               	addlw	48
  1676  001336  6EDF               	movwf	indf2,c
  1677                           
  1678                           ;itoa.c: 32:   str[4]=(val%10)+0x30;
  1679  001338  EE20 F004          	lfsr	2,4
  1680  00133C  5017               	movf	itoa@str^0,w,c
  1681  00133E  26D9               	addwf	fsr2l,f,c
  1682  001340  5018               	movf	(itoa@str+1)^0,w,c
  1683  001342  22DA               	addwfc	fsr2h,f,c
  1684  001344  C015  F001         	movff	itoa@val,___lwmod@dividend
  1685  001348  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1686  00134C  0E00               	movlw	0
  1687  00134E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1688  001350  0E0A               	movlw	10
  1689  001352  6E03               	movwf	___lwmod@divisor^0,c
  1690  001354  EC2C  F00B         	call	___lwmod	;wreg free
  1691  001358  5001               	movf	?___lwmod^0,w,c
  1692  00135A  0F30               	addlw	48
  1693  00135C  6EDF               	movwf	indf2,c
  1694  00135E                     
  1695                           ;itoa.c: 33:   str[5]=0;
  1696  00135E  EE20 F005          	lfsr	2,5
  1697  001362  5017               	movf	itoa@str^0,w,c
  1698  001364  26D9               	addwf	fsr2l,f,c
  1699  001366  5018               	movf	(itoa@str+1)^0,w,c
  1700  001368  22DA               	addwfc	fsr2h,f,c
  1701  00136A  0E00               	movlw	0
  1702  00136C  6EDF               	movwf	indf2,c
  1703  00136E  0012               	return		;funcret
  1704  001370                     __end_of_itoa:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function ___lwmod *****************
  1708 ;; Defined at:
  1709 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  dividend        2    0[COMRAM] unsigned int 
  1712 ;;  divisor         2    2[COMRAM] unsigned int 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  counter         1    4[COMRAM] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  2    0[COMRAM] unsigned int 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1724 ;;      Params:         4       0       0       0       0       0       0
  1725 ;;      Locals:         1       0       0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0
  1727 ;;      Totals:         5       0       0       0       0       0       0
  1728 ;;Total ram usage:        5 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_itoa
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           	psect	text4
  1738  001658                     __ptext4:
  1739                           	callstack 0
  1740  001658                     ___lwmod:
  1741                           	callstack 28
  1742  001658  5003               	movf	___lwmod@divisor^0,w,c
  1743  00165A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1744  00165C  B4D8               	btfsc	status,2,c
  1745  00165E  EF33  F00B         	goto	u1301
  1746  001662  EF35  F00B         	goto	u1300
  1747  001666                     u1301:
  1748  001666  EF59  F00B         	goto	l837
  1749  00166A                     u1300:
  1750  00166A  0E01               	movlw	1
  1751  00166C  6E05               	movwf	___lwmod@counter^0,c
  1752  00166E  EF3D  F00B         	goto	l1799
  1753  001672                     l1797:
  1754  001672  90D8               	bcf	status,0,c
  1755  001674  3603               	rlcf	___lwmod@divisor^0,f,c
  1756  001676  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1757  001678  2A05               	incf	___lwmod@counter^0,f,c
  1758  00167A                     l1799:
  1759  00167A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1760  00167C  EF42  F00B         	goto	u1311
  1761  001680  EF44  F00B         	goto	u1310
  1762  001684                     u1311:
  1763  001684  EF39  F00B         	goto	l1797
  1764  001688                     u1310:
  1765  001688                     l1801:
  1766  001688  5003               	movf	___lwmod@divisor^0,w,c
  1767  00168A  5C01               	subwf	___lwmod@dividend^0,w,c
  1768  00168C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1769  00168E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1770  001690  A0D8               	btfss	status,0,c
  1771  001692  EF4D  F00B         	goto	u1321
  1772  001696  EF4F  F00B         	goto	u1320
  1773  00169A                     u1321:
  1774  00169A  EF53  F00B         	goto	l1805
  1775  00169E                     u1320:
  1776  00169E  5003               	movf	___lwmod@divisor^0,w,c
  1777  0016A0  5E01               	subwf	___lwmod@dividend^0,f,c
  1778  0016A2  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1779  0016A4  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1780  0016A6                     l1805:
  1781  0016A6  90D8               	bcf	status,0,c
  1782  0016A8  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1783  0016AA  3203               	rrcf	___lwmod@divisor^0,f,c
  1784  0016AC  2E05               	decfsz	___lwmod@counter^0,f,c
  1785  0016AE  EF44  F00B         	goto	l1801
  1786  0016B2                     l837:
  1787  0016B2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1788  0016B6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1789  0016BA  0012               	return		;funcret
  1790  0016BC                     __end_of___lwmod:
  1791                           	callstack 0
  1792                           
  1793 ;; *************** function _adc_amostra *****************
  1794 ;; Defined at:
  1795 ;;		line 44 in file "adc.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  canal           1    wreg     unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  canal           1    6[COMRAM] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    0[COMRAM] unsigned int 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1809 ;;      Params:         2       0       0       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0       0       0
  1811 ;;      Temps:          4       0       0       0       0       0       0
  1812 ;;      Totals:         7       0       0       0       0       0       0
  1813 ;;Total ram usage:        7 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; This function calls:
  1816 ;;		Nothing
  1817 ;; This function is called by:
  1818 ;;		_main
  1819 ;;		_setTemperature
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text5
  1824  001370                     __ptext5:
  1825                           	callstack 0
  1826  001370                     _adc_amostra:
  1827                           	callstack 29
  1828                           
  1829                           ;incstack = 0
  1830                           ;adc_amostra@canal stored from wreg
  1831  001370  6E07               	movwf	adc_amostra@canal^0,c
  1832  001372                     
  1833                           ;adc.c: 44: unsigned int adc_amostra(unsigned char canal);adc.c: 45: {;adc.c: 62:      s
      +                          witch(canal)
  1834  001372  EFC7  F009         	goto	l1885
  1835  001376                     l1877:
  1836                           
  1837                           ;adc.c: 65:         ADCON0=0x01;
  1838  001376  0E01               	movlw	1
  1839  001378  6EC2               	movwf	194,c	;volatile
  1840                           
  1841                           ;adc.c: 66:         break;
  1842  00137A  EFE0  F009         	goto	l184
  1843  00137E                     l1879:
  1844                           
  1845                           ;adc.c: 68:         ADCON0=0x09;
  1846  00137E  0E09               	movlw	9
  1847  001380  6EC2               	movwf	194,c	;volatile
  1848                           
  1849                           ;adc.c: 69:         break;
  1850  001382  EFE0  F009         	goto	l184
  1851  001386                     l1881:
  1852                           
  1853                           ;adc.c: 71:         ADCON0=0x11;
  1854  001386  0E11               	movlw	17
  1855  001388  6EC2               	movwf	194,c	;volatile
  1856                           
  1857                           ;adc.c: 72:         break;
  1858  00138A  EFE0  F009         	goto	l184
  1859  00138E                     l1885:
  1860  00138E  5007               	movf	adc_amostra@canal^0,w,c
  1861  001390  6E03               	movwf	??_adc_amostra^0,c
  1862  001392  6A04               	clrf	(??_adc_amostra+1)^0,c
  1863                           
  1864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 1, Range of values is 0 to 0
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte            4     3 (average)
  1870                           ;	Chosen strategy is simple_byte
  1871  001394  5004               	movf	(??_adc_amostra+1)^0,w,c
  1872  001396  0A00               	xorlw	0	; case 0
  1873  001398  B4D8               	btfsc	status,2,c
  1874  00139A  EFD1  F009         	goto	l2281
  1875  00139E  EFE0  F009         	goto	l184
  1876  0013A2                     l2281:
  1877                           
  1878                           ; Switch size 1, requested type "simple"
  1879                           ; Number of cases is 3, Range of values is 0 to 2
  1880                           ; switch strategies available:
  1881                           ; Name         Instructions Cycles
  1882                           ; simple_byte           10     6 (average)
  1883                           ;	Chosen strategy is simple_byte
  1884  0013A2  5003               	movf	??_adc_amostra^0,w,c
  1885  0013A4  0A00               	xorlw	0	; case 0
  1886  0013A6  B4D8               	btfsc	status,2,c
  1887  0013A8  EFBB  F009         	goto	l1877
  1888  0013AC  0A01               	xorlw	1	; case 1
  1889  0013AE  B4D8               	btfsc	status,2,c
  1890  0013B0  EFBF  F009         	goto	l1879
  1891  0013B4  0A03               	xorlw	3	; case 2
  1892  0013B6  B4D8               	btfsc	status,2,c
  1893  0013B8  EFC3  F009         	goto	l1881
  1894  0013BC  EFE0  F009         	goto	l184
  1895  0013C0                     l184:
  1896                           
  1897                           ;adc.c: 77:     ADCON0bits.GO=1;
  1898  0013C0  82C2               	bsf	194,1,c	;volatile
  1899  0013C2                     l187:
  1900  0013C2  B2C2               	btfsc	194,1,c	;volatile
  1901  0013C4  EFE6  F009         	goto	u1551
  1902  0013C8  EFE8  F009         	goto	u1550
  1903  0013CC                     u1551:
  1904  0013CC  EFE1  F009         	goto	l187
  1905  0013D0                     u1550:
  1906  0013D0                     
  1907                           ;adc.c: 80:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1908  0013D0  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1909  0013D4  0E06               	movlw	6
  1910  0013D6  6E04               	movwf	(??_adc_amostra+1)^0,c
  1911  0013D8                     u1565:
  1912  0013D8  90D8               	bcf	status,0,c
  1913  0013DA  3203               	rrcf	??_adc_amostra^0,f,c
  1914  0013DC  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1915  0013DE  EFEC  F009         	goto	u1565
  1916  0013E2  5003               	movf	??_adc_amostra^0,w,c
  1917  0013E4  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1918  0013E8  6A06               	clrf	(??_adc_amostra+3)^0,c
  1919  0013EA  90D8               	bcf	status,0,c
  1920  0013EC  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1921  0013EE  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1922  0013F0  90D8               	bcf	status,0,c
  1923  0013F2  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1924  0013F4  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1925  0013F6  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1926  0013F8  6E01               	movwf	?_adc_amostra^0,c
  1927  0013FA  5006               	movf	(??_adc_amostra+3)^0,w,c
  1928  0013FC  6E02               	movwf	(?_adc_amostra+1)^0,c
  1929  0013FE  0012               	return		;funcret
  1930  001400                     __end_of_adc_amostra:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _pwmSet1 *****************
  1934 ;; Defined at:
  1935 ;;		line 24 in file "pwm.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  porcento        1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  porcento        1   22[COMRAM] unsigned char 
  1940 ;;  val             2   23[COMRAM] unsigned int 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1950 ;;      Params:         0       0       0       0       0       0       0
  1951 ;;      Locals:         3       0       0       0       0       0       0
  1952 ;;      Temps:          2       0       0       0       0       0       0
  1953 ;;      Totals:         5       0       0       0       0       0       0
  1954 ;;Total ram usage:        5 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 1
  1957 ;; This function calls:
  1958 ;;		___lwdiv
  1959 ;;		___wmul
  1960 ;; This function is called by:
  1961 ;;		_main
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text6
  1966  0015EC                     __ptext6:
  1967                           	callstack 0
  1968  0015EC                     _pwmSet1:
  1969                           	callstack 29
  1970                           
  1971                           ;incstack = 0
  1972                           ;pwmSet1@porcento stored from wreg
  1973  0015EC  6E17               	movwf	pwmSet1@porcento^0,c
  1974  0015EE                     
  1975                           ;pwm.c: 24: void pwmSet1(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int v
      +                          al = ((unsigned int)porcento) *(PR2+1);
  1976  0015EE  0E01               	movlw	1
  1977  0015F0  24CB               	addwf	203,w,c	;volatile
  1978  0015F2  6E08               	movwf	___wmul@multiplier^0,c
  1979  0015F4  6A09               	clrf	(___wmul@multiplier+1)^0,c
  1980  0015F6  0E00               	movlw	0
  1981  0015F8  2209               	addwfc	(___wmul@multiplier+1)^0,f,c
  1982  0015FA  C017  F00A         	movff	pwmSet1@porcento,___wmul@multiplicand
  1983  0015FE  6A0B               	clrf	(___wmul@multiplicand+1)^0,c
  1984  001600  ECFF  F00B         	call	___wmul	;wreg free
  1985  001604  C008  F018         	movff	?___wmul,pwmSet1@val
  1986  001608  C009  F019         	movff	?___wmul+1,pwmSet1@val+1
  1987  00160C                     
  1988                           ;pwm.c: 32:  val = val / 25;
  1989  00160C  C018  F00E         	movff	pwmSet1@val,___lwdiv@dividend
  1990  001610  C019  F00F         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1991  001614  0E00               	movlw	0
  1992  001616  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1993  001618  0E19               	movlw	25
  1994  00161A  6E10               	movwf	___lwdiv@divisor^0,c
  1995  00161C  ECBC  F00A         	call	___lwdiv	;wreg free
  1996  001620  C00E  F018         	movff	?___lwdiv,pwmSet1@val
  1997  001624  C00F  F019         	movff	?___lwdiv+1,pwmSet1@val+1
  1998  001628                     
  1999                           ;pwm.c: 34:  val &= 0x03ff;
  2000  001628  0EFF               	movlw	255
  2001  00162A  1618               	andwf	pwmSet1@val^0,f,c
  2002  00162C  0E03               	movlw	3
  2003  00162E  1619               	andwf	(pwmSet1@val+1)^0,f,c
  2004  001630                     
  2005                           ;pwm.c: 36:  CCPR1L = val >> 2;
  2006  001630  C018  F015         	movff	pwmSet1@val,??_pwmSet1
  2007  001634  C019  F016         	movff	pwmSet1@val+1,??_pwmSet1+1
  2008  001638  90D8               	bcf	status,0,c
  2009  00163A  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  2010  00163C  3215               	rrcf	??_pwmSet1^0,f,c
  2011  00163E  90D8               	bcf	status,0,c
  2012  001640  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  2013  001642  3215               	rrcf	??_pwmSet1^0,f,c
  2014  001644  5015               	movf	??_pwmSet1^0,w,c
  2015  001646  6EBE               	movwf	190,c	;volatile
  2016  001648                     
  2017                           ;pwm.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  2018  001648  C018  F015         	movff	pwmSet1@val,??_pwmSet1	;volatile
  2019  00164C  0E03               	movlw	3
  2020  00164E  1615               	andwf	??_pwmSet1^0,f,c
  2021  001650  3815               	swapf	??_pwmSet1^0,w,c
  2022  001652  0BF0               	andlw	240
  2023  001654  12BD               	iorwf	189,f,c	;volatile
  2024  001656  0012               	return		;funcret
  2025  001658                     __end_of_pwmSet1:
  2026                           	callstack 0
  2027                           
  2028 ;; *************** function ___wmul *****************
  2029 ;; Defined at:
  2030 ;;		line 15 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  multiplier      2    7[COMRAM] unsigned int 
  2033 ;;  multiplicand    2    9[COMRAM] unsigned int 
  2034 ;; Auto vars:     Size  Location     Type
  2035 ;;  product         2   11[COMRAM] unsigned int 
  2036 ;; Return value:  Size  Location     Type
  2037 ;;                  2    7[COMRAM] unsigned int 
  2038 ;; Registers used:
  2039 ;;		wreg, status,2, status,0, prodl, prodh
  2040 ;; Tracked objects:
  2041 ;;		On entry : 0/0
  2042 ;;		On exit  : 0/0
  2043 ;;		Unchanged: 0/0
  2044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2045 ;;      Params:         4       0       0       0       0       0       0
  2046 ;;      Locals:         2       0       0       0       0       0       0
  2047 ;;      Temps:          0       0       0       0       0       0       0
  2048 ;;      Totals:         6       0       0       0       0       0       0
  2049 ;;Total ram usage:        6 bytes
  2050 ;; Hardware stack levels used: 1
  2051 ;; This function calls:
  2052 ;;		Nothing
  2053 ;; This function is called by:
  2054 ;;		_pwmSet1
  2055 ;;		_main
  2056 ;;		_setTemperature
  2057 ;;		_pwmSet2
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text7
  2062  0017FE                     __ptext7:
  2063                           	callstack 0
  2064  0017FE                     ___wmul:
  2065                           	callstack 29
  2066  0017FE  5008               	movf	___wmul@multiplier^0,w,c
  2067  001800  020A               	mulwf	___wmul@multiplicand^0,c
  2068  001802  CFF3 F00C          	movff	prodl,___wmul@product
  2069  001806  CFF4 F00D          	movff	prodh,___wmul@product+1
  2070  00180A  5008               	movf	___wmul@multiplier^0,w,c
  2071  00180C  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  2072  00180E  50F3               	movf	243,w,c
  2073  001810  260D               	addwf	(___wmul@product+1)^0,f,c
  2074  001812  5009               	movf	(___wmul@multiplier+1)^0,w,c
  2075  001814  020A               	mulwf	___wmul@multiplicand^0,c
  2076  001816  50F3               	movf	243,w,c
  2077  001818  260D               	addwf	(___wmul@product+1)^0,f,c
  2078  00181A  C00C  F008         	movff	___wmul@product,?___wmul
  2079  00181E  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  2080  001822  0012               	return		;funcret
  2081  001824                     __end_of___wmul:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function ___lwdiv *****************
  2085 ;; Defined at:
  2086 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;  dividend        2   13[COMRAM] unsigned int 
  2089 ;;  divisor         2   15[COMRAM] unsigned int 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  quotient        2   17[COMRAM] unsigned int 
  2092 ;;  counter         1   19[COMRAM] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2   13[COMRAM] unsigned int 
  2095 ;; Registers used:
  2096 ;;		wreg, status,2, status,0
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2102 ;;      Params:         4       0       0       0       0       0       0
  2103 ;;      Locals:         3       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0
  2105 ;;      Totals:         7       0       0       0       0       0       0
  2106 ;;Total ram usage:        7 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; This function calls:
  2109 ;;		Nothing
  2110 ;; This function is called by:
  2111 ;;		_itoa
  2112 ;;		_pwmSet1
  2113 ;;		_main
  2114 ;;		_setTemperature
  2115 ;;		_pwmSet2
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text8
  2120  001578                     __ptext8:
  2121                           	callstack 0
  2122  001578                     ___lwdiv:
  2123                           	callstack 28
  2124  001578  0E00               	movlw	0
  2125  00157A  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  2126  00157C  0E00               	movlw	0
  2127  00157E  6E12               	movwf	___lwdiv@quotient^0,c
  2128  001580  5010               	movf	___lwdiv@divisor^0,w,c
  2129  001582  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2130  001584  B4D8               	btfsc	status,2,c
  2131  001586  EFC7  F00A         	goto	u1271
  2132  00158A  EFC9  F00A         	goto	u1270
  2133  00158E                     u1271:
  2134  00158E  EFF1  F00A         	goto	l827
  2135  001592                     u1270:
  2136  001592  0E01               	movlw	1
  2137  001594  6E14               	movwf	___lwdiv@counter^0,c
  2138  001596  EFD1  F00A         	goto	l1779
  2139  00159A                     l1777:
  2140  00159A  90D8               	bcf	status,0,c
  2141  00159C  3610               	rlcf	___lwdiv@divisor^0,f,c
  2142  00159E  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2143  0015A0  2A14               	incf	___lwdiv@counter^0,f,c
  2144  0015A2                     l1779:
  2145  0015A2  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  2146  0015A4  EFD6  F00A         	goto	u1281
  2147  0015A8  EFD8  F00A         	goto	u1280
  2148  0015AC                     u1281:
  2149  0015AC  EFCD  F00A         	goto	l1777
  2150  0015B0                     u1280:
  2151  0015B0                     l1781:
  2152  0015B0  90D8               	bcf	status,0,c
  2153  0015B2  3612               	rlcf	___lwdiv@quotient^0,f,c
  2154  0015B4  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2155  0015B6  5010               	movf	___lwdiv@divisor^0,w,c
  2156  0015B8  5C0E               	subwf	___lwdiv@dividend^0,w,c
  2157  0015BA  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  2158  0015BC  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2159  0015BE  A0D8               	btfss	status,0,c
  2160  0015C0  EFE4  F00A         	goto	u1291
  2161  0015C4  EFE6  F00A         	goto	u1290
  2162  0015C8                     u1291:
  2163  0015C8  EFEB  F00A         	goto	l1789
  2164  0015CC                     u1290:
  2165  0015CC  5010               	movf	___lwdiv@divisor^0,w,c
  2166  0015CE  5E0E               	subwf	___lwdiv@dividend^0,f,c
  2167  0015D0  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  2168  0015D2  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2169  0015D4  8012               	bsf	___lwdiv@quotient^0,0,c
  2170  0015D6                     l1789:
  2171  0015D6  90D8               	bcf	status,0,c
  2172  0015D8  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2173  0015DA  3210               	rrcf	___lwdiv@divisor^0,f,c
  2174  0015DC  2E14               	decfsz	___lwdiv@counter^0,f,c
  2175  0015DE  EFD8  F00A         	goto	l1781
  2176  0015E2                     l827:
  2177  0015E2  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  2178  0015E6  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2179  0015EA  0012               	return		;funcret
  2180  0015EC                     __end_of___lwdiv:
  2181                           	callstack 0
  2182                           
  2183 ;; *************** function _pwmInit *****************
  2184 ;; Defined at:
  2185 ;;		line 60 in file "pwm.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;		None
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;		None
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2199 ;;      Params:         0       0       0       0       0       0       0
  2200 ;;      Locals:         0       0       0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0
  2202 ;;      Totals:         0       0       0       0       0       0       0
  2203 ;;Total ram usage:        0 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_main
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text9
  2213  001894                     __ptext9:
  2214                           	callstack 0
  2215  001894                     _pwmInit:
  2216                           	callstack 30
  2217  001894                     
  2218                           ;pwm.c: 62:  ((TRISC) &= ~(1<<(1)));
  2219  001894  9294               	bcf	148,1,c	;volatile
  2220                           
  2221                           ;pwm.c: 63:  ((TRISC) &= ~(1<<(2)));
  2222  001896  9494               	bcf	148,2,c	;volatile
  2223  001898                     
  2224                           ;pwm.c: 65:  T2CON |= 0b00000011;
  2225  001898  0E03               	movlw	3
  2226  00189A  12CA               	iorwf	202,f,c	;volatile
  2227  00189C                     
  2228                           ;pwm.c: 66:  ((T2CON) |= (1<<(2)));
  2229  00189C  84CA               	bsf	202,2,c	;volatile
  2230                           
  2231                           ;pwm.c: 69:  CCP1CON |= 0b00001100;
  2232  00189E  0E0C               	movlw	12
  2233  0018A0  12BD               	iorwf	189,f,c	;volatile
  2234                           
  2235                           ;pwm.c: 70:  CCP2CON |= 0b00001100;
  2236  0018A2  0E0C               	movlw	12
  2237  0018A4  12BA               	iorwf	186,f,c	;volatile
  2238  0018A6  0012               	return		;funcret
  2239  0018A8                     __end_of_pwmInit:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _pwmFrequency *****************
  2243 ;; Defined at:
  2244 ;;		line 53 in file "pwm.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;  freq            2   14[COMRAM] unsigned int 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2258 ;;      Params:         2       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0
  2261 ;;      Totals:         2       0       0       0       0       0       0
  2262 ;;Total ram usage:        2 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 1
  2265 ;; This function calls:
  2266 ;;		___aldiv
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text10
  2273  001824                     __ptext10:
  2274                           	callstack 0
  2275  001824                     _pwmFrequency:
  2276                           	callstack 29
  2277  001824                     
  2278                           ;pwm.c: 53: void pwmFrequency(unsigned int freq);pwm.c: 54: {;pwm.c: 57:  PR2 = (125000/
      +                          (freq)) - 1;
  2279  001824  0E48               	movlw	72
  2280  001826  6E01               	movwf	___aldiv@dividend^0,c
  2281  001828  0EE8               	movlw	232
  2282  00182A  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2283  00182C  0E01               	movlw	1
  2284  00182E  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2285  001830  0E00               	movlw	0
  2286  001832  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2287  001834  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2288  001838  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2289  00183C  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2290  00183E  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2291  001840  ECAE  F008         	call	___aldiv	;wreg free
  2292  001844  0401               	decf	?___aldiv^0,w,c
  2293  001846  6ECB               	movwf	203,c	;volatile
  2294  001848  0012               	return		;funcret
  2295  00184A                     __end_of_pwmFrequency:
  2296                           	callstack 0
  2297                           
  2298 ;; *************** function ___aldiv *****************
  2299 ;; Defined at:
  2300 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/aldiv.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  dividend        4    0[COMRAM] long 
  2303 ;;  divisor         4    4[COMRAM] long 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  quotient        4   10[COMRAM] long 
  2306 ;;  sign            1    9[COMRAM] unsigned char 
  2307 ;;  counter         1    8[COMRAM] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  4    0[COMRAM] long 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2317 ;;      Params:         8       0       0       0       0       0       0
  2318 ;;      Locals:         6       0       0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0       0       0
  2320 ;;      Totals:        14       0       0       0       0       0       0
  2321 ;;Total ram usage:       14 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_pwmFrequency
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text11
  2331  00115C                     __ptext11:
  2332                           	callstack 0
  2333  00115C                     ___aldiv:
  2334                           	callstack 29
  2335  00115C  0E00               	movlw	0
  2336  00115E  6E0A               	movwf	___aldiv@sign^0,c
  2337  001160  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2338  001162  EFB7  F008         	goto	u1570
  2339  001166  EFB5  F008         	goto	u1571
  2340  00116A                     u1571:
  2341  00116A  EFC1  F008         	goto	l1913
  2342  00116E                     u1570:
  2343  00116E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2344  001170  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2345  001172  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2346  001174  6C05               	negf	___aldiv@divisor^0,c
  2347  001176  0E00               	movlw	0
  2348  001178  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2349  00117A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2350  00117C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2351  00117E  0E01               	movlw	1
  2352  001180  6E0A               	movwf	___aldiv@sign^0,c
  2353  001182                     l1913:
  2354  001182  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2355  001184  EFC8  F008         	goto	u1580
  2356  001188  EFC6  F008         	goto	u1581
  2357  00118C                     u1581:
  2358  00118C  EFD2  F008         	goto	l1919
  2359  001190                     u1580:
  2360  001190  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2361  001192  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2362  001194  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2363  001196  6C01               	negf	___aldiv@dividend^0,c
  2364  001198  0E00               	movlw	0
  2365  00119A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2366  00119C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2367  00119E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2368  0011A0  0E01               	movlw	1
  2369  0011A2  1A0A               	xorwf	___aldiv@sign^0,f,c
  2370  0011A4                     l1919:
  2371  0011A4  0E00               	movlw	0
  2372  0011A6  6E0B               	movwf	___aldiv@quotient^0,c
  2373  0011A8  0E00               	movlw	0
  2374  0011AA  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2375  0011AC  0E00               	movlw	0
  2376  0011AE  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2377  0011B0  0E00               	movlw	0
  2378  0011B2  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2379  0011B4  5005               	movf	___aldiv@divisor^0,w,c
  2380  0011B6  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2381  0011B8  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2382  0011BA  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2383  0011BC  B4D8               	btfsc	status,2,c
  2384  0011BE  EFE3  F008         	goto	u1591
  2385  0011C2  EFE5  F008         	goto	u1590
  2386  0011C6                     u1591:
  2387  0011C6  EF1B  F009         	goto	l1941
  2388  0011CA                     u1590:
  2389  0011CA  0E01               	movlw	1
  2390  0011CC  6E09               	movwf	___aldiv@counter^0,c
  2391  0011CE  EFEF  F008         	goto	l1927
  2392  0011D2                     l1925:
  2393  0011D2  90D8               	bcf	status,0,c
  2394  0011D4  3605               	rlcf	___aldiv@divisor^0,f,c
  2395  0011D6  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2396  0011D8  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2397  0011DA  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2398  0011DC  2A09               	incf	___aldiv@counter^0,f,c
  2399  0011DE                     l1927:
  2400  0011DE  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2401  0011E0  EFF4  F008         	goto	u1601
  2402  0011E4  EFF6  F008         	goto	u1600
  2403  0011E8                     u1601:
  2404  0011E8  EFE9  F008         	goto	l1925
  2405  0011EC                     u1600:
  2406  0011EC                     l1929:
  2407  0011EC  90D8               	bcf	status,0,c
  2408  0011EE  360B               	rlcf	___aldiv@quotient^0,f,c
  2409  0011F0  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2410  0011F2  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2411  0011F4  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2412  0011F6  5005               	movf	___aldiv@divisor^0,w,c
  2413  0011F8  5C01               	subwf	___aldiv@dividend^0,w,c
  2414  0011FA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2415  0011FC  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2416  0011FE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2417  001200  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2418  001202  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2419  001204  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2420  001206  A0D8               	btfss	status,0,c
  2421  001208  EF08  F009         	goto	u1611
  2422  00120C  EF0A  F009         	goto	u1610
  2423  001210                     u1611:
  2424  001210  EF13  F009         	goto	l1937
  2425  001214                     u1610:
  2426  001214  5005               	movf	___aldiv@divisor^0,w,c
  2427  001216  5E01               	subwf	___aldiv@dividend^0,f,c
  2428  001218  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2429  00121A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2430  00121C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2431  00121E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2432  001220  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2433  001222  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2434  001224  800B               	bsf	___aldiv@quotient^0,0,c
  2435  001226                     l1937:
  2436  001226  90D8               	bcf	status,0,c
  2437  001228  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2438  00122A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2439  00122C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2440  00122E  3205               	rrcf	___aldiv@divisor^0,f,c
  2441  001230  2E09               	decfsz	___aldiv@counter^0,f,c
  2442  001232  EFF6  F008         	goto	l1929
  2443  001236                     l1941:
  2444  001236  500A               	movf	___aldiv@sign^0,w,c
  2445  001238  B4D8               	btfsc	status,2,c
  2446  00123A  EF21  F009         	goto	u1621
  2447  00123E  EF23  F009         	goto	u1620
  2448  001242                     u1621:
  2449  001242  EF2B  F009         	goto	l1945
  2450  001246                     u1620:
  2451  001246  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2452  001248  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2453  00124A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2454  00124C  6C0B               	negf	___aldiv@quotient^0,c
  2455  00124E  0E00               	movlw	0
  2456  001250  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2457  001252  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2458  001254  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2459  001256                     l1945:
  2460  001256  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2461  00125A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2462  00125E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2463  001262  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2464  001266  0012               	return		;funcret
  2465  001268                     __end_of___aldiv:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function _lcd_str *****************
  2469 ;; Defined at:
  2470 ;;		line 127 in file "lcd.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2473 ;;		 -> STR_8(2), STR_7(4), STR_6(13), STR_5(4), 
  2474 ;;		 -> STR_4(7), STR_3(13), STR_2(14), STR_1(15), 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  i               1   12[COMRAM] unsigned char 
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2486 ;;      Params:         2       0       0       0       0       0       0
  2487 ;;      Locals:         1       0       0       0       0       0       0
  2488 ;;      Temps:          2       0       0       0       0       0       0
  2489 ;;      Totals:         5       0       0       0       0       0       0
  2490 ;;Total ram usage:        5 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 2
  2493 ;; This function calls:
  2494 ;;		_lcdData
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text12
  2501  001774                     __ptext12:
  2502                           	callstack 0
  2503  001774                     _lcd_str:
  2504                           	callstack 28
  2505  001774                     
  2506                           ;lcd.c: 128:     unsigned char i=0;
  2507  001774  0E00               	movlw	0
  2508  001776  6E0D               	movwf	lcd_str@i^0,c
  2509                           
  2510                           ;lcd.c: 130:     while(str[i] != 0 ){
  2511  001778  EFCD  F00B         	goto	l1991
  2512  00177C                     l1987:
  2513                           
  2514                           ;lcd.c: 131:         lcdData(str[i]);
  2515  00177C  500D               	movf	lcd_str@i^0,w,c
  2516  00177E  2409               	addwf	lcd_str@str^0,w,c
  2517  001780  6E0B               	movwf	??_lcd_str^0,c
  2518  001782  0E00               	movlw	0
  2519  001784  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2520  001786  6E0C               	movwf	(??_lcd_str+1)^0,c
  2521  001788  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2522  00178C  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2523  001790                     	if	0	;tblptru may be non-zero
  2524  001790                     	endif
  2525  001790                     	if	0	;tblptru may be non-zero
  2526  001790                     	endif
  2527  001790  0008               	tblrd		*
  2528  001792  50F5               	movf	tablat,w,c
  2529  001794  EC90  F00B         	call	_lcdData
  2530  001798                     
  2531                           ;lcd.c: 132:         i++;
  2532  001798  2A0D               	incf	lcd_str@i^0,f,c
  2533  00179A                     l1991:
  2534                           
  2535                           ;lcd.c: 130:     while(str[i] != 0 ){
  2536  00179A  500D               	movf	lcd_str@i^0,w,c
  2537  00179C  2409               	addwf	lcd_str@str^0,w,c
  2538  00179E  6E0B               	movwf	??_lcd_str^0,c
  2539  0017A0  0E00               	movlw	0
  2540  0017A2  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2541  0017A4  6E0C               	movwf	(??_lcd_str+1)^0,c
  2542  0017A6  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2543  0017AA  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2544  0017AE                     	if	0	;tblptru may be non-zero
  2545  0017AE                     	endif
  2546  0017AE                     	if	0	;tblptru may be non-zero
  2547  0017AE                     	endif
  2548  0017AE  0008               	tblrd		*
  2549  0017B0  50F5               	movf	tablat,w,c
  2550  0017B2  0900               	iorlw	0
  2551  0017B4  A4D8               	btfss	status,2,c
  2552  0017B6  EFDF  F00B         	goto	u1631
  2553  0017BA  EFE1  F00B         	goto	u1630
  2554  0017BE                     u1631:
  2555  0017BE  EFBE  F00B         	goto	l1987
  2556  0017C2                     u1630:
  2557  0017C2  0012               	return		;funcret
  2558  0017C4                     __end_of_lcd_str:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _lcdData *****************
  2562 ;; Defined at:
  2563 ;;		line 74 in file "lcd.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  valor           1    wreg     unsigned char 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;  valor           1    6[COMRAM] unsigned char 
  2568 ;;  old_D           1    7[COMRAM] unsigned char 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, status,2, status,0, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         0       0       0       0       0       0       0
  2579 ;;      Locals:         2       0       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0
  2581 ;;      Totals:         2       0       0       0       0       0       0
  2582 ;;Total ram usage:        2 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 1
  2585 ;; This function calls:
  2586 ;;		_Delay40us
  2587 ;;		_digitalWrite
  2588 ;; This function is called by:
  2589 ;;		_lcd_str
  2590 ;;		_main
  2591 ;;		_setTemperature
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text13
  2596  001720                     __ptext13:
  2597                           	callstack 0
  2598  001720                     _lcdData:
  2599                           	callstack 28
  2600                           
  2601                           ;incstack = 0
  2602                           ;lcdData@valor stored from wreg
  2603  001720  6E07               	movwf	lcdData@valor^0,c
  2604  001722                     
  2605                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2606  001722  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2607  001726                     
  2608                           ;lcd.c: 80:     TRISD = 0x00;
  2609  001726  0E00               	movlw	0
  2610  001728  6E95               	movwf	149,c	;volatile
  2611  00172A                     
  2612                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2613  00172A  0E00               	movlw	0
  2614  00172C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2615  00172E  0E22               	movlw	34
  2616  001730  6E01               	movwf	digitalWrite@pin^0,c
  2617  001732  0E00               	movlw	0
  2618  001734  6E04               	movwf	(digitalWrite@value+1)^0,c
  2619  001736  0E01               	movlw	1
  2620  001738  6E03               	movwf	digitalWrite@value^0,c
  2621  00173A  ECCA  F006         	call	_digitalWrite	;wreg free
  2622  00173E                     
  2623                           ;lcd.c: 83:  PORTD = valor;
  2624  00173E  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2625  001742                     
  2626                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2627  001742  0E00               	movlw	0
  2628  001744  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2629  001746  0E21               	movlw	33
  2630  001748  6E01               	movwf	digitalWrite@pin^0,c
  2631  00174A  0E00               	movlw	0
  2632  00174C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2633  00174E  0E01               	movlw	1
  2634  001750  6E03               	movwf	digitalWrite@value^0,c
  2635  001752  ECCA  F006         	call	_digitalWrite	;wreg free
  2636  001756                     
  2637                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2638  001756  0E00               	movlw	0
  2639  001758  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2640  00175A  0E21               	movlw	33
  2641  00175C  6E01               	movwf	digitalWrite@pin^0,c
  2642  00175E  0E00               	movlw	0
  2643  001760  6E04               	movwf	(digitalWrite@value+1)^0,c
  2644  001762  0E00               	movlw	0
  2645  001764  6E03               	movwf	digitalWrite@value^0,c
  2646  001766  ECCA  F006         	call	_digitalWrite	;wreg free
  2647  00176A                     
  2648                           ;lcd.c: 88:     PORTD= old_D;
  2649  00176A  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2650  00176E                     
  2651                           ;lcd.c: 90:  Delay40us();
  2652  00176E  EC33  F00C         	call	_Delay40us	;wreg free
  2653  001772  0012               	return		;funcret
  2654  001774                     __end_of_lcdData:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _lcdInit *****************
  2658 ;; Defined at:
  2659 ;;		line 95 in file "lcd.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2673 ;;      Params:         0       0       0       0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 3
  2680 ;; This function calls:
  2681 ;;		_Delay2ms
  2682 ;;		_lcdCommand
  2683 ;;		_pinMode
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text14
  2690  001500                     __ptext14:
  2691                           	callstack 0
  2692  001500                     _lcdInit:
  2693                           	callstack 27
  2694  001500                     
  2695                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2696  001500  0E00               	movlw	0
  2697  001502  6E02               	movwf	(pinMode@pin+1)^0,c
  2698  001504  0E22               	movlw	34
  2699  001506  6E01               	movwf	pinMode@pin^0,c
  2700  001508  0E00               	movlw	0
  2701  00150A  6E04               	movwf	(pinMode@type+1)^0,c
  2702  00150C  0E00               	movlw	0
  2703  00150E  6E03               	movwf	pinMode@type^0,c
  2704  001510  ECA3  F005         	call	_pinMode	;wreg free
  2705                           
  2706                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2707  001514  0E00               	movlw	0
  2708  001516  6E02               	movwf	(pinMode@pin+1)^0,c
  2709  001518  0E21               	movlw	33
  2710  00151A  6E01               	movwf	pinMode@pin^0,c
  2711  00151C  0E00               	movlw	0
  2712  00151E  6E04               	movwf	(pinMode@type+1)^0,c
  2713  001520  0E00               	movlw	0
  2714  001522  6E03               	movwf	pinMode@type^0,c
  2715  001524  ECA3  F005         	call	_pinMode	;wreg free
  2716  001528                     
  2717                           ;lcd.c: 99:  TRISD = 0x00;
  2718  001528  0E00               	movlw	0
  2719  00152A  6E95               	movwf	149,c	;volatile
  2720  00152C                     
  2721                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2722  00152C  EC25  F00C         	call	_Delay2ms	;wreg free
  2723  001530  EC25  F00C         	call	_Delay2ms	;wreg free
  2724  001534  EC25  F00C         	call	_Delay2ms	;wreg free
  2725  001538  EC25  F00C         	call	_Delay2ms	;wreg free
  2726  00153C  EC25  F00C         	call	_Delay2ms	;wreg free
  2727  001540                     
  2728                           ;lcd.c: 104:     lcdCommand(0x38);
  2729  001540  0E38               	movlw	56
  2730  001542  EC41  F00A         	call	_lcdCommand
  2731  001546                     
  2732                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2733  001546  EC25  F00C         	call	_Delay2ms	;wreg free
  2734  00154A  EC25  F00C         	call	_Delay2ms	;wreg free
  2735  00154E                     
  2736                           ;lcd.c: 106:     lcdCommand(0x38);
  2737  00154E  0E38               	movlw	56
  2738  001550  EC41  F00A         	call	_lcdCommand
  2739  001554                     
  2740                           ;lcd.c: 107:     Delay2ms();
  2741  001554  EC25  F00C         	call	_Delay2ms	;wreg free
  2742  001558                     
  2743                           ;lcd.c: 108:     lcdCommand(0x38);
  2744  001558  0E38               	movlw	56
  2745  00155A  EC41  F00A         	call	_lcdCommand
  2746  00155E                     
  2747                           ;lcd.c: 110:     lcdCommand(0x38);
  2748  00155E  0E38               	movlw	56
  2749  001560  EC41  F00A         	call	_lcdCommand
  2750  001564                     
  2751                           ;lcd.c: 111:     lcdCommand(0x06);
  2752  001564  0E06               	movlw	6
  2753  001566  EC41  F00A         	call	_lcdCommand
  2754  00156A                     
  2755                           ;lcd.c: 114:     lcdCommand(0x0C);
  2756  00156A  0E0C               	movlw	12
  2757  00156C  EC41  F00A         	call	_lcdCommand
  2758  001570                     
  2759                           ;lcd.c: 115:     lcdCommand(0x01);
  2760  001570  0E01               	movlw	1
  2761  001572  EC41  F00A         	call	_lcdCommand
  2762  001576  0012               	return		;funcret
  2763  001578                     __end_of_lcdInit:
  2764                           	callstack 0
  2765                           
  2766 ;; *************** function _pinMode *****************
  2767 ;; Defined at:
  2768 ;;		line 54 in file "io.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  pin             2    0[COMRAM] int 
  2771 ;;  type            2    2[COMRAM] int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2783 ;;      Params:         4       0       0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0       0       0
  2785 ;;      Temps:          2       0       0       0       0       0       0
  2786 ;;      Totals:         6       0       0       0       0       0       0
  2787 ;;Total ram usage:        6 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; This function calls:
  2790 ;;		Nothing
  2791 ;; This function is called by:
  2792 ;;		_lcdInit
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           	psect	text15
  2797  000B46                     __ptext15:
  2798                           	callstack 0
  2799  000B46                     _pinMode:
  2800                           	callstack 29
  2801  000B46                     
  2802                           ;io.c: 56:     if(pin <8){
  2803  000B46  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2804  000B48  EFB1  F005         	goto	u1330
  2805  000B4C  5002               	movf	(pinMode@pin+1)^0,w,c
  2806  000B4E  E107               	bnz	u1331
  2807  000B50  0E08               	movlw	8
  2808  000B52  5C01               	subwf	pinMode@pin^0,w,c
  2809  000B54  B0D8               	btfsc	status,0,c
  2810  000B56  EFAF  F005         	goto	u1331
  2811  000B5A  EFB1  F005         	goto	u1330
  2812  000B5E                     u1331:
  2813  000B5E  EFDB  F005         	goto	l1817
  2814  000B62                     u1330:
  2815  000B62                     
  2816                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2817  000B62  5003               	movf	pinMode@type^0,w,c
  2818  000B64  1004               	iorwf	(pinMode@type+1)^0,w,c
  2819  000B66  B4D8               	btfsc	status,2,c
  2820  000B68  EFB8  F005         	goto	u1341
  2821  000B6C  EFBA  F005         	goto	u1340
  2822  000B70                     u1341:
  2823  000B70  EFCA  F005         	goto	l1815
  2824  000B74                     u1340:
  2825  000B74  C001  F005         	movff	pinMode@pin,??_pinMode
  2826  000B78  0E01               	movlw	1
  2827  000B7A  6E06               	movwf	(??_pinMode+1)^0,c
  2828  000B7C  2A05               	incf	??_pinMode^0,f,c
  2829  000B7E  EFC3  F005         	goto	u1354
  2830  000B82                     u1355:
  2831  000B82  90D8               	bcf	status,0,c
  2832  000B84  3606               	rlcf	(??_pinMode+1)^0,f,c
  2833  000B86                     u1354:
  2834  000B86  2E05               	decfsz	??_pinMode^0,f,c
  2835  000B88  EFC1  F005         	goto	u1355
  2836  000B8C  5006               	movf	(??_pinMode+1)^0,w,c
  2837  000B8E  1292               	iorwf	146,f,c	;volatile
  2838  000B90  EFC9  F006         	goto	l76
  2839  000B94                     l1815:
  2840  000B94  C001  F005         	movff	pinMode@pin,??_pinMode
  2841  000B98  0E01               	movlw	1
  2842  000B9A  6E06               	movwf	(??_pinMode+1)^0,c
  2843  000B9C  2A05               	incf	??_pinMode^0,f,c
  2844  000B9E  EFD3  F005         	goto	u1364
  2845  000BA2                     u1365:
  2846  000BA2  90D8               	bcf	status,0,c
  2847  000BA4  3606               	rlcf	(??_pinMode+1)^0,f,c
  2848  000BA6                     u1364:
  2849  000BA6  2E05               	decfsz	??_pinMode^0,f,c
  2850  000BA8  EFD1  F005         	goto	u1365
  2851  000BAC  5006               	movf	(??_pinMode+1)^0,w,c
  2852  000BAE  0AFF               	xorlw	255
  2853  000BB0  1692               	andwf	146,f,c	;volatile
  2854  000BB2  EFC9  F006         	goto	l76
  2855  000BB6                     l1817:
  2856  000BB6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2857  000BB8  EFE9  F005         	goto	u1370
  2858  000BBC  5002               	movf	(pinMode@pin+1)^0,w,c
  2859  000BBE  E107               	bnz	u1371
  2860  000BC0  0E10               	movlw	16
  2861  000BC2  5C01               	subwf	pinMode@pin^0,w,c
  2862  000BC4  B0D8               	btfsc	status,0,c
  2863  000BC6  EFE7  F005         	goto	u1371
  2864  000BCA  EFE9  F005         	goto	u1370
  2865  000BCE                     u1371:
  2866  000BCE  EF17  F006         	goto	l1825
  2867  000BD2                     u1370:
  2868  000BD2                     
  2869                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2870  000BD2  5003               	movf	pinMode@type^0,w,c
  2871  000BD4  1004               	iorwf	(pinMode@type+1)^0,w,c
  2872  000BD6  B4D8               	btfsc	status,2,c
  2873  000BD8  EFF0  F005         	goto	u1381
  2874  000BDC  EFF2  F005         	goto	u1380
  2875  000BE0                     u1381:
  2876  000BE0  EF04  F006         	goto	l1823
  2877  000BE4                     u1380:
  2878  000BE4  C001  F005         	movff	pinMode@pin,??_pinMode
  2879  000BE8  0EF8               	movlw	-8
  2880  000BEA  2605               	addwf	??_pinMode^0,f,c
  2881  000BEC  0E01               	movlw	1
  2882  000BEE  6E06               	movwf	(??_pinMode+1)^0,c
  2883  000BF0  2A05               	incf	??_pinMode^0,f,c
  2884  000BF2  EFFD  F005         	goto	u1394
  2885  000BF6                     u1395:
  2886  000BF6  90D8               	bcf	status,0,c
  2887  000BF8  3606               	rlcf	(??_pinMode+1)^0,f,c
  2888  000BFA                     u1394:
  2889  000BFA  2E05               	decfsz	??_pinMode^0,f,c
  2890  000BFC  EFFB  F005         	goto	u1395
  2891  000C00  5006               	movf	(??_pinMode+1)^0,w,c
  2892  000C02  1293               	iorwf	147,f,c	;volatile
  2893  000C04  EFC9  F006         	goto	l76
  2894  000C08                     l1823:
  2895  000C08  C001  F005         	movff	pinMode@pin,??_pinMode
  2896  000C0C  0EF8               	movlw	-8
  2897  000C0E  2605               	addwf	??_pinMode^0,f,c
  2898  000C10  0E01               	movlw	1
  2899  000C12  6E06               	movwf	(??_pinMode+1)^0,c
  2900  000C14  2A05               	incf	??_pinMode^0,f,c
  2901  000C16  EF0F  F006         	goto	u1404
  2902  000C1A                     u1405:
  2903  000C1A  90D8               	bcf	status,0,c
  2904  000C1C  3606               	rlcf	(??_pinMode+1)^0,f,c
  2905  000C1E                     u1404:
  2906  000C1E  2E05               	decfsz	??_pinMode^0,f,c
  2907  000C20  EF0D  F006         	goto	u1405
  2908  000C24  5006               	movf	(??_pinMode+1)^0,w,c
  2909  000C26  0AFF               	xorlw	255
  2910  000C28  1693               	andwf	147,f,c	;volatile
  2911  000C2A  EFC9  F006         	goto	l76
  2912  000C2E                     l1825:
  2913  000C2E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2914  000C30  EF25  F006         	goto	u1410
  2915  000C34  5002               	movf	(pinMode@pin+1)^0,w,c
  2916  000C36  E107               	bnz	u1411
  2917  000C38  0E18               	movlw	24
  2918  000C3A  5C01               	subwf	pinMode@pin^0,w,c
  2919  000C3C  B0D8               	btfsc	status,0,c
  2920  000C3E  EF23  F006         	goto	u1411
  2921  000C42  EF25  F006         	goto	u1410
  2922  000C46                     u1411:
  2923  000C46  EF53  F006         	goto	l1833
  2924  000C4A                     u1410:
  2925  000C4A                     
  2926                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2927  000C4A  5003               	movf	pinMode@type^0,w,c
  2928  000C4C  1004               	iorwf	(pinMode@type+1)^0,w,c
  2929  000C4E  B4D8               	btfsc	status,2,c
  2930  000C50  EF2C  F006         	goto	u1421
  2931  000C54  EF2E  F006         	goto	u1420
  2932  000C58                     u1421:
  2933  000C58  EF40  F006         	goto	l1831
  2934  000C5C                     u1420:
  2935  000C5C  C001  F005         	movff	pinMode@pin,??_pinMode
  2936  000C60  0EF0               	movlw	-16
  2937  000C62  2605               	addwf	??_pinMode^0,f,c
  2938  000C64  0E01               	movlw	1
  2939  000C66  6E06               	movwf	(??_pinMode+1)^0,c
  2940  000C68  2A05               	incf	??_pinMode^0,f,c
  2941  000C6A  EF39  F006         	goto	u1434
  2942  000C6E                     u1435:
  2943  000C6E  90D8               	bcf	status,0,c
  2944  000C70  3606               	rlcf	(??_pinMode+1)^0,f,c
  2945  000C72                     u1434:
  2946  000C72  2E05               	decfsz	??_pinMode^0,f,c
  2947  000C74  EF37  F006         	goto	u1435
  2948  000C78  5006               	movf	(??_pinMode+1)^0,w,c
  2949  000C7A  1294               	iorwf	148,f,c	;volatile
  2950  000C7C  EFC9  F006         	goto	l76
  2951  000C80                     l1831:
  2952  000C80  C001  F005         	movff	pinMode@pin,??_pinMode
  2953  000C84  0EF0               	movlw	-16
  2954  000C86  2605               	addwf	??_pinMode^0,f,c
  2955  000C88  0E01               	movlw	1
  2956  000C8A  6E06               	movwf	(??_pinMode+1)^0,c
  2957  000C8C  2A05               	incf	??_pinMode^0,f,c
  2958  000C8E  EF4B  F006         	goto	u1444
  2959  000C92                     u1445:
  2960  000C92  90D8               	bcf	status,0,c
  2961  000C94  3606               	rlcf	(??_pinMode+1)^0,f,c
  2962  000C96                     u1444:
  2963  000C96  2E05               	decfsz	??_pinMode^0,f,c
  2964  000C98  EF49  F006         	goto	u1445
  2965  000C9C  5006               	movf	(??_pinMode+1)^0,w,c
  2966  000C9E  0AFF               	xorlw	255
  2967  000CA0  1694               	andwf	148,f,c	;volatile
  2968  000CA2  EFC9  F006         	goto	l76
  2969  000CA6                     l1833:
  2970  000CA6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2971  000CA8  EF61  F006         	goto	u1450
  2972  000CAC  5002               	movf	(pinMode@pin+1)^0,w,c
  2973  000CAE  E107               	bnz	u1451
  2974  000CB0  0E20               	movlw	32
  2975  000CB2  5C01               	subwf	pinMode@pin^0,w,c
  2976  000CB4  B0D8               	btfsc	status,0,c
  2977  000CB6  EF5F  F006         	goto	u1451
  2978  000CBA  EF61  F006         	goto	u1450
  2979  000CBE                     u1451:
  2980  000CBE  EF8F  F006         	goto	l1841
  2981  000CC2                     u1450:
  2982  000CC2                     
  2983                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2984  000CC2  5003               	movf	pinMode@type^0,w,c
  2985  000CC4  1004               	iorwf	(pinMode@type+1)^0,w,c
  2986  000CC6  B4D8               	btfsc	status,2,c
  2987  000CC8  EF68  F006         	goto	u1461
  2988  000CCC  EF6A  F006         	goto	u1460
  2989  000CD0                     u1461:
  2990  000CD0  EF7C  F006         	goto	l1839
  2991  000CD4                     u1460:
  2992  000CD4  C001  F005         	movff	pinMode@pin,??_pinMode
  2993  000CD8  0EE8               	movlw	-24
  2994  000CDA  2605               	addwf	??_pinMode^0,f,c
  2995  000CDC  0E01               	movlw	1
  2996  000CDE  6E06               	movwf	(??_pinMode+1)^0,c
  2997  000CE0  2A05               	incf	??_pinMode^0,f,c
  2998  000CE2  EF75  F006         	goto	u1474
  2999  000CE6                     u1475:
  3000  000CE6  90D8               	bcf	status,0,c
  3001  000CE8  3606               	rlcf	(??_pinMode+1)^0,f,c
  3002  000CEA                     u1474:
  3003  000CEA  2E05               	decfsz	??_pinMode^0,f,c
  3004  000CEC  EF73  F006         	goto	u1475
  3005  000CF0  5006               	movf	(??_pinMode+1)^0,w,c
  3006  000CF2  1295               	iorwf	149,f,c	;volatile
  3007  000CF4  EFC9  F006         	goto	l76
  3008  000CF8                     l1839:
  3009  000CF8  C001  F005         	movff	pinMode@pin,??_pinMode
  3010  000CFC  0EE8               	movlw	-24
  3011  000CFE  2605               	addwf	??_pinMode^0,f,c
  3012  000D00  0E01               	movlw	1
  3013  000D02  6E06               	movwf	(??_pinMode+1)^0,c
  3014  000D04  2A05               	incf	??_pinMode^0,f,c
  3015  000D06  EF87  F006         	goto	u1484
  3016  000D0A                     u1485:
  3017  000D0A  90D8               	bcf	status,0,c
  3018  000D0C  3606               	rlcf	(??_pinMode+1)^0,f,c
  3019  000D0E                     u1484:
  3020  000D0E  2E05               	decfsz	??_pinMode^0,f,c
  3021  000D10  EF85  F006         	goto	u1485
  3022  000D14  5006               	movf	(??_pinMode+1)^0,w,c
  3023  000D16  0AFF               	xorlw	255
  3024  000D18  1695               	andwf	149,f,c	;volatile
  3025  000D1A  EFC9  F006         	goto	l76
  3026  000D1E                     l1841:
  3027  000D1E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  3028  000D20  EF9D  F006         	goto	u1490
  3029  000D24  5002               	movf	(pinMode@pin+1)^0,w,c
  3030  000D26  E107               	bnz	u1491
  3031  000D28  0E28               	movlw	40
  3032  000D2A  5C01               	subwf	pinMode@pin^0,w,c
  3033  000D2C  B0D8               	btfsc	status,0,c
  3034  000D2E  EF9B  F006         	goto	u1491
  3035  000D32  EF9D  F006         	goto	u1490
  3036  000D36                     u1491:
  3037  000D36  EFC9  F006         	goto	l76
  3038  000D3A                     u1490:
  3039  000D3A                     
  3040                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  3041  000D3A  5003               	movf	pinMode@type^0,w,c
  3042  000D3C  1004               	iorwf	(pinMode@type+1)^0,w,c
  3043  000D3E  B4D8               	btfsc	status,2,c
  3044  000D40  EFA4  F006         	goto	u1501
  3045  000D44  EFA6  F006         	goto	u1500
  3046  000D48                     u1501:
  3047  000D48  EFB8  F006         	goto	l1847
  3048  000D4C                     u1500:
  3049  000D4C  C001  F005         	movff	pinMode@pin,??_pinMode
  3050  000D50  0EE0               	movlw	-32
  3051  000D52  2605               	addwf	??_pinMode^0,f,c
  3052  000D54  0E01               	movlw	1
  3053  000D56  6E06               	movwf	(??_pinMode+1)^0,c
  3054  000D58  2A05               	incf	??_pinMode^0,f,c
  3055  000D5A  EFB1  F006         	goto	u1514
  3056  000D5E                     u1515:
  3057  000D5E  90D8               	bcf	status,0,c
  3058  000D60  3606               	rlcf	(??_pinMode+1)^0,f,c
  3059  000D62                     u1514:
  3060  000D62  2E05               	decfsz	??_pinMode^0,f,c
  3061  000D64  EFAF  F006         	goto	u1515
  3062  000D68  5006               	movf	(??_pinMode+1)^0,w,c
  3063  000D6A  1296               	iorwf	150,f,c	;volatile
  3064  000D6C  EFC9  F006         	goto	l76
  3065  000D70                     l1847:
  3066  000D70  C001  F005         	movff	pinMode@pin,??_pinMode
  3067  000D74  0EE0               	movlw	-32
  3068  000D76  2605               	addwf	??_pinMode^0,f,c
  3069  000D78  0E01               	movlw	1
  3070  000D7A  6E06               	movwf	(??_pinMode+1)^0,c
  3071  000D7C  2A05               	incf	??_pinMode^0,f,c
  3072  000D7E  EFC3  F006         	goto	u1524
  3073  000D82                     u1525:
  3074  000D82  90D8               	bcf	status,0,c
  3075  000D84  3606               	rlcf	(??_pinMode+1)^0,f,c
  3076  000D86                     u1524:
  3077  000D86  2E05               	decfsz	??_pinMode^0,f,c
  3078  000D88  EFC1  F006         	goto	u1525
  3079  000D8C  5006               	movf	(??_pinMode+1)^0,w,c
  3080  000D8E  0AFF               	xorlw	255
  3081  000D90  1696               	andwf	150,f,c	;volatile
  3082  000D92                     l76:
  3083  000D92  0012               	return		;funcret
  3084  000D94                     __end_of_pinMode:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _lcdCommand *****************
  3088 ;; Defined at:
  3089 ;;		line 50 in file "lcd.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  cmd             1    wreg     unsigned char 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  cmd             1    7[COMRAM] unsigned char 
  3094 ;;  old_D           1    6[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 2
  3111 ;; This function calls:
  3112 ;;		_Delay2ms
  3113 ;;		_Delay40us
  3114 ;;		_digitalWrite
  3115 ;; This function is called by:
  3116 ;;		_lcdInit
  3117 ;;		_lcdPosition
  3118 ;;		_main
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text16
  3123  001482                     __ptext16:
  3124                           	callstack 0
  3125  001482                     _lcdCommand:
  3126                           	callstack 26
  3127                           
  3128                           ;incstack = 0
  3129                           ;lcdCommand@cmd stored from wreg
  3130  001482  6E08               	movwf	lcdCommand@cmd^0,c
  3131  001484                     
  3132                           ;lcd.c: 50: void lcdCommand(unsigned char cmd);lcd.c: 51: {;lcd.c: 52:     unsigned char
      +                           old_D;;lcd.c: 53:     old_D = PORTD;
  3133  001484  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  3134  001488                     
  3135                           ;lcd.c: 56:     TRISD = 0x00;
  3136  001488  0E00               	movlw	0
  3137  00148A  6E95               	movwf	149,c	;volatile
  3138  00148C                     
  3139                           ;lcd.c: 58:     digitalWrite(PIN_E2, 0);
  3140  00148C  0E00               	movlw	0
  3141  00148E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3142  001490  0E22               	movlw	34
  3143  001492  6E01               	movwf	digitalWrite@pin^0,c
  3144  001494  0E00               	movlw	0
  3145  001496  6E04               	movwf	(digitalWrite@value+1)^0,c
  3146  001498  0E00               	movlw	0
  3147  00149A  6E03               	movwf	digitalWrite@value^0,c
  3148  00149C  ECCA  F006         	call	_digitalWrite	;wreg free
  3149  0014A0                     
  3150                           ;lcd.c: 59:     PORTD = cmd;
  3151  0014A0  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  3152  0014A4                     
  3153                           ;lcd.c: 61:     digitalWrite(PIN_E1, 1);
  3154  0014A4  0E00               	movlw	0
  3155  0014A6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3156  0014A8  0E21               	movlw	33
  3157  0014AA  6E01               	movwf	digitalWrite@pin^0,c
  3158  0014AC  0E00               	movlw	0
  3159  0014AE  6E04               	movwf	(digitalWrite@value+1)^0,c
  3160  0014B0  0E01               	movlw	1
  3161  0014B2  6E03               	movwf	digitalWrite@value^0,c
  3162  0014B4  ECCA  F006         	call	_digitalWrite	;wreg free
  3163  0014B8                     
  3164                           ;lcd.c: 62:     digitalWrite(PIN_E1, 0);
  3165  0014B8  0E00               	movlw	0
  3166  0014BA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3167  0014BC  0E21               	movlw	33
  3168  0014BE  6E01               	movwf	digitalWrite@pin^0,c
  3169  0014C0  0E00               	movlw	0
  3170  0014C2  6E04               	movwf	(digitalWrite@value+1)^0,c
  3171  0014C4  0E00               	movlw	0
  3172  0014C6  6E03               	movwf	digitalWrite@value^0,c
  3173  0014C8  ECCA  F006         	call	_digitalWrite	;wreg free
  3174  0014CC                     
  3175                           ;lcd.c: 65:     PORTD = old_D;
  3176  0014CC  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  3177  0014D0                     
  3178                           ;lcd.c: 67:     if ((cmd == 0x02) || (cmd == 0x01)) {
  3179  0014D0  0E02               	movlw	2
  3180  0014D2  1808               	xorwf	lcdCommand@cmd^0,w,c
  3181  0014D4  B4D8               	btfsc	status,2,c
  3182  0014D6  EF6F  F00A         	goto	u1251
  3183  0014DA  EF71  F00A         	goto	u1250
  3184  0014DE                     u1251:
  3185  0014DE  EF79  F00A         	goto	l1767
  3186  0014E2                     u1250:
  3187  0014E2  0408               	decf	lcdCommand@cmd^0,w,c
  3188  0014E4  A4D8               	btfss	status,2,c
  3189  0014E6  EF77  F00A         	goto	u1261
  3190  0014EA  EF79  F00A         	goto	u1260
  3191  0014EE                     u1261:
  3192  0014EE  EF7D  F00A         	goto	l1769
  3193  0014F2                     u1260:
  3194  0014F2                     l1767:
  3195                           
  3196                           ;lcd.c: 68:         Delay2ms();
  3197  0014F2  EC25  F00C         	call	_Delay2ms	;wreg free
  3198                           
  3199                           ;lcd.c: 69:     } else {
  3200  0014F6  EF7F  F00A         	goto	l137
  3201  0014FA                     l1769:
  3202                           
  3203                           ;lcd.c: 70:         Delay40us();
  3204  0014FA  EC33  F00C         	call	_Delay40us	;wreg free
  3205  0014FE                     l137:
  3206  0014FE  0012               	return		;funcret
  3207  001500                     __end_of_lcdCommand:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _digitalWrite *****************
  3211 ;; Defined at:
  3212 ;;		line 14 in file "io.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  pin             2    0[COMRAM] int 
  3215 ;;  value           2    2[COMRAM] int 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3227 ;;      Params:         4       0       0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0
  3229 ;;      Temps:          2       0       0       0       0       0       0
  3230 ;;      Totals:         6       0       0       0       0       0       0
  3231 ;;Total ram usage:        6 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_lcdCommand
  3237 ;;		_lcdData
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text17
  3242  000D94                     __ptext17:
  3243                           	callstack 0
  3244  000D94                     _digitalWrite:
  3245                           	callstack 27
  3246  000D94                     
  3247                           ;io.c: 16:     if(pin <8){
  3248  000D94  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3249  000D96  EFD8  F006         	goto	u1050
  3250  000D9A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3251  000D9C  E107               	bnz	u1051
  3252  000D9E  0E08               	movlw	8
  3253  000DA0  5C01               	subwf	digitalWrite@pin^0,w,c
  3254  000DA2  B0D8               	btfsc	status,0,c
  3255  000DA4  EFD6  F006         	goto	u1051
  3256  000DA8  EFD8  F006         	goto	u1050
  3257  000DAC                     u1051:
  3258  000DAC  EF02  F007         	goto	l1717
  3259  000DB0                     u1050:
  3260  000DB0                     
  3261                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  3262  000DB0  5003               	movf	digitalWrite@value^0,w,c
  3263  000DB2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3264  000DB4  B4D8               	btfsc	status,2,c
  3265  000DB6  EFDF  F006         	goto	u1061
  3266  000DBA  EFE1  F006         	goto	u1060
  3267  000DBE                     u1061:
  3268  000DBE  EFF1  F006         	goto	l1715
  3269  000DC2                     u1060:
  3270  000DC2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3271  000DC6  0E01               	movlw	1
  3272  000DC8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3273  000DCA  2A05               	incf	??_digitalWrite^0,f,c
  3274  000DCC  EFEA  F006         	goto	u1074
  3275  000DD0                     u1075:
  3276  000DD0  90D8               	bcf	status,0,c
  3277  000DD2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3278  000DD4                     u1074:
  3279  000DD4  2E05               	decfsz	??_digitalWrite^0,f,c
  3280  000DD6  EFE8  F006         	goto	u1075
  3281  000DDA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3282  000DDC  1280               	iorwf	128,f,c	;volatile
  3283  000DDE  EFF0  F007         	goto	l42
  3284  000DE2                     l1715:
  3285  000DE2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3286  000DE6  0E01               	movlw	1
  3287  000DE8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3288  000DEA  2A05               	incf	??_digitalWrite^0,f,c
  3289  000DEC  EFFA  F006         	goto	u1084
  3290  000DF0                     u1085:
  3291  000DF0  90D8               	bcf	status,0,c
  3292  000DF2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3293  000DF4                     u1084:
  3294  000DF4  2E05               	decfsz	??_digitalWrite^0,f,c
  3295  000DF6  EFF8  F006         	goto	u1085
  3296  000DFA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3297  000DFC  0AFF               	xorlw	255
  3298  000DFE  1680               	andwf	128,f,c	;volatile
  3299  000E00  EFF0  F007         	goto	l42
  3300  000E04                     l1717:
  3301  000E04  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3302  000E06  EF10  F007         	goto	u1090
  3303  000E0A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3304  000E0C  E107               	bnz	u1091
  3305  000E0E  0E10               	movlw	16
  3306  000E10  5C01               	subwf	digitalWrite@pin^0,w,c
  3307  000E12  B0D8               	btfsc	status,0,c
  3308  000E14  EF0E  F007         	goto	u1091
  3309  000E18  EF10  F007         	goto	u1090
  3310  000E1C                     u1091:
  3311  000E1C  EF3E  F007         	goto	l1725
  3312  000E20                     u1090:
  3313  000E20                     
  3314                           ;io.c: 20:         pin -=8;
  3315  000E20  0EF8               	movlw	248
  3316  000E22  2601               	addwf	digitalWrite@pin^0,f,c
  3317  000E24  0EFF               	movlw	255
  3318  000E26  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3319                           
  3320                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  3321  000E28  5003               	movf	digitalWrite@value^0,w,c
  3322  000E2A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3323  000E2C  B4D8               	btfsc	status,2,c
  3324  000E2E  EF1B  F007         	goto	u1101
  3325  000E32  EF1D  F007         	goto	u1100
  3326  000E36                     u1101:
  3327  000E36  EF2D  F007         	goto	l1723
  3328  000E3A                     u1100:
  3329  000E3A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3330  000E3E  0E01               	movlw	1
  3331  000E40  6E06               	movwf	(??_digitalWrite+1)^0,c
  3332  000E42  2A05               	incf	??_digitalWrite^0,f,c
  3333  000E44  EF26  F007         	goto	u1114
  3334  000E48                     u1115:
  3335  000E48  90D8               	bcf	status,0,c
  3336  000E4A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3337  000E4C                     u1114:
  3338  000E4C  2E05               	decfsz	??_digitalWrite^0,f,c
  3339  000E4E  EF24  F007         	goto	u1115
  3340  000E52  5006               	movf	(??_digitalWrite+1)^0,w,c
  3341  000E54  1281               	iorwf	129,f,c	;volatile
  3342  000E56  EFF0  F007         	goto	l42
  3343  000E5A                     l1723:
  3344  000E5A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3345  000E5E  0E01               	movlw	1
  3346  000E60  6E06               	movwf	(??_digitalWrite+1)^0,c
  3347  000E62  2A05               	incf	??_digitalWrite^0,f,c
  3348  000E64  EF36  F007         	goto	u1124
  3349  000E68                     u1125:
  3350  000E68  90D8               	bcf	status,0,c
  3351  000E6A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3352  000E6C                     u1124:
  3353  000E6C  2E05               	decfsz	??_digitalWrite^0,f,c
  3354  000E6E  EF34  F007         	goto	u1125
  3355  000E72  5006               	movf	(??_digitalWrite+1)^0,w,c
  3356  000E74  0AFF               	xorlw	255
  3357  000E76  1681               	andwf	129,f,c	;volatile
  3358  000E78  EFF0  F007         	goto	l42
  3359  000E7C                     l1725:
  3360  000E7C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3361  000E7E  EF4C  F007         	goto	u1130
  3362  000E82  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3363  000E84  E107               	bnz	u1131
  3364  000E86  0E18               	movlw	24
  3365  000E88  5C01               	subwf	digitalWrite@pin^0,w,c
  3366  000E8A  B0D8               	btfsc	status,0,c
  3367  000E8C  EF4A  F007         	goto	u1131
  3368  000E90  EF4C  F007         	goto	u1130
  3369  000E94                     u1131:
  3370  000E94  EF7A  F007         	goto	l1733
  3371  000E98                     u1130:
  3372  000E98                     
  3373                           ;io.c: 24:         pin -=16;
  3374  000E98  0EF0               	movlw	240
  3375  000E9A  2601               	addwf	digitalWrite@pin^0,f,c
  3376  000E9C  0EFF               	movlw	255
  3377  000E9E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3378                           
  3379                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  3380  000EA0  5003               	movf	digitalWrite@value^0,w,c
  3381  000EA2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3382  000EA4  B4D8               	btfsc	status,2,c
  3383  000EA6  EF57  F007         	goto	u1141
  3384  000EAA  EF59  F007         	goto	u1140
  3385  000EAE                     u1141:
  3386  000EAE  EF69  F007         	goto	l1731
  3387  000EB2                     u1140:
  3388  000EB2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3389  000EB6  0E01               	movlw	1
  3390  000EB8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3391  000EBA  2A05               	incf	??_digitalWrite^0,f,c
  3392  000EBC  EF62  F007         	goto	u1154
  3393  000EC0                     u1155:
  3394  000EC0  90D8               	bcf	status,0,c
  3395  000EC2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3396  000EC4                     u1154:
  3397  000EC4  2E05               	decfsz	??_digitalWrite^0,f,c
  3398  000EC6  EF60  F007         	goto	u1155
  3399  000ECA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3400  000ECC  1282               	iorwf	130,f,c	;volatile
  3401  000ECE  EFF0  F007         	goto	l42
  3402  000ED2                     l1731:
  3403  000ED2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3404  000ED6  0E01               	movlw	1
  3405  000ED8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3406  000EDA  2A05               	incf	??_digitalWrite^0,f,c
  3407  000EDC  EF72  F007         	goto	u1164
  3408  000EE0                     u1165:
  3409  000EE0  90D8               	bcf	status,0,c
  3410  000EE2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3411  000EE4                     u1164:
  3412  000EE4  2E05               	decfsz	??_digitalWrite^0,f,c
  3413  000EE6  EF70  F007         	goto	u1165
  3414  000EEA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3415  000EEC  0AFF               	xorlw	255
  3416  000EEE  1682               	andwf	130,f,c	;volatile
  3417  000EF0  EFF0  F007         	goto	l42
  3418  000EF4                     l1733:
  3419  000EF4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3420  000EF6  EF88  F007         	goto	u1170
  3421  000EFA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3422  000EFC  E107               	bnz	u1171
  3423  000EFE  0E20               	movlw	32
  3424  000F00  5C01               	subwf	digitalWrite@pin^0,w,c
  3425  000F02  B0D8               	btfsc	status,0,c
  3426  000F04  EF86  F007         	goto	u1171
  3427  000F08  EF88  F007         	goto	u1170
  3428  000F0C                     u1171:
  3429  000F0C  EFB6  F007         	goto	l1741
  3430  000F10                     u1170:
  3431  000F10                     
  3432                           ;io.c: 28:         pin -=24;
  3433  000F10  0EE8               	movlw	232
  3434  000F12  2601               	addwf	digitalWrite@pin^0,f,c
  3435  000F14  0EFF               	movlw	255
  3436  000F16  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3437                           
  3438                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3439  000F18  5003               	movf	digitalWrite@value^0,w,c
  3440  000F1A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3441  000F1C  B4D8               	btfsc	status,2,c
  3442  000F1E  EF93  F007         	goto	u1181
  3443  000F22  EF95  F007         	goto	u1180
  3444  000F26                     u1181:
  3445  000F26  EFA5  F007         	goto	l1739
  3446  000F2A                     u1180:
  3447  000F2A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3448  000F2E  0E01               	movlw	1
  3449  000F30  6E06               	movwf	(??_digitalWrite+1)^0,c
  3450  000F32  2A05               	incf	??_digitalWrite^0,f,c
  3451  000F34  EF9E  F007         	goto	u1194
  3452  000F38                     u1195:
  3453  000F38  90D8               	bcf	status,0,c
  3454  000F3A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3455  000F3C                     u1194:
  3456  000F3C  2E05               	decfsz	??_digitalWrite^0,f,c
  3457  000F3E  EF9C  F007         	goto	u1195
  3458  000F42  5006               	movf	(??_digitalWrite+1)^0,w,c
  3459  000F44  1283               	iorwf	131,f,c	;volatile
  3460  000F46  EFF0  F007         	goto	l42
  3461  000F4A                     l1739:
  3462  000F4A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3463  000F4E  0E01               	movlw	1
  3464  000F50  6E06               	movwf	(??_digitalWrite+1)^0,c
  3465  000F52  2A05               	incf	??_digitalWrite^0,f,c
  3466  000F54  EFAE  F007         	goto	u1204
  3467  000F58                     u1205:
  3468  000F58  90D8               	bcf	status,0,c
  3469  000F5A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3470  000F5C                     u1204:
  3471  000F5C  2E05               	decfsz	??_digitalWrite^0,f,c
  3472  000F5E  EFAC  F007         	goto	u1205
  3473  000F62  5006               	movf	(??_digitalWrite+1)^0,w,c
  3474  000F64  0AFF               	xorlw	255
  3475  000F66  1683               	andwf	131,f,c	;volatile
  3476  000F68  EFF0  F007         	goto	l42
  3477  000F6C                     l1741:
  3478  000F6C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3479  000F6E  EFC4  F007         	goto	u1210
  3480  000F72  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3481  000F74  E107               	bnz	u1211
  3482  000F76  0E28               	movlw	40
  3483  000F78  5C01               	subwf	digitalWrite@pin^0,w,c
  3484  000F7A  B0D8               	btfsc	status,0,c
  3485  000F7C  EFC2  F007         	goto	u1211
  3486  000F80  EFC4  F007         	goto	u1210
  3487  000F84                     u1211:
  3488  000F84  EFF0  F007         	goto	l42
  3489  000F88                     u1210:
  3490  000F88                     
  3491                           ;io.c: 32:         pin -=32;
  3492  000F88  0EE0               	movlw	224
  3493  000F8A  2601               	addwf	digitalWrite@pin^0,f,c
  3494  000F8C  0EFF               	movlw	255
  3495  000F8E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3496                           
  3497                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3498  000F90  5003               	movf	digitalWrite@value^0,w,c
  3499  000F92  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3500  000F94  B4D8               	btfsc	status,2,c
  3501  000F96  EFCF  F007         	goto	u1221
  3502  000F9A  EFD1  F007         	goto	u1220
  3503  000F9E                     u1221:
  3504  000F9E  EFE1  F007         	goto	l1747
  3505  000FA2                     u1220:
  3506  000FA2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3507  000FA6  0E01               	movlw	1
  3508  000FA8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3509  000FAA  2A05               	incf	??_digitalWrite^0,f,c
  3510  000FAC  EFDA  F007         	goto	u1234
  3511  000FB0                     u1235:
  3512  000FB0  90D8               	bcf	status,0,c
  3513  000FB2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3514  000FB4                     u1234:
  3515  000FB4  2E05               	decfsz	??_digitalWrite^0,f,c
  3516  000FB6  EFD8  F007         	goto	u1235
  3517  000FBA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3518  000FBC  1284               	iorwf	132,f,c	;volatile
  3519  000FBE  EFF0  F007         	goto	l42
  3520  000FC2                     l1747:
  3521  000FC2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3522  000FC6  0E01               	movlw	1
  3523  000FC8  6E06               	movwf	(??_digitalWrite+1)^0,c
  3524  000FCA  2A05               	incf	??_digitalWrite^0,f,c
  3525  000FCC  EFEA  F007         	goto	u1244
  3526  000FD0                     u1245:
  3527  000FD0  90D8               	bcf	status,0,c
  3528  000FD2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3529  000FD4                     u1244:
  3530  000FD4  2E05               	decfsz	??_digitalWrite^0,f,c
  3531  000FD6  EFE8  F007         	goto	u1245
  3532  000FDA  5006               	movf	(??_digitalWrite+1)^0,w,c
  3533  000FDC  0AFF               	xorlw	255
  3534  000FDE  1684               	andwf	132,f,c	;volatile
  3535  000FE0                     l42:
  3536  000FE0  0012               	return		;funcret
  3537  000FE2                     __end_of_digitalWrite:
  3538                           	callstack 0
  3539                           
  3540 ;; *************** function _Delay2ms *****************
  3541 ;; Defined at:
  3542 ;;		line 39 in file "lcd.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;		None
  3545 ;; Auto vars:     Size  Location     Type
  3546 ;;  i               1    1[COMRAM] unsigned char 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  1    wreg      void 
  3549 ;; Registers used:
  3550 ;;		wreg, status,2, status,0, cstack
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3556 ;;      Params:         0       0       0       0       0       0       0
  3557 ;;      Locals:         1       0       0       0       0       0       0
  3558 ;;      Temps:          0       0       0       0       0       0       0
  3559 ;;      Totals:         1       0       0       0       0       0       0
  3560 ;;Total ram usage:        1 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 1
  3563 ;; This function calls:
  3564 ;;		_Delay40us
  3565 ;; This function is called by:
  3566 ;;		_lcdCommand
  3567 ;;		_lcdInit
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text18
  3572  00184A                     __ptext18:
  3573                           	callstack 0
  3574  00184A                     _Delay2ms:
  3575                           	callstack 26
  3576  00184A                     
  3577                           ;lcd.c: 41:  unsigned char i;;lcd.c: 42:  for(i=0; i < 50; i++)
  3578  00184A  0E00               	movlw	0
  3579  00184C  6E02               	movwf	Delay2ms@i^0,c
  3580  00184E                     l1065:
  3581                           
  3582                           ;lcd.c: 43:  {;lcd.c: 44:   Delay40us();
  3583  00184E  EC33  F00C         	call	_Delay40us	;wreg free
  3584  001852                     
  3585                           ;lcd.c: 45:  }
  3586  001852  2A02               	incf	Delay2ms@i^0,f,c
  3587  001854  0E31               	movlw	49
  3588  001856  6402               	cpfsgt	Delay2ms@i^0,c
  3589  001858  EF30  F00C         	goto	u221
  3590  00185C  EF32  F00C         	goto	u220
  3591  001860                     u221:
  3592  001860  EF27  F00C         	goto	l1065
  3593  001864                     u220:
  3594  001864  0012               	return		;funcret
  3595  001866                     __end_of_Delay2ms:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _Delay40us *****************
  3599 ;; Defined at:
  3600 ;;		line 33 in file "lcd.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  i               1    0[COMRAM] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3614 ;;      Params:         0       0       0       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0
  3617 ;;      Totals:         1       0       0       0       0       0       0
  3618 ;;Total ram usage:        1 bytes
  3619 ;; Hardware stack levels used: 1
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_Delay2ms
  3624 ;;		_lcdCommand
  3625 ;;		_lcdData
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text19
  3630  001866                     __ptext19:
  3631                           	callstack 0
  3632  001866                     _Delay40us:
  3633                           	callstack 27
  3634  001866                     
  3635                           ;lcd.c: 35:  unsigned char i;;lcd.c: 36:  for(i=0; i < 25; i++);
  3636  001866  0E00               	movlw	0
  3637  001868  6E01               	movwf	Delay40us@i^0,c
  3638  00186A                     l1015:
  3639  00186A  2A01               	incf	Delay40us@i^0,f,c
  3640  00186C  0E18               	movlw	24
  3641  00186E  6401               	cpfsgt	Delay40us@i^0,c
  3642  001870  EF3C  F00C         	goto	u11
  3643  001874  EF3E  F00C         	goto	u10
  3644  001878                     u11:
  3645  001878  EF35  F00C         	goto	l1015
  3646  00187C                     u10:
  3647  00187C  0012               	return		;funcret
  3648  00187E                     __end_of_Delay40us:
  3649                           	callstack 0
  3650                           
  3651 ;; *************** function _kpRead *****************
  3652 ;; Defined at:
  3653 ;;		line 35 in file "keypad.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;		None
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  2    0[COMRAM] unsigned int 
  3660 ;; Registers used:
  3661 ;;		None
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3667 ;;      Params:         2       0       0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0
  3670 ;;      Totals:         2       0       0       0       0       0       0
  3671 ;;Total ram usage:        2 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; This function calls:
  3674 ;;		Nothing
  3675 ;; This function is called by:
  3676 ;;		_main
  3677 ;; This function uses a non-reentrant model
  3678 ;;
  3679                           
  3680                           	psect	text20
  3681  0018A8                     __ptext20:
  3682                           	callstack 0
  3683  0018A8                     _kpRead:
  3684                           	callstack 30
  3685  0018A8                     
  3686                           ;keypad.c: 36:     return valor;
  3687  0018A8  C055  F001         	movff	_valor,?_kpRead
  3688  0018AC  C056  F002         	movff	_valor+1,?_kpRead+1
  3689  0018B0  0012               	return		;funcret
  3690  0018B2                     __end_of_kpRead:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _kpInit *****************
  3694 ;; Defined at:
  3695 ;;		line 87 in file "keypad.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3709 ;;      Params:         0       0       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_main
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text21
  3723  0018B2                     __ptext21:
  3724                           	callstack 0
  3725  0018B2                     _kpInit:
  3726                           	callstack 30
  3727  0018B2                     
  3728                           ;keypad.c: 89:     TRISB &= 0x07;
  3729  0018B2  0E07               	movlw	7
  3730  0018B4  1693               	andwf	147,f,c	;volatile
  3731                           
  3732                           ;keypad.c: 91:     TRISD |= 0x0f;
  3733  0018B6  0E0F               	movlw	15
  3734  0018B8  1295               	iorwf	149,f,c	;volatile
  3735  0018BA  0012               	return		;funcret
  3736  0018BC                     __end_of_kpInit:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function _kpDebounce *****************
  3740 ;; Defined at:
  3741 ;;		line 39 in file "keypad.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  k               2    6[COMRAM] int 
  3746 ;;  i               1    9[COMRAM] unsigned char 
  3747 ;;  j               1    8[COMRAM] unsigned char 
  3748 ;;  old_D           1    5[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  1    wreg      void 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0, prodl, prodh
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3758 ;;      Params:         0       0       0       0       0       0       0
  3759 ;;      Locals:         5       0       0       0       0       0       0
  3760 ;;      Temps:          5       0       0       0       0       0       0
  3761 ;;      Totals:        10       0       0       0       0       0       0
  3762 ;;Total ram usage:       10 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text22
  3772  000FE2                     __ptext22:
  3773                           	callstack 0
  3774  000FE2                     _kpDebounce:
  3775                           	callstack 30
  3776  000FE2                     
  3777                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3778  000FE2  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3779  000FE6                     
  3780                           ;keypad.c: 51:     TRISD |= 0x0f;
  3781  000FE6  0E0F               	movlw	15
  3782  000FE8  1295               	iorwf	149,f,c	;volatile
  3783  000FEA                     
  3784                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3785  000FEA  0E00               	movlw	0
  3786  000FEC  6E0A               	movwf	kpDebounce@i^0,c
  3787  000FEE                     l1283:
  3788                           
  3789                           ;keypad.c: 55:         TRISB &= 0xF8;
  3790  000FEE  0EF8               	movlw	248
  3791  000FF0  1693               	andwf	147,f,c	;volatile
  3792                           
  3793                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3794  000FF2  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3795  000FF6  0E01               	movlw	1
  3796  000FF8  6E02               	movwf	(??_kpDebounce+1)^0,c
  3797  000FFA  2A01               	incf	??_kpDebounce^0,f,c
  3798  000FFC  EF02  F008         	goto	u614
  3799  001000                     u615:
  3800  001000  90D8               	bcf	status,0,c
  3801  001002  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3802  001004                     u614:
  3803  001004  2E01               	decfsz	??_kpDebounce^0,f,c
  3804  001006  EF00  F008         	goto	u615
  3805  00100A  5002               	movf	(??_kpDebounce+1)^0,w,c
  3806  00100C  1293               	iorwf	147,f,c	;volatile
  3807                           
  3808                           ;keypad.c: 59:         PORTB |= 0x07;
  3809  00100E  0E07               	movlw	7
  3810  001010  1281               	iorwf	129,f,c	;volatile
  3811                           
  3812                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3813  001012  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3814  001016  0E01               	movlw	1
  3815  001018  6E02               	movwf	(??_kpDebounce+1)^0,c
  3816  00101A  2A01               	incf	??_kpDebounce^0,f,c
  3817  00101C  EF12  F008         	goto	u624
  3818  001020                     u625:
  3819  001020  90D8               	bcf	status,0,c
  3820  001022  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3821  001024                     u624:
  3822  001024  2E01               	decfsz	??_kpDebounce^0,f,c
  3823  001026  EF10  F008         	goto	u625
  3824  00102A  5002               	movf	(??_kpDebounce+1)^0,w,c
  3825  00102C  0AFF               	xorlw	255
  3826  00102E  1681               	andwf	129,f,c	;volatile
  3827  001030                     
  3828                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3829  001030  0E00               	movlw	0
  3830  001032  6E08               	movwf	(kpDebounce@k+1)^0,c
  3831  001034  0E00               	movlw	0
  3832  001036  6E07               	movwf	kpDebounce@k^0,c
  3833  001038                     l1291:
  3834  001038  4A07               	infsnz	kpDebounce@k^0,f,c
  3835  00103A  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3836  00103C  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3837  00103E  EF2A  F008         	goto	u631
  3838  001042  5008               	movf	(kpDebounce@k+1)^0,w,c
  3839  001044  E109               	bnz	u630
  3840  001046  0E0A               	movlw	10
  3841  001048  5C07               	subwf	kpDebounce@k^0,w,c
  3842  00104A  A0D8               	btfss	status,0,c
  3843  00104C  EF2A  F008         	goto	u631
  3844  001050  EF2C  F008         	goto	u630
  3845  001054                     u631:
  3846  001054  EF1C  F008         	goto	l1291
  3847  001058                     u630:
  3848  001058                     
  3849                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3850  001058  0E00               	movlw	0
  3851  00105A  6E09               	movwf	kpDebounce@j^0,c
  3852  00105C                     l1301:
  3853                           
  3854                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3855  00105C  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3856  001060  0E01               	movlw	1
  3857  001062  6E02               	movwf	(??_kpDebounce+1)^0,c
  3858  001064  2A01               	incf	??_kpDebounce^0,f,c
  3859  001066  EF37  F008         	goto	u644
  3860  00106A                     u645:
  3861  00106A  90D8               	bcf	status,0,c
  3862  00106C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3863  00106E                     u644:
  3864  00106E  2E01               	decfsz	??_kpDebounce^0,f,c
  3865  001070  EF35  F008         	goto	u645
  3866  001074  5002               	movf	(??_kpDebounce+1)^0,w,c
  3867  001076  1483               	andwf	131,w,c	;volatile
  3868  001078  0900               	iorlw	0
  3869  00107A  A4D8               	btfss	status,2,c
  3870  00107C  EF42  F008         	goto	u651
  3871  001080  EF44  F008         	goto	u650
  3872  001084                     u651:
  3873  001084  EF5C  F008         	goto	l1305
  3874  001088                     u650:
  3875  001088                     
  3876                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3877  001088  500A               	movf	kpDebounce@i^0,w,c
  3878  00108A  0D04               	mullw	4
  3879  00108C  50F3               	movf	243,w,c
  3880  00108E  2409               	addwf	kpDebounce@j^0,w,c
  3881  001090  6E01               	movwf	??_kpDebounce^0,c
  3882  001092  0E01               	movlw	1
  3883  001094  6E02               	movwf	(??_kpDebounce+1)^0,c
  3884  001096  0E00               	movlw	0
  3885  001098  6E03               	movwf	(??_kpDebounce+2)^0,c
  3886  00109A  2A01               	incf	??_kpDebounce^0,f,c
  3887  00109C  EF53  F008         	goto	u664
  3888  0010A0                     u665:
  3889  0010A0  90D8               	bcf	status,0,c
  3890  0010A2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3891  0010A4  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3892  0010A6                     u664:
  3893  0010A6  2E01               	decfsz	??_kpDebounce^0,f,c
  3894  0010A8  EF50  F008         	goto	u665
  3895  0010AC  5002               	movf	(??_kpDebounce+1)^0,w,c
  3896  0010AE  1253               	iorwf	kpDebounce@valorNovo^0,f,c
  3897  0010B0  5003               	movf	(??_kpDebounce+2)^0,w,c
  3898  0010B2  1254               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3899                           
  3900                           ;keypad.c: 69:             } else {
  3901  0010B4  EF76  F008         	goto	l1307
  3902  0010B8                     l1305:
  3903                           
  3904                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3905  0010B8  500A               	movf	kpDebounce@i^0,w,c
  3906  0010BA  0D04               	mullw	4
  3907  0010BC  50F3               	movf	243,w,c
  3908  0010BE  2409               	addwf	kpDebounce@j^0,w,c
  3909  0010C0  6E01               	movwf	??_kpDebounce^0,c
  3910  0010C2  0E01               	movlw	1
  3911  0010C4  6E02               	movwf	(??_kpDebounce+1)^0,c
  3912  0010C6  0E00               	movlw	0
  3913  0010C8  6E03               	movwf	(??_kpDebounce+2)^0,c
  3914  0010CA  2A01               	incf	??_kpDebounce^0,f,c
  3915  0010CC  EF6B  F008         	goto	u674
  3916  0010D0                     u675:
  3917  0010D0  90D8               	bcf	status,0,c
  3918  0010D2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3919  0010D4  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3920  0010D6                     u674:
  3921  0010D6  2E01               	decfsz	??_kpDebounce^0,f,c
  3922  0010D8  EF68  F008         	goto	u675
  3923  0010DC  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3924  0010DE  6E04               	movwf	(??_kpDebounce+3)^0,c
  3925  0010E0  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3926  0010E2  6E05               	movwf	(??_kpDebounce+4)^0,c
  3927  0010E4  5004               	movf	(??_kpDebounce+3)^0,w,c
  3928  0010E6  1653               	andwf	kpDebounce@valorNovo^0,f,c
  3929  0010E8  5005               	movf	(??_kpDebounce+4)^0,w,c
  3930  0010EA  1654               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3931  0010EC                     l1307:
  3932                           
  3933                           ;keypad.c: 72:         }
  3934  0010EC  2A09               	incf	kpDebounce@j^0,f,c
  3935  0010EE  0E03               	movlw	3
  3936  0010F0  6409               	cpfsgt	kpDebounce@j^0,c
  3937  0010F2  EF7D  F008         	goto	u681
  3938  0010F6  EF7F  F008         	goto	u680
  3939  0010FA                     u681:
  3940  0010FA  EF2E  F008         	goto	l1301
  3941  0010FE                     u680:
  3942  0010FE                     
  3943                           ;keypad.c: 73:     }
  3944  0010FE  2A0A               	incf	kpDebounce@i^0,f,c
  3945  001100  0E02               	movlw	2
  3946  001102  640A               	cpfsgt	kpDebounce@i^0,c
  3947  001104  EF86  F008         	goto	u691
  3948  001108  EF88  F008         	goto	u690
  3949  00110C                     u691:
  3950  00110C  EFF7  F007         	goto	l1283
  3951  001110                     u690:
  3952  001110                     
  3953                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3954  001110  5053               	movf	kpDebounce@valorNovo^0,w,c
  3955  001112  1851               	xorwf	kpDebounce@valorAntigo^0,w,c
  3956  001114  E107               	bnz	u701
  3957  001116  5054               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3958  001118  1852               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3959  00111A  A4D8               	btfss	status,2,c
  3960  00111C  EF92  F008         	goto	u701
  3961  001120  EF94  F008         	goto	u700
  3962  001124                     u701:
  3963  001124  EF97  F008         	goto	l1319
  3964  001128                     u700:
  3965  001128                     
  3966                           ;keypad.c: 75:         tempo--;
  3967  001128  065C               	decf	kpDebounce@tempo^0,f,c
  3968                           
  3969                           ;keypad.c: 76:     } else {
  3970  00112A  EF9D  F008         	goto	l107
  3971  00112E                     l1319:
  3972                           
  3973                           ;keypad.c: 77:         tempo = 10;
  3974  00112E  0E0A               	movlw	10
  3975  001130  6E5C               	movwf	kpDebounce@tempo^0,c
  3976  001132                     
  3977                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3978  001132  C053  F051         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3979  001136  C054  F052         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3980  00113A                     l107:
  3981                           
  3982                           ;keypad.c: 80:     if (tempo == 0) {
  3983  00113A  505C               	movf	kpDebounce@tempo^0,w,c
  3984  00113C  A4D8               	btfss	status,2,c
  3985  00113E  EFA3  F008         	goto	u711
  3986  001142  EFA5  F008         	goto	u710
  3987  001146                     u711:
  3988  001146  EFA9  F008         	goto	l108
  3989  00114A                     u710:
  3990  00114A                     
  3991                           ;keypad.c: 81:         valor = valorAntigo;
  3992  00114A  C051  F055         	movff	kpDebounce@valorAntigo,_valor
  3993  00114E  C052  F056         	movff	kpDebounce@valorAntigo+1,_valor+1
  3994  001152                     l108:
  3995                           
  3996                           ;keypad.c: 83:     PORTD = old_D;
  3997  001152  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3998  001156                     
  3999                           ;keypad.c: 84:     TRISD = 0x00;
  4000  001156  0E00               	movlw	0
  4001  001158  6E95               	movwf	149,c	;volatile
  4002  00115A  0012               	return		;funcret
  4003  00115C                     __end_of_kpDebounce:
  4004                           	callstack 0
  4005                           
  4006 ;; *************** function _atraso_ms *****************
  4007 ;; Defined at:
  4008 ;;		line 3 in file "atraso.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  t               2    0[COMRAM] unsigned int 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  i               2    2[COMRAM] volatile unsigned int 
  4013 ;;  k               1    5[COMRAM] volatile unsigned char 
  4014 ;;  j               1    4[COMRAM] volatile unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4024 ;;      Params:         2       0       0       0       0       0       0
  4025 ;;      Locals:         4       0       0       0       0       0       0
  4026 ;;      Temps:          0       0       0       0       0       0       0
  4027 ;;      Totals:         6       0       0       0       0       0       0
  4028 ;;Total ram usage:        6 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; This function calls:
  4031 ;;		Nothing
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text23
  4038  0016BC                     __ptext23:
  4039                           	callstack 0
  4040  0016BC                     _atraso_ms:
  4041                           	callstack 30
  4042  0016BC                     
  4043                           ;atraso.c: 4:     volatile unsigned char j, k;;atraso.c: 5:     volatile unsigned int i;
      +                          ;atraso.c: 6:     for (i = 0; i < t; i++) {
  4044  0016BC  0E00               	movlw	0
  4045  0016BE  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  4046  0016C0  0E00               	movlw	0
  4047  0016C2  6E03               	movwf	atraso_ms@i^0,c	;volatile
  4048  0016C4  EF84  F00B         	goto	l2017
  4049  0016C8                     l1995:
  4050                           
  4051                           ;atraso.c: 7:         for (j = 0; j < 41; j++) {
  4052  0016C8  0E00               	movlw	0
  4053  0016CA  6E05               	movwf	atraso_ms@j^0,c	;volatile
  4054  0016CC                     l1997:
  4055  0016CC  0E28               	movlw	40
  4056  0016CE  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  4057  0016D0  EF6C  F00B         	goto	u1641
  4058  0016D4  EF6E  F00B         	goto	u1640
  4059  0016D8                     u1641:
  4060  0016D8  EF70  F00B         	goto	l2001
  4061  0016DC                     u1640:
  4062  0016DC  EF82  F00B         	goto	l2015
  4063  0016E0                     l2001:
  4064                           
  4065                           ;atraso.c: 8:             for (k = 0; k < 3; k++);
  4066  0016E0  0E00               	movlw	0
  4067  0016E2  6E06               	movwf	atraso_ms@k^0,c	;volatile
  4068  0016E4                     l2003:
  4069  0016E4  0E02               	movlw	2
  4070  0016E6  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  4071  0016E8  EF78  F00B         	goto	u1651
  4072  0016EC  EF7A  F00B         	goto	u1650
  4073  0016F0                     u1651:
  4074  0016F0  EF7C  F00B         	goto	l2007
  4075  0016F4                     u1650:
  4076  0016F4  EF7F  F00B         	goto	l2011
  4077  0016F8                     l2007:
  4078  0016F8  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  4079  0016FA  EF72  F00B         	goto	l2003
  4080  0016FE                     l2011:
  4081                           
  4082                           ;atraso.c: 9:         }
  4083  0016FE  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  4084  001700  EF66  F00B         	goto	l1997
  4085  001704                     l2015:
  4086                           
  4087                           ;atraso.c: 10:     }
  4088  001704  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  4089  001706  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  4090  001708                     l2017:
  4091  001708  5001               	movf	atraso_ms@t^0,w,c
  4092  00170A  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  4093  00170C  5002               	movf	(atraso_ms@t+1)^0,w,c
  4094  00170E  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  4095  001710  A0D8               	btfss	status,0,c
  4096  001712  EF8D  F00B         	goto	u1661
  4097  001716  EF8F  F00B         	goto	u1660
  4098  00171A                     u1661:
  4099  00171A  EF64  F00B         	goto	l1995
  4100  00171E                     u1660:
  4101  00171E  0012               	return		;funcret
  4102  001720                     __end_of_atraso_ms:
  4103                           	callstack 0
  4104                           
  4105                           	psect	rparam
  4106  0000                     
  4107                           	psect	idloc
  4108                           
  4109                           ;Config register IDLOC0 @ 0x200000
  4110                           ;	unspecified, using default values
  4111  200000                     	org	2097152
  4112  200000  FF                 	db	255
  4113                           
  4114                           ;Config register IDLOC1 @ 0x200001
  4115                           ;	unspecified, using default values
  4116  200001                     	org	2097153
  4117  200001  FF                 	db	255
  4118                           
  4119                           ;Config register IDLOC2 @ 0x200002
  4120                           ;	unspecified, using default values
  4121  200002                     	org	2097154
  4122  200002  FF                 	db	255
  4123                           
  4124                           ;Config register IDLOC3 @ 0x200003
  4125                           ;	unspecified, using default values
  4126  200003                     	org	2097155
  4127  200003  FF                 	db	255
  4128                           
  4129                           ;Config register IDLOC4 @ 0x200004
  4130                           ;	unspecified, using default values
  4131  200004                     	org	2097156
  4132  200004  FF                 	db	255
  4133                           
  4134                           ;Config register IDLOC5 @ 0x200005
  4135                           ;	unspecified, using default values
  4136  200005                     	org	2097157
  4137  200005  FF                 	db	255
  4138                           
  4139                           ;Config register IDLOC6 @ 0x200006
  4140                           ;	unspecified, using default values
  4141  200006                     	org	2097158
  4142  200006  FF                 	db	255
  4143                           
  4144                           ;Config register IDLOC7 @ 0x200007
  4145                           ;	unspecified, using default values
  4146  200007                     	org	2097159
  4147  200007  FF                 	db	255
  4148                           
  4149                           	psect	config
  4150                           
  4151                           ; Padding undefined space
  4152  300000                     	org	3145728
  4153  300000  FF                 	db	255
  4154                           
  4155                           ;Config register CONFIG1H @ 0x300001
  4156                           ;	Oscillator Selection bits
  4157                           ;	OSC = HS, HS oscillator
  4158                           ;	Fail-Safe Clock Monitor Enable bit
  4159                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4160                           ;	Internal/External Oscillator Switchover bit
  4161                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4162  300001                     	org	3145729
  4163  300001  02                 	db	2
  4164                           
  4165                           ;Config register CONFIG2L @ 0x300002
  4166                           ;	Power-up Timer Enable bit
  4167                           ;	PWRT = OFF, PWRT disabled
  4168                           ;	Brown-out Reset Enable bits
  4169                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4170                           ;	Brown Out Reset Voltage bits
  4171                           ;	BORV = 0x2E, user specified literal
  4172  300002                     	org	3145730
  4173  300002  71                 	db	369
  4174                           
  4175                           ;Config register CONFIG2H @ 0x300003
  4176                           ;	Watchdog Timer Enable bit
  4177                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4178                           ;	Watchdog Timer Postscale Select bits
  4179                           ;	WDTPS = 1, 1:1
  4180  300003                     	org	3145731
  4181  300003  00                 	db	0
  4182                           
  4183                           ; Padding undefined space
  4184  300004                     	org	3145732
  4185  300004  FF                 	db	255
  4186                           
  4187                           ;Config register CONFIG3H @ 0x300005
  4188                           ;	CCP2 MUX bit
  4189                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4190                           ;	PORTB A/D Enable bit
  4191                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  4192                           ;	Low-Power Timer1 Oscillator Enable bit
  4193                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4194                           ;	MCLR Pin Enable bit
  4195                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4196  300005                     	org	3145733
  4197  300005  83                 	db	131
  4198                           
  4199                           ;Config register CONFIG4L @ 0x300006
  4200                           ;	Stack Full/Underflow Reset Enable bit
  4201                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4202                           ;	Single-Supply ICSP Enable bit
  4203                           ;	LVP = OFF, Single-Supply ICSP disabled
  4204                           ;	Extended Instruction Set Enable bit
  4205                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4206                           ;	Background Debugger Enable bit
  4207                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4208  300006                     	org	3145734
  4209  300006  80                 	db	128
  4210                           
  4211                           ; Padding undefined space
  4212  300007                     	org	3145735
  4213  300007  FF                 	db	255
  4214                           
  4215                           ;Config register CONFIG5L @ 0x300008
  4216                           ;	Code Protection bit
  4217                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4218                           ;	Code Protection bit
  4219                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4220                           ;	Code Protection bit
  4221                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4222                           ;	Code Protection bit
  4223                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4224  300008                     	org	3145736
  4225  300008  0F                 	db	15
  4226                           
  4227                           ;Config register CONFIG5H @ 0x300009
  4228                           ;	Boot Block Code Protection bit
  4229                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4230                           ;	Data EEPROM Code Protection bit
  4231                           ;	CPD = OFF, Data EEPROM not code-protected
  4232  300009                     	org	3145737
  4233  300009  C0                 	db	192
  4234                           
  4235                           ;Config register CONFIG6L @ 0x30000A
  4236                           ;	Write Protection bit
  4237                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4238                           ;	Write Protection bit
  4239                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4240                           ;	Write Protection bit
  4241                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4242                           ;	Write Protection bit
  4243                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4244  30000A                     	org	3145738
  4245  30000A  0F                 	db	15
  4246                           
  4247                           ;Config register CONFIG6H @ 0x30000B
  4248                           ;	Configuration Register Write Protection bit
  4249                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4250                           ;	Boot Block Write Protection bit
  4251                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4252                           ;	Data EEPROM Write Protection bit
  4253                           ;	WRTD = OFF, Data EEPROM not write-protected
  4254  30000B                     	org	3145739
  4255  30000B  E0                 	db	224
  4256                           
  4257                           ;Config register CONFIG7L @ 0x30000C
  4258                           ;	Table Read Protection bit
  4259                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4260                           ;	Table Read Protection bit
  4261                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4262                           ;	Table Read Protection bit
  4263                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4264                           ;	Table Read Protection bit
  4265                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4266  30000C                     	org	3145740
  4267  30000C  0F                 	db	15
  4268                           
  4269                           ;Config register CONFIG7H @ 0x30000D
  4270                           ;	Boot Block Table Read Protection bit
  4271                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4272  30000D                     	org	3145741
  4273  30000D  40                 	db	64
  4274                           tosu	equ	0xFFF
  4275                           tosh	equ	0xFFE
  4276                           tosl	equ	0xFFD
  4277                           stkptr	equ	0xFFC
  4278                           pclatu	equ	0xFFB
  4279                           pclath	equ	0xFFA
  4280                           pcl	equ	0xFF9
  4281                           tblptru	equ	0xFF8
  4282                           tblptrh	equ	0xFF7
  4283                           tblptrl	equ	0xFF6
  4284                           tablat	equ	0xFF5
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           indf0	equ	0xFEF
  4288                           postinc0	equ	0xFEE
  4289                           postdec0	equ	0xFED
  4290                           preinc0	equ	0xFEC
  4291                           plusw0	equ	0xFEB
  4292                           fsr0h	equ	0xFEA
  4293                           fsr0l	equ	0xFE9
  4294                           wreg	equ	0xFE8
  4295                           indf1	equ	0xFE7
  4296                           postinc1	equ	0xFE6
  4297                           postdec1	equ	0xFE5
  4298                           preinc1	equ	0xFE4
  4299                           plusw1	equ	0xFE3
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           bsr	equ	0xFE0
  4303                           indf2	equ	0xFDF
  4304                           postinc2	equ	0xFDE
  4305                           postdec2	equ	0xFDD
  4306                           preinc2	equ	0xFDC
  4307                           plusw2	equ	0xFDB
  4308                           fsr2h	equ	0xFDA
  4309                           fsr2l	equ	0xFD9
  4310                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     80      92
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> setTemperature@str(COMRAM[6]), main@str(COMRAM[6]), main@tempoRelogio(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[13]), STR_5(CODE[4]), 
		 -> STR_4(CODE[7]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_setTemperature
    _setTemperature->_itoa
    _lcdPosition->_lcdCommand
    _itoa->___lwdiv
    _pwmSet1->___lwdiv
    ___wmul->_adc_amostra
    ___lwdiv->___wmul
    _pwmFrequency->___aldiv
    _lcd_str->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   29800
                                             37 COMRAM    43    43      0
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                          _atraso_ms
                               _itoa
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_str
                       _pwmFrequency
                            _pwmInit
                            _pwmSet1
                     _setTemperature
 ---------------------------------------------------------------------------------
 (1) _setTemperature                                      15    13      2    9400
                                             24 COMRAM    13    11      2
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                               _itoa
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          3     2      1    2332
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    2843
                                             20 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    2692
                                             20 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              7 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2129
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2339
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     594
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
     ___wmul (ARG)
       _adc_amostra (ARG)
     _adc_amostra (ARG)
   ___wmul
   _adc_amostra
   _atraso_ms
   _itoa
     ___lwdiv
     ___lwmod
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
     _lcdCommand
   _lcd_str
     _lcdData
   _pwmFrequency
     ___aldiv
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _setTemperature
     ___lwdiv
     ___wmul
     _adc_amostra
     _itoa
     _lcdData
     _lcdPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     50      5C       1       72.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5C      15        0.0%
DATA                 0      0      5C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug  1 17:37:37 2021

                        _i 005B                         l42 0FE0                         l76 0D92  
                       l89 18B0                         u10 187C                         u11 1878  
      ___wmul@multiplicand 000A       __size_of_adc_amostra 0090                        l112 18BA  
                      l130 1864                        l107 113A                        l108 1152  
                      l140 1772                        l109 115A                        l125 187C  
                      l302 0826                        l143 1576                        l137 14FE  
                      l154 17C2                        l146 17E0                        l235 1848  
                      l164 171E                        l148 17FC                        l229 1656  
                      l333 1480                        l238 18A6                        l190 13FE  
                      l415 1266                        l336 1822                        l184 13C0  
                      l193 136E                        l290 0818                        l187 13C2  
                      l291 07B0                        l295 07E6                        l834 15EA  
                      l827 15E2                        l844 16BA                        l837 16B2  
                      u220 1864                        u221 1860                        _PR2 000FCB  
                      u700 1128                        u701 1124                        u710 114A  
                      u630 1058                        u614 1004                        u711 1146  
                      u631 1054                        u615 1000                        u624 1024  
                      u625 1020                        u650 1088                        u651 1084  
                      u644 106E                        u645 106A                        u680 10FE  
                      u664 10A6                        u681 10FA                        u665 10A0  
                      u690 1110                        u674 10D6                        u691 110C  
                      u675 10D0                        _cnt 005A                        wreg 000FE8  
                     l1015 186A                       l2001 16E0                       l1017 186C  
                     l1009 1866                       l2011 16FE                       l2003 16E4  
                     l1301 105C                       l2021 160C                       l2101 0742  
                     l2007 16F8                       l2015 1704                       l1311 10FE  
                     l1303 1088                       l2023 1628                       l2031 1400  
                     l2111 0788                       l2103 074E                       l2017 1708  
                     l1321 1132                       l1313 1100                       l1305 10B8  
                     l1065 184E                       l2025 1630                       l2041 146C  
                     l2033 1432                       l2201 09E4                       l2121 07D0  
                     l2113 079A                       l2105 0752                       l1323 114A  
                     l1315 1110                       l1307 10EC                       l1067 1852  
                     l1059 184A                       l1411 1898                       l2027 1648  
                     l2019 15EE                       l2043 1472                       l2035 144A  
                     l2203 09E6                       l2131 080E                       l2123 07D8  
                     l2115 07A2                       l2107 076E                       l1325 1156  
                     l1317 1128                       l1309 10EE                       l1069 1854  
                     l2029 1824                       l1413 189C                       l2045 1478  
                     l2037 145C                       l2221 0A48                       l2213 0A20  
                     l2205 09EC                       l2141 0856                       l2125 07DA  
                     l2117 07A4                       l2109 077A                       l2133 0818  
                     l2061 0676                       l1319 112E                       l1327 18B2  
                     l2039 1466                       l2231 0A6A                       l2215 0A28  
                     l2207 09F8                       l2151 0882                       l2143 085C  
                     l2135 0834                       l2127 07F4                       l2119 07BE  
                     l2071 069E                       l2063 067A                       l1273 0FE2  
                     l1409 1894                       l2233 0A72                       l2225 0A54  
                     l2209 0A00                       l2161 08B4                       l2153 0896  
                     l2145 0862                       l2137 083A                       l2129 0806  
                     l2081 06E4                       l2073 06AA                       l2065 067E  
                     l1291 1038                       l1283 0FEE                       l1275 0FE6  
                     l2243 0AB8                       l2219 0A46                       l2171 0938  
                     l2163 08BA                       l2155 089C                       l2147 086C  
                     l2139 0846                       l2091 071A                       l2083 06EE  
                     l2075 06AE                       l2067 0688                       l2059 0646  
                     l1293 103C                       l1285 1030                       l1277 0FEA  
                     l2261 0B04                       l2245 0ABA                       l2253 0AD0  
                     l2237 0A92                       l2229 0A5E                       l2181 0956  
                     l2173 093E                       l2165 08E2                       l2157 08A2  
                     l2149 0878                       l2093 0726                       l2085 06F8  
                     l2077 06CA                       l2069 0694                       l1295 1058  
                     l1711 0DB0                       l2263 0B0C                       l2255 0ADC  
                     l2239 0A9A                       l2191 09C4                       l2183 0962  
                     l2175 0944                       l2167 091A                       l2159 08A8  
                     l2095 0730                       l2087 0704                       l2079 06D6  
                     l1721 0E3A                       l1713 0DC2                       l2281 13A2  
                     l1801 1688                       l2273 0B38                       l2257 0AE4  
                     l2249 0AC6                       l2185 096E                       l2177 094A  
                     l2169 0924                       l2193 09C6                       l2097 0736  
                     l2089 0710                       l1731 0ED2                       l1723 0E5A  
                     l1715 0DE2                       l1811 0B62                       l1803 169E  
                     l2267 0B2A                       l2187 0998                       l2179 0950  
                     l2195 09D8                       l2099 073C                       l1741 0F6C  
                     l1733 0EF4                       l1725 0E7C                       l1717 0E04  
                     l1709 0D94                       l1821 0BE4                       l1813 0B74  
                     l1901 181A                       l1805 16A6                       l2269 0B2C  
                     l2197 09DE                       l2189 099A                       l1743 0F88  
                     l1735 0F10                       l1727 0E98                       l1719 0E20  
                     l1751 1488                       l1831 0C80                       l1823 0C08  
                     l1815 0B94                       l1911 117E                       l1807 16AC  
                     l2199 09E2                       l1745 0FA2                       l1737 0F2A  
                     l1729 0EB2                       l1761 14CC                       l1753 148C  
                     l1841 0D1E                       l1833 0CA6                       l1825 0C2E  
                     l1817 0BB6                       l1809 0B46                       l1921 11B4  
                     l1913 1182                       l1905 115C                       l1747 0FC2  
                     l1739 0F4A                       l1763 14D0                       l1755 14A0  
                     l1843 0D3A                       l1835 0CC2                       l1827 0C4A  
                     l1819 0BD2                       l1851 1726                       l1931 11F6  
                     l1923 11CA                       l1915 1190                       l1907 1160  
                     l1771 1578                       l1765 14E2                       l1757 14A4  
                     l1749 1484                       l1845 0D4C                       l1837 0CD4  
                     l1829 0C5C                       l1861 176A                       l1853 172A  
                     l1933 1214                       l1925 11D2                       l1941 1236  
                     l1917 11A0                       l1909 116E                       l1781 15B0  
                     l1773 1580                       l1767 14F2                       l1759 14B8  
                     l1847 0D70                       l1839 0CF8                       l1951 1500  
                     l1863 176E                       l1855 173E                       l1943 1246  
                     l1935 1224                       l1927 11DE                       l1919 11A4  
                     l1791 15DC                       l1783 15B6                       l1775 1592  
                     l1871 17F0                       l1769 14FA                       l1961 1538  
                     l1953 1528                       l1857 1742                       l1849 1722  
                     l1945 1256                       l1937 1226                       l1929 11EC  
                     l1785 15CC                       l1777 159A                       l1881 1386  
                     l1793 1658                       l1873 17F6                       l1865 17C6  
                     l1971 154E                       l1963 153C                       l1955 152C  
                     l1859 1756                       l1939 1230                       l1787 15D4  
                     l1779 15A2                       l1875 1372                       l1795 166A  
                     l1867 17CA                       l1949 18A8                       l1981 156A  
                     l1973 1554                       l1965 1540                       l1957 1530  
                     l1789 15D6                       l1877 1376                       l1885 138E  
                     l1797 1672                       l1869 17DA                       l1983 1570  
                     l1975 1558                       l1967 1546                       l1959 1534  
                     l1991 179A                       l1887 13D0                       l1879 137E  
                     l1799 167A                       l1895 1268                       l1993 16BC  
                     l1977 155E                       l1969 154A                       l1985 1774  
                     l1897 135E                       l1995 16C8                       l1979 1564  
                     l1987 177C                       l1899 17FE                       l1997 16CC  
                     l1989 1798                       STR_1 0601                       STR_2 0610  
                     STR_3 062B                       STR_4 0638                       STR_5 063F  
                     STR_6 061E                       STR_7 063F                       STR_8 0643  
                     u1100 0E3A                       u1101 0E36                       u1210 0F88  
                     u1130 0E98                       u1114 0E4C                       u1050 0DB0  
                     u1211 0F84                       u1131 0E94                       u1115 0E48  
                     u1051 0DAC                       u1220 0FA2                       u1204 0F5C  
                     u1140 0EB2                       u1124 0E6C                       u1060 0DC2  
                     u1300 166A                       u1221 0F9E                       u1205 0F58  
                     u1141 0EAE                       u1125 0E68                       u1061 0DBE  
                     u1301 1666                       u1310 1688                       u1311 1684  
                     u1320 169E                       u1321 169A                       u1234 0FB4  
                     u1170 0F10                       u1154 0EC4                       u1090 0E20  
                     u1074 0DD4                       u1250 14E2                       u1410 0C4A  
                     u1330 0B62                       u1235 0FB0                       u1171 0F0C  
                     u1155 0EC0                       u1091 0E1C                       u1075 0DD0  
                     u1251 14DE                       u1411 0C46                       u1331 0B5E  
                     u1244 0FD4                       u1180 0F2A                       u1164 0EE4  
                     u1084 0DF4                       u1260 14F2                       u1500 0D4C  
                     u1420 0C5C                       u1404 0C1E                       u1340 0B74  
                     u1245 0FD0                       u1181 0F26                       u1165 0EE0  
                     u1085 0DF0                       u1261 14EE                       u1501 0D48  
                     u1421 0C58                       u1405 0C1A                       u1341 0B70  
                     u1270 1592                       u1271 158E                       u1600 11EC  
                     u1280 15B0                       u1601 11E8                       u1281 15AC  
                     u1194 0F3C                       u1514 0D62                       u1450 0CC2  
                     u1434 0C72                       u1370 0BD2                       u1354 0B86  
                     u1610 1214                       u1290 15CC                       u1530 17DA  
                     u1195 0F38                       u1515 0D5E                       u1451 0CBE  
                     u1435 0C6E                       u1371 0BCE                       u1355 0B82  
                     u1611 1210                       u1291 15C8                       u1531 17D6  
                     u1524 0D86                       u1460 0CD4                       u1444 0C96  
                     u1380 0BE4                       u1364 0BA6                       u1620 1246  
                     u1540 17F0                       u1700 0788                       u1525 0D82  
                     u1461 0CD0                       u1445 0C92                       u1381 0BE0  
                     u1365 0BA2                       u1621 1242                       u1541 17EC  
                     u1701 0784                       u1630 17C2                       u1550 13D0  
                     u1710 079A                       u1631 17BE                       u1551 13CC  
                     u1711 0796                       u1640 16DC                       u1800 09D8  
                     u1720 07BE                       u1641 16D8                       u1801 09D4  
                     u1721 07BA                       u1650 16F4                       u1490 0D3A  
                     u1474 0CEA                       u1394 0BFA                       u1570 116E  
                     u1810 0A1C                       u1730 07D0                       u1651 16F0  
                     u1491 0D36                       u1475 0CE6                       u1395 0BF6  
                     u1571 116A                       u1811 0A18                       u1731 07CC  
                     u1660 171E                       u1484 0D0E                       u1580 1190  
                     u1820 0A42                       u1740 07F4                       u1661 171A  
                     u1485 0D0A                       u1581 118C                       u1565 13D8  
                     u1821 0A3E                       u1741 07F0                       u1590 11CA  
                     u1830 0A8E                       u1750 0806                       u1670 06CA  
                     u1591 11C6                       u1831 0A8A                       u1751 0802  
                     u1671 06C6                       u1840 0AB4                       u1760 0826  
                     u1680 06E4                       u1841 0AB0                       u1761 0822  
                     u1681 06E0                       u1850 0B00                       u1770 0834  
                     u1690 076E                       u1851 0AFC                       u1771 0830  
                     u1691 076A                       u1860 0B26                       u1780 0998  
                     u1861 0B22                       u1781 0994                       u1790 09C4  
                     u1791 09C0                       _main 0646                       _itoa 1268  
                     _perc 0059                       _tmax 0058                       _tmin 0057  
                     fsr2h 000FDA                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
             ___param_bank 000000    __size_of_setTemperature 0082            __end_of___aldiv 1268  
                    ?_main 0001                      ?_itoa 0015                      _T2CON 000FCA  
          __end_of___lwdiv 15EC            __end_of___lwmod 16BC                      _PORTA 000F80  
                    _PORTB 000F81                      _PORTC 000F82                      _PORTD 000F83  
                    _PORTE 000F84                      _TRISA 000F92                      _TRISB 000F93  
                    _TRISC 000F94                      _TRISD 000F95                      _TRISE 000F96  
          __end_of_lcdData 1774            __end_of_lcdInit 1578            __end_of_lcd_str 17C4  
       main@temperaturaLcd 0045            __end_of_pinMode 0D94                      _valor 0055  
                    main@i 003C                      main@j 0049                      tablat 000FF5  
          __end_of_pwmSet1 1658            __end_of_pwmInit 18A8                      status 000FD8  
         __end_of_Delay2ms 1866       __end_of_digitalWrite 0FE2            __initialization 187E  
             __end_of_main 0B46               __end_of_itoa 1370         __size_of_Delay40us 0018  
                   ??_main 0026                     ??_itoa 0019              __activetblptr 000002  
                   _ADCON0 000FC2                     _ADCON1 000FC1                     _ADCON2 000FC0  
                   _ADRESH 000FC4                     _ADRESL 000FC3                     _CCPR1L 000FBE  
                   _CCPR2L 000FBB       __size_of_lcdPosition 003A          lcdPosition@coluna 0009  
                ??___aldiv 0009                     ___wmul 17FE                  ??___lwdiv 0012  
                ??___lwmod 0005                     _kpInit 18B2                     _kpRead 18A8  
                   clear_0 1884                  ??_lcdData 0007                     isa$std 000001  
                ??_lcdInit 0009                  ??_lcd_str 000B                  ??_pinMode 0005  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8                  ??_pwmSet1 0015                  ??_pwmInit 0001  
        __end_of_Delay40us 187E                 __accesstop 0080    __end_of__initialization 188A  
            ___rparam_used 000001             _setTemperature 1400                pinMode@type 0003  
           __pcstackCOMRAM 0001                  ?_Delay2ms 0001         __size_of_atraso_ms 0064  
    __size_of_digitalWrite 024E          main@minutosDezena 0043     __end_of_setTemperature 1482  
               _lcdCommand 1482                    ?___wmul 0008              ??_adc_amostra 0003  
                  ?_kpInit 0001                    ?_kpRead 0001                    _CCP1CON 000FBD  
                  _CCP2CON 000FBA                 _kpDebounce 0FE2                 ??_Delay2ms 0002  
             _digitalWrite 0D94            ?_setTemperature 0019                    __Hparam 0000  
                  __Lparam 0000            kpDebounce@old_D 0006         lcdPosition@comando 000A  
          kpDebounce@tempo 005C                    ___aldiv 115C            __size_of___wmul 0026  
                  ___lwdiv 1578                    ___lwmod 1658          __end_of_atraso_ms 1720  
             __psmallconst 0600            __size_of_kpInit 000A            __size_of_kpRead 000A  
                  __pcinit 187E                    _lcdData 1720                    __ramtop 0600  
                  _lcdInit 1500                    __ptext0 0646                    __ptext1 1400  
                  __ptext2 17C4                    __ptext3 1268                    __ptext4 1658  
                  __ptext5 1370                    __ptext6 15EC                    __ptext7 17FE  
                  __ptext8 1578                    __ptext9 1894                    _lcd_str 1774  
      __end_of_adc_amostra 1400                    _pinMode 0B46           ___aldiv@dividend 0001  
                  _pwmSet1 15EC                    _pwmInit 1894                  Delay2ms@i 0002  
                  main@str 0034        kpDebounce@valorNovo 0053             main@tempoTotal 0047  
     end_of_initialization 188A                    itoa@val 0015              __Lmediumconst 0000  
                  itoa@str 0017              ?_pwmFrequency 000F           ___aldiv@quotient 000B  
              ?_lcdCommand 0001                    postinc0 000FEE                ?_kpDebounce 0001  
                _PORTCbits 000F82                  _TRISCbits 000F94              ??_lcdPosition 000A  
           ??_pwmFrequency 0011                  _Delay40us 1866                 lcd_str@str 0009  
              _adc_amostra 1370                 atraso_ms@i 0003                 atraso_ms@j 0005  
               atraso_ms@k 0006                 atraso_ms@t 0001             __end_of___wmul 1824  
           __end_of_kpInit 18BC             __end_of_kpRead 18B2        start_initialization 187E  
        __size_of_Delay2ms 001C        __size_of_lcdCommand 007E  setTemperature@temperatura 0024  
      __size_of_kpDebounce 017A                 ?_Delay40us 0001        __end_of_lcdPosition 17FE  
        setTemperature@tmp 0023          setTemperature@str 001D           lcdPosition@linha 000B  
                 ??___wmul 000C                   ??_kpInit 0001                   ??_kpRead 0003  
              __pbssCOMRAM 0051                 pinMode@pin 0001         main@minutosCentena 0042  
         ??_setTemperature 001B         main@minutosUnidade 0044           ___lwdiv@dividend 000E  
                 ?___aldiv 0001                   ?___lwdiv 000E                   ?___lwmod 0001  
                 ?_lcdData 0001                   ?_lcdInit 0001                   ?_lcd_str 0009  
     __end_of_pwmFrequency 184A              lcdCommand@cmd 0008                  _atraso_ms 16BC  
              __smallconst 0600                   ?_pinMode 0001                   ?_pwmSet1 0001  
                 ?_pwmInit 0001           ___lwdiv@quotient 0012                _lcdPosition 17C4  
         pwmFrequency@freq 000F            ___aldiv@divisor 0005            ___aldiv@counter 0009  
              ??_Delay40us 0001             ___wmul@product 000C               ??_lcdCommand 0007  
               pwmSet1@val 0018               ??_kpDebounce 0001                 _ADCON0bits 000FC2  
                main@i_436 003E                  main@i_438 0040                  main@j_437 004B  
                main@j_439 004D          ___wmul@multiplier 0008                 ?_atraso_ms 0001  
          lcdCommand@old_D 0007      kpDebounce@valorAntigo 0051                   _Delay2ms 184A  
                main@tecla 004F           main@tempoRelogio 0028         __end_of_lcdCommand 1500  
             lcdData@old_D 0008               lcdData@valor 0007         __end_of_kpDebounce 115C  
                 __Hrparam 0000                   __Lrparam 0000               ?_adc_amostra 0001  
         __size_of___aldiv 010C           __size_of___lwdiv 0074           __size_of___lwmod 0064  
          pwmSet1@porcento 0017           __size_of_lcdData 0054           __size_of_lcdInit 0078  
         __size_of_lcd_str 0050           __size_of_pinMode 024E            ___lwdiv@divisor 0010  
          ___lwdiv@counter 0014                   __ptext10 1824                   __ptext11 115C  
                 __ptext20 18A8                   __ptext12 1774                   __ptext21 18B2  
                 __ptext13 1720                   __ptext22 0FE2                   __ptext14 1500  
                 __ptext23 16BC                   __ptext15 0B46                   __ptext16 1482  
                 __ptext17 0D94                   __ptext18 184A                   __ptext19 1866  
         __size_of_pwmSet1 006C           __size_of_pwmInit 0014              __size_of_main 0500  
            __size_of_itoa 0108      main@temperaturaMaxima 002E      main@temperaturaMinima 0030  
               Delay40us@i 0001                   isa$xinst 000000      __size_of_pwmFrequency 0026  
                 lcd_str@i 000D                   main@tmpi 0032            main@temperatura 003A  
              ??_atraso_ms 0003              ?_digitalWrite 0001          digitalWrite@value 0003  
         ___lwmod@dividend 0001               _pwmFrequency 1824            ___lwmod@divisor 0003  
              kpDebounce@i 000A                kpDebounce@j 0009                kpDebounce@k 0007  
          ___lwmod@counter 0005             ??_digitalWrite 0005           adc_amostra@canal 0007  
             ___aldiv@sign 000A               ?_lcdPosition 0009            digitalWrite@pin 0001  
