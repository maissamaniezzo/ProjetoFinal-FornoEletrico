

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Jul 30 13:34:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36  0000                     
    37                           ; Version 2.20
    38                           ; Generated 12/02/2020 GMT
    39                           ; 
    40                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4520 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _TRISCbits	set	3988
    72  0000                     _PORTCbits	set	3970
    73  0000                     _T2CON	set	4042
    74  0000                     _CCP2CON	set	4026
    75  0000                     _CCPR2L	set	4027
    76  0000                     _CCP1CON	set	4029
    77  0000                     _CCPR1L	set	4030
    78  0000                     _PR2	set	4043
    79  0000                     _ADRESL	set	4035
    80  0000                     _ADRESH	set	4036
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _ADCON2	set	4032
    83  0000                     _ADCON1	set	4033
    84  0000                     _ADCON0	set	4034
    85  0000                     _TRISE	set	3990
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISC	set	3988
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISA	set	3986
    90  0000                     _PORTE	set	3972
    91  0000                     _PORTD	set	3971
    92  0000                     _PORTC	set	3970
    93  0000                     _PORTB	set	3969
    94  0000                     _PORTA	set	3968
    95                           
    96                           	psect	smallconst
    97  000600                     __psmallconst:
    98                           	callstack 0
    99  000600  00                 	db	0
   100  000601                     STR_1:
   101  000601  56                 	db	86	;'V'
   102  000602  61                 	db	97	;'a'
   103  000603  6D                 	db	109	;'m'
   104  000604  6F                 	db	111	;'o'
   105  000605  73                 	db	115	;'s'
   106  000606  20                 	db	32
   107  000607  69                 	db	105	;'i'
   108  000608  6E                 	db	110	;'n'
   109  000609  69                 	db	105	;'i'
   110  00060A  63                 	db	99	;'c'
   111  00060B  69                 	db	105	;'i'
   112  00060C  61                 	db	97	;'a'
   113  00060D  72                 	db	114	;'r'
   114  00060E  21                 	db	33
   115  00060F  00                 	db	0
   116  000610                     STR_2:
   117  000610  43                 	db	67	;'C'
   118  000611  6C                 	db	108	;'l'
   119  000612  69                 	db	105	;'i'
   120  000613  71                 	db	113	;'q'
   121  000614  75                 	db	117	;'u'
   122  000615  65                 	db	101	;'e'
   123  000616  20                 	db	32
   124  000617  65                 	db	101	;'e'
   125  000618  6D                 	db	109	;'m'
   126  000619  20                 	db	32
   127  00061A  28                 	db	40
   128  00061B  31                 	db	49	;'1'
   129  00061C  29                 	db	41
   130  00061D  00                 	db	0
   131  00061E                     STR_6:
   132  00061E  46                 	db	70	;'F'
   133  00061F  75                 	db	117	;'u'
   134  000620  6E                 	db	110	;'n'
   135  000621  63                 	db	99	;'c'
   136  000622  69                 	db	105	;'i'
   137  000623  6F                 	db	111	;'o'
   138  000624  6E                 	db	110	;'n'
   139  000625  61                 	db	97	;'a'
   140  000626  6E                 	db	110	;'n'
   141  000627  64                 	db	100	;'d'
   142  000628  6F                 	db	111	;'o'
   143  000629  21                 	db	33
   144  00062A  00                 	db	0
   145  00062B                     STR_3:
   146  00062B  54                 	db	84	;'T'
   147  00062C  65                 	db	101	;'e'
   148  00062D  6D                 	db	109	;'m'
   149  00062E  70                 	db	112	;'p'
   150  00062F  65                 	db	101	;'e'
   151  000630  72                 	db	114	;'r'
   152  000631  61                 	db	97	;'a'
   153  000632  74                 	db	116	;'t'
   154  000633  75                 	db	117	;'u'
   155  000634  72                 	db	114	;'r'
   156  000635  61                 	db	97	;'a'
   157  000636  3A                 	db	58	;':'
   158  000637  00                 	db	0
   159  000638                     STR_4:
   160  000638  54                 	db	84	;'T'
   161  000639  65                 	db	101	;'e'
   162  00063A  6D                 	db	109	;'m'
   163  00063B  70                 	db	112	;'p'
   164  00063C  6F                 	db	111	;'o'
   165  00063D  3A                 	db	58	;':'
   166  00063E  00                 	db	0
   167  00063F                     STR_5:
   168  00063F  6D                 	db	109	;'m'
   169  000640  69                 	db	105	;'i'
   170  000641  6E                 	db	110	;'n'
   171  000642  00                 	db	0
   172  000643                     STR_8:
   173  000643  43                 	db	67	;'C'
   174  000644  00                 	db	0
   175  000645  00                 	db	0	; dummy byte at the end
   176  0000                     
   177                           ; #config settings
   178                           
   179                           	psect	cinit
   180  001666                     __pcinit:
   181                           	callstack 0
   182  001666                     start_initialization:
   183                           	callstack 0
   184  001666                     __initialization:
   185                           	callstack 0
   186                           
   187                           ; Clear objects allocated to COMRAM (12 bytes)
   188  001666  EE00  F049         	lfsr	0,__pbssCOMRAM
   189  00166A  0E0C               	movlw	12
   190  00166C                     clear_0:
   191  00166C  6AEE               	clrf	postinc0,c
   192  00166E  06E8               	decf	wreg,f,c
   193  001670  E1FD               	bnz	clear_0
   194  001672                     end_of_initialization:
   195                           	callstack 0
   196  001672                     __end_of__initialization:
   197                           	callstack 0
   198  001672  0E00               	movlw	low (__Lmediumconst shr (0+16))
   199  001674  6EF8               	movwf	tblptru,c
   200  001676  0100               	movlb	0
   201  001678  EF23  F003         	goto	_main	;jump to C main() function
   202                           
   203                           	psect	bssCOMRAM
   204  000049                     __pbssCOMRAM:
   205                           	callstack 0
   206  000049                     kpDebounce@valorAntigo:
   207                           	callstack 0
   208  000049                     	ds	2
   209  00004B                     kpDebounce@valorNovo:
   210                           	callstack 0
   211  00004B                     	ds	2
   212  00004D                     _valor:
   213                           	callstack 0
   214  00004D                     	ds	2
   215  00004F                     _tmin:
   216                           	callstack 0
   217  00004F                     	ds	1
   218  000050                     _tmax:
   219                           	callstack 0
   220  000050                     	ds	1
   221  000051                     _perc:
   222                           	callstack 0
   223  000051                     	ds	1
   224  000052                     _cnt:
   225                           	callstack 0
   226  000052                     	ds	1
   227  000053                     _i:
   228                           	callstack 0
   229  000053                     	ds	1
   230  000054                     kpDebounce@tempo:
   231                           	callstack 0
   232  000054                     	ds	1
   233                           
   234                           	psect	cstackCOMRAM
   235  000001                     __pcstackCOMRAM:
   236                           	callstack 0
   237  000001                     ??_kpDebounce:
   238  000001                     ?_kpRead:
   239                           	callstack 0
   240  000001                     ?_adc_amostra:
   241                           	callstack 0
   242  000001                     ?___lwmod:
   243                           	callstack 0
   244  000001                     Delay40us@i:
   245                           	callstack 0
   246  000001                     digitalWrite@pin:
   247                           	callstack 0
   248  000001                     pinMode@pin:
   249                           	callstack 0
   250  000001                     atraso_ms@t:
   251                           	callstack 0
   252  000001                     ___lwmod@dividend:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  000001                     	ds	1
   257  000002                     Delay2ms@i:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x1
   261  000002                     	ds	1
   262  000003                     ??_adc_amostra:
   263  000003                     digitalWrite@value:
   264                           	callstack 0
   265  000003                     pinMode@type:
   266                           	callstack 0
   267  000003                     atraso_ms@i:
   268                           	callstack 0
   269  000003                     ___lwmod@divisor:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x2
   273  000003                     	ds	2
   274  000005                     ??_digitalWrite:
   275  000005                     ??_pinMode:
   276  000005                     atraso_ms@j:
   277                           	callstack 0
   278  000005                     ___lwmod@counter:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x4
   282  000005                     	ds	1
   283  000006                     kpDebounce@old_D:
   284                           	callstack 0
   285  000006                     atraso_ms@k:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x5
   289  000006                     	ds	1
   290  000007                     lcdCommand@old_D:
   291                           	callstack 0
   292  000007                     lcdData@valor:
   293                           	callstack 0
   294  000007                     adc_amostra@canal:
   295                           	callstack 0
   296  000007                     kpDebounce@k:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000007                     	ds	1
   301  000008                     ?___wmul:
   302                           	callstack 0
   303  000008                     lcdCommand@cmd:
   304                           	callstack 0
   305  000008                     lcdData@old_D:
   306                           	callstack 0
   307  000008                     ___wmul@multiplier:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x7
   311  000008                     	ds	1
   312  000009                     kpDebounce@j:
   313                           	callstack 0
   314  000009                     lcdPosition@coluna:
   315                           	callstack 0
   316  000009                     lcd_str@str:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x8
   320  000009                     	ds	1
   321  00000A                     kpDebounce@i:
   322                           	callstack 0
   323  00000A                     lcdPosition@comando:
   324                           	callstack 0
   325  00000A                     ___wmul@multiplicand:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x9
   329  00000A                     	ds	1
   330  00000B                     ??_lcd_str:
   331  00000B                     lcdPosition@linha:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xA
   335  00000B                     	ds	1
   336  00000C                     ___wmul@product:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0xB
   340  00000C                     	ds	1
   341  00000D                     lcd_str@i:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0xC
   345  00000D                     	ds	1
   346  00000E                     ?___lwdiv:
   347                           	callstack 0
   348  00000E                     ___lwdiv@dividend:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0xD
   352  00000E                     	ds	2
   353  000010                     ___lwdiv@divisor:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xF
   357  000010                     	ds	2
   358  000012                     ___lwdiv@quotient:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x11
   362  000012                     	ds	2
   363  000014                     ___lwdiv@counter:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x13
   367  000014                     	ds	1
   368  000015                     ??_pwmSet1:
   369  000015                     itoa@val:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x14
   373  000015                     	ds	2
   374  000017                     pwmSet1@porcento:
   375                           	callstack 0
   376  000017                     itoa@str:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x16
   380  000017                     	ds	1
   381  000018                     pwmSet1@val:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x17
   385  000018                     	ds	1
   386  000019                     ?_setTemperature:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x18
   390  000019                     	ds	2
   391  00001B                     ??_setTemperature:
   392                           
   393                           ; 1 bytes @ 0x1A
   394  00001B                     	ds	2
   395  00001D                     setTemperature@str:
   396                           	callstack 0
   397                           
   398                           ; 6 bytes @ 0x1C
   399  00001D                     	ds	6
   400  000023                     setTemperature@tmp:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x22
   404  000023                     	ds	1
   405  000024                     setTemperature@temperatura:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x23
   409  000024                     	ds	2
   410  000026                     ??_main:
   411                           
   412                           ; 1 bytes @ 0x25
   413  000026                     	ds	2
   414  000028                     main@cont:
   415                           	callstack 0
   416                           
   417                           ; 4 bytes @ 0x27
   418  000028                     	ds	4
   419  00002C                     main@tempoRelogio:
   420                           	callstack 0
   421                           
   422                           ; 6 bytes @ 0x2B
   423  00002C                     	ds	6
   424  000032                     main@temperaturaMaxima:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x31
   428  000032                     	ds	2
   429  000034                     main@temperaturaMinima:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x33
   433  000034                     	ds	2
   434  000036                     main@tmpi:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x35
   438  000036                     	ds	2
   439  000038                     main@str:
   440                           	callstack 0
   441                           
   442                           ; 6 bytes @ 0x37
   443  000038                     	ds	6
   444  00003E                     main@temperatura:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x3D
   448  00003E                     	ds	2
   449  000040                     main@minutosCentena:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x3F
   453  000040                     	ds	1
   454  000041                     main@minutosDezena:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x40
   458  000041                     	ds	1
   459  000042                     main@minutosUnidade:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x41
   463  000042                     	ds	1
   464  000043                     main@temperaturaLcd:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x42
   468  000043                     	ds	2
   469  000045                     main@tempoTotal:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x44
   473  000045                     	ds	2
   474  000047                     main@tecla:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x46
   478  000047                     	ds	2
   479                           
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 17 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  str             6   55[COMRAM] unsigned char [6]
   490 ;;  tempoRelogio    6   43[COMRAM] unsigned char [6]
   491 ;;  cont            4   39[COMRAM] unsigned long 
   492 ;;  tecla           2   70[COMRAM] unsigned int 
   493 ;;  tempoTotal      2   68[COMRAM] unsigned int 
   494 ;;  temperaturaL    2   66[COMRAM] unsigned int 
   495 ;;  temperatura     2   61[COMRAM] unsigned int 
   496 ;;  tmpi            2   53[COMRAM] unsigned int 
   497 ;;  temperaturaM    2   51[COMRAM] unsigned int 
   498 ;;  temperaturaM    2   49[COMRAM] unsigned int 
   499 ;;  minutosUnida    1   65[COMRAM] unsigned char 
   500 ;;  minutosDezen    1   64[COMRAM] unsigned char 
   501 ;;  minutosCente    1   63[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:        33       0       0       0       0       0       0
   513 ;;      Temps:          2       0       0       0       0       0       0
   514 ;;      Totals:        35       0       0       0       0       0       0
   515 ;;Total ram usage:       35 bytes
   516 ;; Hardware stack levels required when called: 5
   517 ;; This function calls:
   518 ;;		___lwdiv
   519 ;;		___wmul
   520 ;;		_adc_amostra
   521 ;;		_adc_init
   522 ;;		_atraso_ms
   523 ;;		_itoa
   524 ;;		_kpDebounce
   525 ;;		_kpInit
   526 ;;		_kpRead
   527 ;;		_lcdCommand
   528 ;;		_lcdData
   529 ;;		_lcdInit
   530 ;;		_lcdPosition
   531 ;;		_lcd_str
   532 ;;		_pwmInit
   533 ;;		_pwmSet1
   534 ;;		_setTemperature
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text0
   541  000646                     __ptext0:
   542                           	callstack 0
   543  000646                     _main:
   544                           	callstack 26
   545  000646                     
   546                           ;main.c: 18:     unsigned int tecla = 16;
   547  000646  0E00               	movlw	0
   548  000648  6E48               	movwf	(main@tecla+1)^0,c
   549  00064A  0E10               	movlw	16
   550  00064C  6E47               	movwf	main@tecla^0,c
   551                           
   552                           ;main.c: 19:     unsigned long int cont = 0;
   553  00064E  0E00               	movlw	0
   554  000650  6E28               	movwf	main@cont^0,c
   555  000652  0E00               	movlw	0
   556  000654  6E29               	movwf	(main@cont+1)^0,c
   557  000656  0E00               	movlw	0
   558  000658  6E2A               	movwf	(main@cont+2)^0,c
   559  00065A  0E00               	movlw	0
   560  00065C  6E2B               	movwf	(main@cont+3)^0,c
   561                           
   562                           ;main.c: 20:     unsigned int temperatura = 180, temperaturaMaxima, temperaturaMinima;
   563  00065E  0E00               	movlw	0
   564  000660  6E3F               	movwf	(main@temperatura+1)^0,c
   565  000662  0EB4               	movlw	180
   566  000664  6E3E               	movwf	main@temperatura^0,c
   567                           
   568                           ;main.c: 21:     char minutosCentena = 48, minutosDezena = 48, minutosUnidade = 48;
   569  000666  0E30               	movlw	48
   570  000668  6E40               	movwf	main@minutosCentena^0,c
   571  00066A  0E30               	movlw	48
   572  00066C  6E41               	movwf	main@minutosDezena^0,c
   573  00066E  0E30               	movlw	48
   574  000670  6E42               	movwf	main@minutosUnidade^0,c
   575                           
   576                           ;main.c: 23:     char str[6];;main.c: 24:     char tempoRelogio[6];;main.c: 25:     unsi
      +                          gned int tmpi, temperaturaLcd, tempoTotal = 0;
   577  000672  0E00               	movlw	0
   578  000674  6E46               	movwf	(main@tempoTotal+1)^0,c
   579  000676  0E00               	movlw	0
   580  000678  6E45               	movwf	main@tempoTotal^0,c
   581                           
   582                           ;main.c: 27:     TRISA = 0x07;
   583  00067A  0E07               	movlw	7
   584  00067C  6E92               	movwf	146,c	;volatile
   585                           
   586                           ;main.c: 28:     TRISB = 0x00;
   587  00067E  0E00               	movlw	0
   588  000680  6E93               	movwf	147,c	;volatile
   589                           
   590                           ;main.c: 29:     TRISC = 0x00;
   591  000682  0E00               	movlw	0
   592  000684  6E94               	movwf	148,c	;volatile
   593  000686                     
   594                           ;main.c: 31:     lcdInit();
   595  000686  EC87  F009         	call	_lcdInit	;wreg free
   596  00068A                     
   597                           ;main.c: 32:     kpInit();
   598  00068A  EC54  F00B         	call	_kpInit	;wreg free
   599  00068E                     l1910:
   600                           
   601                           ;main.c: 35:         cont++;
   602  00068E  0E01               	movlw	1
   603  000690  2628               	addwf	main@cont^0,f,c
   604  000692  0E00               	movlw	0
   605  000694  2229               	addwfc	(main@cont+1)^0,f,c
   606  000696  222A               	addwfc	(main@cont+2)^0,f,c
   607  000698  222B               	addwfc	(main@cont+3)^0,f,c
   608  00069A                     
   609                           ;main.c: 36:         lcdPosition(0, 1);
   610  00069A  0E01               	movlw	1
   611  00069C  6E09               	movwf	lcdPosition@coluna^0,c
   612  00069E  0E00               	movlw	0
   613  0006A0  ECE9  F00A         	call	_lcdPosition
   614  0006A4                     
   615                           ;main.c: 38:         lcd_str("Vamos iniciar!");
   616  0006A4  0E01               	movlw	low STR_1
   617  0006A6  6E09               	movwf	lcd_str@str^0,c
   618  0006A8  0E06               	movlw	high STR_1
   619  0006AA  6E0A               	movwf	(lcd_str@str+1)^0,c
   620  0006AC  ECC1  F00A         	call	_lcd_str	;wreg free
   621  0006B0                     
   622                           ;main.c: 39:         lcdPosition(1, 1);
   623  0006B0  0E01               	movlw	1
   624  0006B2  6E09               	movwf	lcdPosition@coluna^0,c
   625  0006B4  0E01               	movlw	1
   626  0006B6  ECE9  F00A         	call	_lcdPosition
   627  0006BA                     
   628                           ;main.c: 40:         lcd_str("Clique em (1)");
   629  0006BA  0E10               	movlw	low STR_2
   630  0006BC  6E09               	movwf	lcd_str@str^0,c
   631  0006BE  0E06               	movlw	high STR_2
   632  0006C0  6E0A               	movwf	(lcd_str@str+1)^0,c
   633  0006C2  ECC1  F00A         	call	_lcd_str	;wreg free
   634  0006C6                     
   635                           ;main.c: 42:         kpDebounce();
   636  0006C6  EC7E  F007         	call	_kpDebounce	;wreg free
   637  0006CA                     
   638                           ;main.c: 43:         if (kpRead() != tecla) {
   639  0006CA  EC4F  F00B         	call	_kpRead	;wreg free
   640  0006CE  5047               	movf	main@tecla^0,w,c
   641  0006D0  1801               	xorwf	?_kpRead^0,w,c
   642  0006D2  E109               	bnz	u1510
   643  0006D4  5048               	movf	(main@tecla+1)^0,w,c
   644  0006D6  1802               	xorwf	(?_kpRead+1)^0,w,c
   645  0006D8  B4D8               	btfsc	status,2,c
   646  0006DA  EF71  F003         	goto	u1511
   647  0006DE  EF73  F003         	goto	u1510
   648  0006E2                     u1511:
   649  0006E2  EF47  F003         	goto	l1910
   650  0006E6                     u1510:
   651  0006E6                     
   652                           ;main.c: 44:             tecla = kpRead();
   653  0006E6  EC4F  F00B         	call	_kpRead	;wreg free
   654  0006EA  C001  F047         	movff	?_kpRead,main@tecla
   655  0006EE  C002  F048         	movff	?_kpRead+1,main@tecla+1
   656  0006F2                     
   657                           ;main.c: 45:             if (((tecla) & (1<<(3)))) {
   658  0006F2  A647               	btfss	main@tecla^0,3,c
   659  0006F4  EF7E  F003         	goto	u1521
   660  0006F8  EF80  F003         	goto	u1520
   661  0006FC                     u1521:
   662  0006FC  EF47  F003         	goto	l1910
   663  000700                     u1520:
   664  000700                     
   665                           ;main.c: 46:                 lcdCommand(0x01);
   666  000700  0E01               	movlw	1
   667  000702  EC48  F009         	call	_lcdCommand
   668                           
   669                           ;main.c: 47:                 while (!((tecla) & (1<<(0)))) {
   670  000706  EF1A  F004         	goto	l1980
   671  00070A                     l1930:
   672                           
   673                           ;main.c: 49:                     lcdPosition(0, 0);
   674  00070A  0E00               	movlw	0
   675  00070C  6E09               	movwf	lcdPosition@coluna^0,c
   676  00070E  0E00               	movlw	0
   677  000710  ECE9  F00A         	call	_lcdPosition
   678  000714                     
   679                           ;main.c: 50:                     lcd_str("Temperatura:");
   680  000714  0E2B               	movlw	low STR_3
   681  000716  6E09               	movwf	lcd_str@str^0,c
   682  000718  0E06               	movlw	high STR_3
   683  00071A  6E0A               	movwf	(lcd_str@str+1)^0,c
   684  00071C  ECC1  F00A         	call	_lcd_str	;wreg free
   685  000720                     
   686                           ;main.c: 51:                     temperatura = setTemperature();
   687  000720  EC07  F009         	call	_setTemperature	;wreg free
   688  000724  C019  F03E         	movff	?_setTemperature,main@temperatura
   689  000728  C01A  F03F         	movff	?_setTemperature+1,main@temperatura+1
   690  00072C                     
   691                           ;main.c: 54:                     lcdPosition(1, 0);
   692  00072C  0E00               	movlw	0
   693  00072E  6E09               	movwf	lcdPosition@coluna^0,c
   694  000730  0E01               	movlw	1
   695  000732  ECE9  F00A         	call	_lcdPosition
   696  000736                     
   697                           ;main.c: 55:                     lcd_str("Tempo:");
   698  000736  0E38               	movlw	low STR_4
   699  000738  6E09               	movwf	lcd_str@str^0,c
   700  00073A  0E06               	movlw	high STR_4
   701  00073C  6E0A               	movwf	(lcd_str@str+1)^0,c
   702  00073E  ECC1  F00A         	call	_lcd_str	;wreg free
   703  000742                     
   704                           ;main.c: 56:                     lcdPosition(1, 6);
   705  000742  0E06               	movlw	6
   706  000744  6E09               	movwf	lcdPosition@coluna^0,c
   707  000746  0E01               	movlw	1
   708  000748  ECE9  F00A         	call	_lcdPosition
   709  00074C                     
   710                           ;main.c: 57:                     lcdData((char)minutosCentena);
   711  00074C  5040               	movf	main@minutosCentena^0,w,c
   712  00074E  EC97  F00A         	call	_lcdData
   713  000752                     
   714                           ;main.c: 58:                     lcdData((char)minutosDezena);
   715  000752  5041               	movf	main@minutosDezena^0,w,c
   716  000754  EC97  F00A         	call	_lcdData
   717  000758                     
   718                           ;main.c: 59:                     lcdData((char)minutosUnidade);
   719  000758  5042               	movf	main@minutosUnidade^0,w,c
   720  00075A  EC97  F00A         	call	_lcdData
   721  00075E                     
   722                           ;main.c: 60:                     lcd_str("min");
   723  00075E  0E3F               	movlw	low STR_5
   724  000760  6E09               	movwf	lcd_str@str^0,c
   725  000762  0E06               	movlw	high STR_5
   726  000764  6E0A               	movwf	(lcd_str@str+1)^0,c
   727  000766  ECC1  F00A         	call	_lcd_str	;wreg free
   728  00076A                     
   729                           ;main.c: 63:                     kpDebounce();
   730  00076A  EC7E  F007         	call	_kpDebounce	;wreg free
   731  00076E                     
   732                           ;main.c: 64:                     if (kpRead() != tecla) {
   733  00076E  EC4F  F00B         	call	_kpRead	;wreg free
   734  000772  5047               	movf	main@tecla^0,w,c
   735  000774  1801               	xorwf	?_kpRead^0,w,c
   736  000776  E109               	bnz	u1530
   737  000778  5048               	movf	(main@tecla+1)^0,w,c
   738  00077A  1802               	xorwf	(?_kpRead+1)^0,w,c
   739  00077C  B4D8               	btfsc	status,2,c
   740  00077E  EFC3  F003         	goto	u1531
   741  000782  EFC5  F003         	goto	u1530
   742  000786                     u1531:
   743  000786  EF1A  F004         	goto	l1980
   744  00078A                     u1530:
   745  00078A                     
   746                           ;main.c: 65:                         tecla = kpRead();
   747  00078A  EC4F  F00B         	call	_kpRead	;wreg free
   748  00078E  C001  F047         	movff	?_kpRead,main@tecla
   749  000792  C002  F048         	movff	?_kpRead+1,main@tecla+1
   750  000796                     
   751                           ;main.c: 66:                         if (((tecla) & (1<<(1)))) {
   752  000796  A247               	btfss	main@tecla^0,1,c
   753  000798  EFD0  F003         	goto	u1541
   754  00079C  EFD2  F003         	goto	u1540
   755  0007A0                     u1541:
   756  0007A0  EFE6  F003         	goto	l291
   757  0007A4                     u1540:
   758  0007A4                     
   759                           ;main.c: 67:                             if (minutosCentena == 57) {
   760  0007A4  0E39               	movlw	57
   761  0007A6  1840               	xorwf	main@minutosCentena^0,w,c
   762  0007A8  A4D8               	btfss	status,2,c
   763  0007AA  EFD9  F003         	goto	u1551
   764  0007AE  EFDB  F003         	goto	u1550
   765  0007B2                     u1551:
   766  0007B2  EFDF  F003         	goto	l1962
   767  0007B6                     u1550:
   768  0007B6                     
   769                           ;main.c: 68:                                 minutosCentena = 48;
   770  0007B6  0E30               	movlw	48
   771  0007B8  6E40               	movwf	main@minutosCentena^0,c
   772                           
   773                           ;main.c: 69:                             } else {
   774  0007BA  EF1A  F004         	goto	l1980
   775  0007BE                     l1962:
   776                           
   777                           ;main.c: 70:                                 minutosCentena += 1;
   778  0007BE  2A40               	incf	main@minutosCentena^0,f,c
   779  0007C0                     
   780                           ;main.c: 71:                                 tempoTotal += 100;
   781  0007C0  0E64               	movlw	100
   782  0007C2  2645               	addwf	main@tempoTotal^0,f,c
   783  0007C4  0E00               	movlw	0
   784  0007C6  2246               	addwfc	(main@tempoTotal+1)^0,f,c
   785  0007C8  EF1A  F004         	goto	l1980
   786  0007CC                     l291:
   787  0007CC  AA47               	btfss	main@tecla^0,5,c
   788  0007CE  EFEB  F003         	goto	u1561
   789  0007D2  EFED  F003         	goto	u1560
   790  0007D6                     u1561:
   791  0007D6  EF01  F004         	goto	l295
   792  0007DA                     u1560:
   793  0007DA                     
   794                           ;main.c: 74:                             if (minutosDezena == 57) {
   795  0007DA  0E39               	movlw	57
   796  0007DC  1841               	xorwf	main@minutosDezena^0,w,c
   797  0007DE  A4D8               	btfss	status,2,c
   798  0007E0  EFF4  F003         	goto	u1571
   799  0007E4  EFF6  F003         	goto	u1570
   800  0007E8                     u1571:
   801  0007E8  EFFA  F003         	goto	l1970
   802  0007EC                     u1570:
   803  0007EC                     
   804                           ;main.c: 75:                                 minutosDezena = 48;
   805  0007EC  0E30               	movlw	48
   806  0007EE  6E41               	movwf	main@minutosDezena^0,c
   807                           
   808                           ;main.c: 76:                             } else {
   809  0007F0  EF1A  F004         	goto	l1980
   810  0007F4                     l1970:
   811                           
   812                           ;main.c: 77:                                 minutosDezena += 1;
   813  0007F4  2A41               	incf	main@minutosDezena^0,f,c
   814  0007F6                     
   815                           ;main.c: 78:                                 tempoTotal += 10;
   816  0007F6  0E0A               	movlw	10
   817  0007F8  2645               	addwf	main@tempoTotal^0,f,c
   818  0007FA  0E00               	movlw	0
   819  0007FC  2246               	addwfc	(main@tempoTotal+1)^0,f,c
   820  0007FE  EF1A  F004         	goto	l1980
   821  000802                     l295:
   822  000802  A248               	btfss	(main@tecla+1)^0,1,c
   823  000804  EF06  F004         	goto	u1581
   824  000808  EF08  F004         	goto	u1580
   825  00080C                     u1581:
   826  00080C  EF1A  F004         	goto	l290
   827  000810                     u1580:
   828  000810                     
   829                           ;main.c: 81:                             if (minutosUnidade == 57) {
   830  000810  0E39               	movlw	57
   831  000812  1842               	xorwf	main@minutosUnidade^0,w,c
   832  000814  A4D8               	btfss	status,2,c
   833  000816  EF0F  F004         	goto	u1591
   834  00081A  EF11  F004         	goto	u1590
   835  00081E                     u1591:
   836  00081E  EF15  F004         	goto	l1978
   837  000822                     u1590:
   838  000822                     
   839                           ;main.c: 82:                                 minutosUnidade = 48;
   840  000822  0E30               	movlw	48
   841  000824  6E42               	movwf	main@minutosUnidade^0,c
   842                           
   843                           ;main.c: 83:                             } else {
   844  000826  EF1A  F004         	goto	l1980
   845  00082A                     l1978:
   846                           
   847                           ;main.c: 84:                                 minutosUnidade += 1;
   848  00082A  2A42               	incf	main@minutosUnidade^0,f,c
   849                           
   850                           ;main.c: 85:                                 tempoTotal += 1;
   851  00082C  4A45               	infsnz	main@tempoTotal^0,f,c
   852  00082E  2A46               	incf	(main@tempoTotal+1)^0,f,c
   853  000830  EF1A  F004         	goto	l1980
   854  000834                     l290:
   855  000834                     l1980:
   856                           
   857                           ;main.c: 47:                 while (!((tecla) & (1<<(0)))) {
   858  000834  A047               	btfss	main@tecla^0,0,c
   859  000836  EF1F  F004         	goto	u1601
   860  00083A  EF21  F004         	goto	u1600
   861  00083E                     u1601:
   862  00083E  EF85  F003         	goto	l1930
   863  000842                     u1600:
   864  000842                     
   865                           ;main.c: 91:                 if (((tecla) & (1<<(0)))) {
   866  000842  A047               	btfss	main@tecla^0,0,c
   867  000844  EF26  F004         	goto	u1611
   868  000848  EF28  F004         	goto	u1610
   869  00084C                     u1611:
   870  00084C  EF22  F005         	goto	l2056
   871  000850                     u1610:
   872  000850                     
   873                           ;main.c: 92:                     lcdCommand(0x01);
   874  000850  0E01               	movlw	1
   875  000852  EC48  F009         	call	_lcdCommand
   876  000856                     
   877                           ;main.c: 94:                     adc_init();
   878  000856  EC48  F00B         	call	_adc_init	;wreg free
   879  00085A                     
   880                           ;main.c: 96:                     temperaturaMaxima = temperatura + 10;
   881  00085A  0E0A               	movlw	10
   882  00085C  243E               	addwf	main@temperatura^0,w,c
   883  00085E  6E32               	movwf	main@temperaturaMaxima^0,c
   884  000860  0E00               	movlw	0
   885  000862  203F               	addwfc	(main@temperatura+1)^0,w,c
   886  000864  6E33               	movwf	(main@temperaturaMaxima+1)^0,c
   887  000866                     
   888                           ;main.c: 97:                     temperaturaMinima = temperatura - 10;
   889  000866  0EF6               	movlw	246
   890  000868  243E               	addwf	main@temperatura^0,w,c
   891  00086A  6E34               	movwf	main@temperaturaMinima^0,c
   892  00086C  0EFF               	movlw	255
   893  00086E  203F               	addwfc	(main@temperatura+1)^0,w,c
   894  000870  6E35               	movwf	(main@temperaturaMinima+1)^0,c
   895  000872                     
   896                           ;main.c: 100:                     pwmInit();
   897  000872  EC3E  F00B         	call	_pwmInit	;wreg free
   898  000876                     
   899                           ;main.c: 101:                     pwmSet1(30);
   900  000876  0E1E               	movlw	30
   901  000878  ECFD  F009         	call	_pwmSet1
   902  00087C                     
   903                           ;main.c: 103:                     PORTB = 0xFF;
   904  00087C  6881               	setf	129,c	;volatile
   905                           
   906                           ;main.c: 105:                     while ((!((tecla) & (1<<(4))) && (tempoTotal > 0))) {
   907  00087E  EF12  F005         	goto	l2052
   908  000882                     l1996:
   909                           
   910                           ;main.c: 106:                         lcdCommand(0x01);
   911  000882  0E01               	movlw	1
   912  000884  EC48  F009         	call	_lcdCommand
   913                           
   914                           ;main.c: 108:                         lcdPosition(0, 2);
   915  000888  0E02               	movlw	2
   916  00088A  6E09               	movwf	lcdPosition@coluna^0,c
   917  00088C  0E00               	movlw	0
   918  00088E  ECE9  F00A         	call	_lcdPosition
   919  000892                     
   920                           ;main.c: 109:                         lcd_str("Funcionando!");
   921  000892  0E1E               	movlw	low STR_6
   922  000894  6E09               	movwf	lcd_str@str^0,c
   923  000896  0E06               	movlw	high STR_6
   924  000898  6E0A               	movwf	(lcd_str@str+1)^0,c
   925  00089A  ECC1  F00A         	call	_lcd_str	;wreg free
   926  00089E                     
   927                           ;main.c: 111:                         lcdPosition(1, 9);
   928  00089E  0E09               	movlw	9
   929  0008A0  6E09               	movwf	lcdPosition@coluna^0,c
   930  0008A2  0E01               	movlw	1
   931  0008A4  ECE9  F00A         	call	_lcdPosition
   932  0008A8                     
   933                           ;main.c: 112:                         itoa(tempoTotal, tempoRelogio);
   934  0008A8  C045  F015         	movff	main@tempoTotal,itoa@val
   935  0008AC  C046  F016         	movff	main@tempoTotal+1,itoa@val+1
   936  0008B0  0E2C               	movlw	low main@tempoRelogio
   937  0008B2  6E17               	movwf	itoa@str^0,c
   938  0008B4  0E00               	movlw	high main@tempoRelogio
   939  0008B6  6E18               	movwf	(itoa@str+1)^0,c
   940  0008B8  EC3B  F008         	call	_itoa	;wreg free
   941  0008BC                     
   942                           ;main.c: 113:                         lcdData(tempoRelogio[2]);
   943  0008BC  502E               	movf	(main@tempoRelogio+2)^0,w,c
   944  0008BE  EC97  F00A         	call	_lcdData
   945  0008C2                     
   946                           ;main.c: 114:                         lcdData(tempoRelogio[3]);
   947  0008C2  502F               	movf	(main@tempoRelogio+3)^0,w,c
   948  0008C4  EC97  F00A         	call	_lcdData
   949  0008C8                     
   950                           ;main.c: 115:                         lcdData(tempoRelogio[4]);
   951  0008C8  5030               	movf	(main@tempoRelogio+4)^0,w,c
   952  0008CA  EC97  F00A         	call	_lcdData
   953  0008CE                     
   954                           ;main.c: 116:                         lcd_str("min");
   955  0008CE  0E3F               	movlw	low STR_5
   956  0008D0  6E09               	movwf	lcd_str@str^0,c
   957  0008D2  0E06               	movlw	high STR_5
   958  0008D4  6E0A               	movwf	(lcd_str@str+1)^0,c
   959  0008D6  ECC1  F00A         	call	_lcd_str	;wreg free
   960  0008DA                     
   961                           ;main.c: 117:                         tempoTotal--;
   962  0008DA  0645               	decf	main@tempoTotal^0,f,c
   963  0008DC  A0D8               	btfss	status,0,c
   964  0008DE  0646               	decf	(main@tempoTotal+1)^0,f,c
   965  0008E0                     
   966                           ;main.c: 120:                         tmpi = (adc_amostra(1)*10) / 2;
   967  0008E0  0E01               	movlw	1
   968  0008E2  ECBF  F008         	call	_adc_amostra
   969  0008E6  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
   970  0008EA  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
   971  0008EE  0E00               	movlw	0
   972  0008F0  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   973  0008F2  0E0A               	movlw	10
   974  0008F4  6E0A               	movwf	___wmul@multiplicand^0,c
   975  0008F6  EC06  F00B         	call	___wmul	;wreg free
   976  0008FA  90D8               	bcf	status,0,c
   977  0008FC  3009               	rrcf	(?___wmul+1)^0,w,c
   978  0008FE  6E26               	movwf	??_main^0,c
   979  000900  3008               	rrcf	?___wmul^0,w,c
   980  000902  6E36               	movwf	main@tmpi^0,c
   981  000904  C026  F037         	movff	??_main,main@tmpi+1
   982  000908                     
   983                           ;main.c: 121:                         temperaturaLcd = ((tmpi - 280) * 222 / 46) + 280;
   984  000908  0EE8               	movlw	232
   985  00090A  2436               	addwf	main@tmpi^0,w,c
   986  00090C  6E08               	movwf	___wmul@multiplier^0,c
   987  00090E  0EFE               	movlw	254
   988  000910  2037               	addwfc	(main@tmpi+1)^0,w,c
   989  000912  6E09               	movwf	(___wmul@multiplier+1)^0,c
   990  000914  0E00               	movlw	0
   991  000916  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
   992  000918  0EDE               	movlw	222
   993  00091A  6E0A               	movwf	___wmul@multiplicand^0,c
   994  00091C  EC06  F00B         	call	___wmul	;wreg free
   995  000920  C008  F00E         	movff	?___wmul,___lwdiv@dividend
   996  000924  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
   997  000928  0E00               	movlw	0
   998  00092A  6E11               	movwf	(___lwdiv@divisor+1)^0,c
   999  00092C  0E2E               	movlw	46
  1000  00092E  6E10               	movwf	___lwdiv@divisor^0,c
  1001  000930  ECC3  F009         	call	___lwdiv	;wreg free
  1002  000934  0E18               	movlw	24
  1003  000936  240E               	addwf	?___lwdiv^0,w,c
  1004  000938  6E43               	movwf	main@temperaturaLcd^0,c
  1005  00093A  0E01               	movlw	1
  1006  00093C  200F               	addwfc	(?___lwdiv+1)^0,w,c
  1007  00093E  6E44               	movwf	(main@temperaturaLcd+1)^0,c
  1008  000940                     
  1009                           ;main.c: 124:                         lcdPosition(1, 1);
  1010  000940  0E01               	movlw	1
  1011  000942  6E09               	movwf	lcdPosition@coluna^0,c
  1012  000944  0E01               	movlw	1
  1013  000946  ECE9  F00A         	call	_lcdPosition
  1014  00094A                     
  1015                           ;main.c: 125:                         itoa(temperaturaLcd, str);
  1016  00094A  C043  F015         	movff	main@temperaturaLcd,itoa@val
  1017  00094E  C044  F016         	movff	main@temperaturaLcd+1,itoa@val+1
  1018  000952  0E38               	movlw	low main@str
  1019  000954  6E17               	movwf	itoa@str^0,c
  1020  000956  0E00               	movlw	high main@str
  1021  000958  6E18               	movwf	(itoa@str+1)^0,c
  1022  00095A  EC3B  F008         	call	_itoa	;wreg free
  1023  00095E                     
  1024                           ;main.c: 126:                         lcdData(str[1]);
  1025  00095E  5039               	movf	(main@str+1)^0,w,c
  1026  000960  EC97  F00A         	call	_lcdData
  1027  000964                     
  1028                           ;main.c: 127:                         lcdData(str[2]);
  1029  000964  503A               	movf	(main@str+2)^0,w,c
  1030  000966  EC97  F00A         	call	_lcdData
  1031  00096A                     
  1032                           ;main.c: 128:                         lcdData(str[3]);
  1033  00096A  503B               	movf	(main@str+3)^0,w,c
  1034  00096C  EC97  F00A         	call	_lcdData
  1035  000970                     
  1036                           ;main.c: 129:                         lcdData(',');
  1037  000970  0E2C               	movlw	44
  1038  000972  EC97  F00A         	call	_lcdData
  1039  000976                     
  1040                           ;main.c: 130:                         lcdData(str[4]);
  1041  000976  503C               	movf	(main@str+4)^0,w,c
  1042  000978  EC97  F00A         	call	_lcdData
  1043  00097C                     
  1044                           ;main.c: 131:                         lcd_str("C");
  1045  00097C  0E43               	movlw	low STR_8
  1046  00097E  6E09               	movwf	lcd_str@str^0,c
  1047  000980  0E06               	movlw	high STR_8
  1048  000982  6E0A               	movwf	(lcd_str@str+1)^0,c
  1049  000984  ECC1  F00A         	call	_lcd_str	;wreg free
  1050  000988                     
  1051                           ;main.c: 133:                         atraso_ms(1000);
  1052  000988  0E03               	movlw	3
  1053  00098A  6E02               	movwf	(atraso_ms@t+1)^0,c
  1054  00098C  0EE8               	movlw	232
  1055  00098E  6E01               	movwf	atraso_ms@t^0,c
  1056  000990  EC65  F00A         	call	_atraso_ms	;wreg free
  1057  000994                     
  1058                           ;main.c: 136:                         if (temperaturaLcd > temperaturaMaxima * 10) {
  1059  000994  C032  F008         	movff	main@temperaturaMaxima,___wmul@multiplier
  1060  000998  C033  F009         	movff	main@temperaturaMaxima+1,___wmul@multiplier+1
  1061  00099C  0E00               	movlw	0
  1062  00099E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1063  0009A0  0E0A               	movlw	10
  1064  0009A2  6E0A               	movwf	___wmul@multiplicand^0,c
  1065  0009A4  EC06  F00B         	call	___wmul	;wreg free
  1066  0009A8  5043               	movf	main@temperaturaLcd^0,w,c
  1067  0009AA  5C08               	subwf	?___wmul^0,w,c
  1068  0009AC  5044               	movf	(main@temperaturaLcd+1)^0,w,c
  1069  0009AE  5809               	subwfb	(?___wmul+1)^0,w,c
  1070  0009B0  B0D8               	btfsc	status,0,c
  1071  0009B2  EFDD  F004         	goto	u1621
  1072  0009B6  EFDF  F004         	goto	u1620
  1073  0009BA                     u1621:
  1074  0009BA  EFE6  F004         	goto	l2042
  1075  0009BE                     u1620:
  1076  0009BE                     
  1077                           ;main.c: 137:                             atraso_ms(100);
  1078  0009BE  0E00               	movlw	0
  1079  0009C0  6E02               	movwf	(atraso_ms@t+1)^0,c
  1080  0009C2  0E64               	movlw	100
  1081  0009C4  6E01               	movwf	atraso_ms@t^0,c
  1082  0009C6  EC65  F00A         	call	_atraso_ms	;wreg free
  1083  0009CA                     
  1084                           ;main.c: 138:                             PORTCbits.RC5 = 0;
  1085  0009CA  9A82               	bcf	130,5,c	;volatile
  1086  0009CC                     l2042:
  1087                           
  1088                           ;main.c: 141:                         if (temperaturaLcd < temperaturaMinima * 10) {
  1089  0009CC  C034  F008         	movff	main@temperaturaMinima,___wmul@multiplier
  1090  0009D0  C035  F009         	movff	main@temperaturaMinima+1,___wmul@multiplier+1
  1091  0009D4  0E00               	movlw	0
  1092  0009D6  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1093  0009D8  0E0A               	movlw	10
  1094  0009DA  6E0A               	movwf	___wmul@multiplicand^0,c
  1095  0009DC  EC06  F00B         	call	___wmul	;wreg free
  1096  0009E0  5008               	movf	?___wmul^0,w,c
  1097  0009E2  5C43               	subwf	main@temperaturaLcd^0,w,c
  1098  0009E4  5009               	movf	(?___wmul+1)^0,w,c
  1099  0009E6  5844               	subwfb	(main@temperaturaLcd+1)^0,w,c
  1100  0009E8  B0D8               	btfsc	status,0,c
  1101  0009EA  EFF9  F004         	goto	u1631
  1102  0009EE  EFFB  F004         	goto	u1630
  1103  0009F2                     u1631:
  1104  0009F2  EFFC  F004         	goto	l2046
  1105  0009F6                     u1630:
  1106  0009F6                     
  1107                           ;main.c: 142:                             PORTCbits.RC5 = 1;
  1108  0009F6  8A82               	bsf	130,5,c	;volatile
  1109  0009F8                     l2046:
  1110                           
  1111                           ;main.c: 145:                         kpDebounce();
  1112  0009F8  EC7E  F007         	call	_kpDebounce	;wreg free
  1113  0009FC                     
  1114                           ;main.c: 146:                         if (kpRead() != tecla) {
  1115  0009FC  EC4F  F00B         	call	_kpRead	;wreg free
  1116  000A00  5047               	movf	main@tecla^0,w,c
  1117  000A02  1801               	xorwf	?_kpRead^0,w,c
  1118  000A04  E109               	bnz	u1640
  1119  000A06  5048               	movf	(main@tecla+1)^0,w,c
  1120  000A08  1802               	xorwf	(?_kpRead+1)^0,w,c
  1121  000A0A  B4D8               	btfsc	status,2,c
  1122  000A0C  EF0A  F005         	goto	u1641
  1123  000A10  EF0C  F005         	goto	u1640
  1124  000A14                     u1641:
  1125  000A14  EF12  F005         	goto	l2052
  1126  000A18                     u1640:
  1127  000A18                     
  1128                           ;main.c: 147:                             tecla = kpRead();
  1129  000A18  EC4F  F00B         	call	_kpRead	;wreg free
  1130  000A1C  C001  F047         	movff	?_kpRead,main@tecla
  1131  000A20  C002  F048         	movff	?_kpRead+1,main@tecla+1
  1132  000A24                     l2052:
  1133                           
  1134                           ;main.c: 105:                     while ((!((tecla) & (1<<(4))) && (tempoTotal > 0))) {
  1135  000A24  B847               	btfsc	main@tecla^0,4,c
  1136  000A26  EF17  F005         	goto	u1651
  1137  000A2A  EF19  F005         	goto	u1650
  1138  000A2E                     u1651:
  1139  000A2E  EF22  F005         	goto	l2056
  1140  000A32                     u1650:
  1141  000A32  5045               	movf	main@tempoTotal^0,w,c
  1142  000A34  1046               	iorwf	(main@tempoTotal+1)^0,w,c
  1143  000A36  A4D8               	btfss	status,2,c
  1144  000A38  EF20  F005         	goto	u1661
  1145  000A3C  EF22  F005         	goto	u1660
  1146  000A40                     u1661:
  1147  000A40  EF41  F004         	goto	l1996
  1148  000A44                     u1660:
  1149  000A44                     l2056:
  1150                           
  1151                           ;main.c: 151:                 PORTB = 0x00;
  1152  000A44  0E00               	movlw	0
  1153  000A46  6E81               	movwf	129,c	;volatile
  1154  000A48                     
  1155                           ;main.c: 152:                 lcdCommand(0x01);
  1156  000A48  0E01               	movlw	1
  1157  000A4A  EC48  F009         	call	_lcdCommand
  1158  000A4E                     
  1159                           ;main.c: 153:                 PORTCbits.RC5 = 0;
  1160  000A4E  9A82               	bcf	130,5,c	;volatile
  1161  000A50                     
  1162                           ;main.c: 154:                 TRISCbits.TRISC0 = 0;
  1163  000A50  9094               	bcf	148,0,c	;volatile
  1164  000A52                     
  1165                           ;main.c: 155:                 pwmSet1(0);
  1166  000A52  0E00               	movlw	0
  1167  000A54  ECFD  F009         	call	_pwmSet1
  1168  000A58  EF47  F003         	goto	l1910
  1169  000A5C  EF00  F000         	goto	start
  1170  000A60                     __end_of_main:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _setTemperature *****************
  1174 ;; Defined at:
  1175 ;;		line 7 in file "temperaturaForno.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  str             6   28[COMRAM] unsigned char [6]
  1180 ;;  temperatura     2   35[COMRAM] int 
  1181 ;;  i               2    0        int 
  1182 ;;  tmp             1   34[COMRAM] unsigned char 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2   24[COMRAM] int 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1192 ;;      Params:         2       0       0       0       0       0       0
  1193 ;;      Locals:         9       0       0       0       0       0       0
  1194 ;;      Temps:          2       0       0       0       0       0       0
  1195 ;;      Totals:        13       0       0       0       0       0       0
  1196 ;;Total ram usage:       13 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 4
  1199 ;; This function calls:
  1200 ;;		___lwdiv
  1201 ;;		___wmul
  1202 ;;		_adc_amostra
  1203 ;;		_itoa
  1204 ;;		_lcdData
  1205 ;;		_lcdPosition
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text1
  1212  00120E                     __ptext1:
  1213                           	callstack 0
  1214  00120E                     _setTemperature:
  1215                           	callstack 26
  1216  00120E                     
  1217                           ;temperaturaForno.c: 8:     char str[6];;temperaturaForno.c: 9:     unsigned char tmp;;t
      +                          emperaturaForno.c: 10:     int i, temperatura;;temperaturaForno.c: 12:     tmp = (adc_am
      +                          ostra(0)*10) / 204;
  1218  00120E  0E00               	movlw	0
  1219  001210  ECBF  F008         	call	_adc_amostra
  1220  001214  C001  F008         	movff	?_adc_amostra,___wmul@multiplier
  1221  001218  C002  F009         	movff	?_adc_amostra+1,___wmul@multiplier+1
  1222  00121C  0E00               	movlw	0
  1223  00121E  6E0B               	movwf	(___wmul@multiplicand+1)^0,c
  1224  001220  0E0A               	movlw	10
  1225  001222  6E0A               	movwf	___wmul@multiplicand^0,c
  1226  001224  EC06  F00B         	call	___wmul	;wreg free
  1227  001228  C008  F00E         	movff	?___wmul,___lwdiv@dividend
  1228  00122C  C009  F00F         	movff	?___wmul+1,___lwdiv@dividend+1
  1229  001230  0E00               	movlw	0
  1230  001232  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1231  001234  0ECC               	movlw	204
  1232  001236  6E10               	movwf	___lwdiv@divisor^0,c
  1233  001238  ECC3  F009         	call	___lwdiv	;wreg free
  1234  00123C  500E               	movf	?___lwdiv^0,w,c
  1235  00123E  6E23               	movwf	setTemperature@tmp^0,c
  1236  001240                     
  1237                           ;temperaturaForno.c: 13:     temperatura = (((int) tmp) * 4) + 50;
  1238  001240  5023               	movf	setTemperature@tmp^0,w,c
  1239  001242  0D04               	mullw	4
  1240  001244  CFF3 F01B          	movff	prodl,??_setTemperature
  1241  001248  CFF4 F01C          	movff	prodh,??_setTemperature+1
  1242  00124C  0E32               	movlw	50
  1243  00124E  241B               	addwf	??_setTemperature^0,w,c
  1244  001250  6E24               	movwf	setTemperature@temperatura^0,c
  1245  001252  0E00               	movlw	0
  1246  001254  201C               	addwfc	(??_setTemperature+1)^0,w,c
  1247  001256  6E25               	movwf	(setTemperature@temperatura+1)^0,c
  1248  001258                     
  1249                           ;temperaturaForno.c: 15:     itoa((char) temperatura, str);
  1250  001258  C024  F015         	movff	setTemperature@temperatura,itoa@val
  1251  00125C  6A16               	clrf	(itoa@val+1)^0,c
  1252  00125E  0E1D               	movlw	low setTemperature@str
  1253  001260  6E17               	movwf	itoa@str^0,c
  1254  001262  0E00               	movlw	high setTemperature@str
  1255  001264  6E18               	movwf	(itoa@str+1)^0,c
  1256  001266  EC3B  F008         	call	_itoa	;wreg free
  1257  00126A                     
  1258                           ;temperaturaForno.c: 17:     lcdPosition(0, 12);
  1259  00126A  0E0C               	movlw	12
  1260  00126C  6E09               	movwf	lcdPosition@coluna^0,c
  1261  00126E  0E00               	movlw	0
  1262  001270  ECE9  F00A         	call	_lcdPosition
  1263  001274                     
  1264                           ;temperaturaForno.c: 18:     lcdData(str[2]);
  1265  001274  501F               	movf	(setTemperature@str+2)^0,w,c
  1266  001276  EC97  F00A         	call	_lcdData
  1267  00127A                     
  1268                           ;temperaturaForno.c: 19:     lcdData(str[3]);
  1269  00127A  5020               	movf	(setTemperature@str+3)^0,w,c
  1270  00127C  EC97  F00A         	call	_lcdData
  1271  001280                     
  1272                           ;temperaturaForno.c: 20:     lcdData(str[4]);
  1273  001280  5021               	movf	(setTemperature@str+4)^0,w,c
  1274  001282  EC97  F00A         	call	_lcdData
  1275  001286                     
  1276                           ;temperaturaForno.c: 22:     return temperatura;
  1277  001286  C024  F019         	movff	setTemperature@temperatura,?_setTemperature
  1278  00128A  C025  F01A         	movff	setTemperature@temperatura+1,?_setTemperature+1
  1279  00128E  0012               	return		;funcret
  1280  001290                     __end_of_setTemperature:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _lcdPosition *****************
  1284 ;; Defined at:
  1285 ;;		line 118 in file "lcd.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  linha           1    wreg     unsigned char 
  1288 ;;  coluna          1    8[COMRAM] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  linha           1   10[COMRAM] unsigned char 
  1291 ;;  comando         1    9[COMRAM] unsigned char 
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1301 ;;      Params:         1       0       0       0       0       0       0
  1302 ;;      Locals:         2       0       0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0       0       0
  1304 ;;      Totals:         3       0       0       0       0       0       0
  1305 ;;Total ram usage:        3 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 3
  1308 ;; This function calls:
  1309 ;;		_lcdCommand
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;;		_setTemperature
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text2
  1317  0015D2                     __ptext2:
  1318                           	callstack 0
  1319  0015D2                     _lcdPosition:
  1320                           	callstack 26
  1321                           
  1322                           ;incstack = 0
  1323                           ;lcdPosition@linha stored from wreg
  1324  0015D2  6E0B               	movwf	lcdPosition@linha^0,c
  1325  0015D4                     
  1326                           ;lcd.c: 119:     char comando = 0;
  1327  0015D4  0E00               	movlw	0
  1328  0015D6  6E0A               	movwf	lcdPosition@comando^0,c
  1329  0015D8                     
  1330                           ;lcd.c: 121:     if(linha == 0) comando = 0x80 + coluna;
  1331  0015D8  500B               	movf	lcdPosition@linha^0,w,c
  1332  0015DA  A4D8               	btfss	status,2,c
  1333  0015DC  EFF2  F00A         	goto	u1431
  1334  0015E0  EFF4  F00A         	goto	u1430
  1335  0015E4                     u1431:
  1336  0015E4  EFF7  F00A         	goto	l146
  1337  0015E8                     u1430:
  1338  0015E8  5009               	movf	lcdPosition@coluna^0,w,c
  1339  0015EA  0F80               	addlw	128
  1340  0015EC  6E0A               	movwf	lcdPosition@comando^0,c
  1341  0015EE                     l146:
  1342                           
  1343                           ;lcd.c: 122:     if(linha == 1) comando = 0xC0 + coluna;
  1344  0015EE  040B               	decf	lcdPosition@linha^0,w,c
  1345  0015F0  A4D8               	btfss	status,2,c
  1346  0015F2  EFFD  F00A         	goto	u1441
  1347  0015F6  EFFF  F00A         	goto	u1440
  1348  0015FA                     u1441:
  1349  0015FA  EF02  F00B         	goto	l1764
  1350  0015FE                     u1440:
  1351  0015FE  5009               	movf	lcdPosition@coluna^0,w,c
  1352  001600  0FC0               	addlw	192
  1353  001602  6E0A               	movwf	lcdPosition@comando^0,c
  1354  001604                     l1764:
  1355                           
  1356                           ;lcd.c: 124:     lcdCommand(comando);
  1357  001604  500A               	movf	lcdPosition@comando^0,w,c
  1358  001606  EC48  F009         	call	_lcdCommand
  1359  00160A  0012               	return		;funcret
  1360  00160C                     __end_of_lcdPosition:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _itoa *****************
  1364 ;; Defined at:
  1365 ;;		line 26 in file "itoa.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  val             2   20[COMRAM] unsigned int 
  1368 ;;  str             2   22[COMRAM] PTR unsigned char 
  1369 ;;		 -> setTemperature@str(6), main@str(6), main@tempoRelogio(6), 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1381 ;;      Params:         4       0       0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0
  1384 ;;      Totals:         4       0       0       0       0       0       0
  1385 ;;Total ram usage:        4 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 1
  1388 ;; This function calls:
  1389 ;;		___lwdiv
  1390 ;;		___lwmod
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;;		_setTemperature
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text3
  1398  001076                     __ptext3:
  1399                           	callstack 0
  1400  001076                     _itoa:
  1401                           	callstack 28
  1402  001076                     
  1403                           ;itoa.c: 26: void itoa(unsigned int val, char* str );itoa.c: 27: {;itoa.c: 28:   str[0]=
      +                          (val/10000)+0x30;
  1404  001076  C015  F00E         	movff	itoa@val,___lwdiv@dividend
  1405  00107A  C016  F00F         	movff	itoa@val+1,___lwdiv@dividend+1
  1406  00107E  0E27               	movlw	39
  1407  001080  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1408  001082  0E10               	movlw	16
  1409  001084  6E10               	movwf	___lwdiv@divisor^0,c
  1410  001086  ECC3  F009         	call	___lwdiv	;wreg free
  1411  00108A  500E               	movf	?___lwdiv^0,w,c
  1412  00108C  0F30               	addlw	48
  1413  00108E  C017  FFD9         	movff	itoa@str,fsr2l
  1414  001092  C018  FFDA         	movff	itoa@str+1,fsr2h
  1415  001096  6EDF               	movwf	indf2,c
  1416                           
  1417                           ;itoa.c: 29:   str[1]=((val%10000)/1000)+0x30;
  1418  001098  EE20 F001          	lfsr	2,1
  1419  00109C  5017               	movf	itoa@str^0,w,c
  1420  00109E  26D9               	addwf	fsr2l,f,c
  1421  0010A0  5018               	movf	(itoa@str+1)^0,w,c
  1422  0010A2  22DA               	addwfc	fsr2h,f,c
  1423  0010A4  0E27               	movlw	39
  1424  0010A6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1425  0010A8  0E10               	movlw	16
  1426  0010AA  6E03               	movwf	___lwmod@divisor^0,c
  1427  0010AC  C015  F001         	movff	itoa@val,___lwmod@dividend
  1428  0010B0  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1429  0010B4  EC33  F00A         	call	___lwmod	;wreg free
  1430  0010B8  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1431  0010BC  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1432  0010C0  0E03               	movlw	3
  1433  0010C2  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1434  0010C4  0EE8               	movlw	232
  1435  0010C6  6E10               	movwf	___lwdiv@divisor^0,c
  1436  0010C8  ECC3  F009         	call	___lwdiv	;wreg free
  1437  0010CC  500E               	movf	?___lwdiv^0,w,c
  1438  0010CE  0F30               	addlw	48
  1439  0010D0  6EDF               	movwf	indf2,c
  1440                           
  1441                           ;itoa.c: 30:   str[2]=((val%1000)/100)+0x30;
  1442  0010D2  EE20 F002          	lfsr	2,2
  1443  0010D6  5017               	movf	itoa@str^0,w,c
  1444  0010D8  26D9               	addwf	fsr2l,f,c
  1445  0010DA  5018               	movf	(itoa@str+1)^0,w,c
  1446  0010DC  22DA               	addwfc	fsr2h,f,c
  1447  0010DE  0E03               	movlw	3
  1448  0010E0  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1449  0010E2  0EE8               	movlw	232
  1450  0010E4  6E03               	movwf	___lwmod@divisor^0,c
  1451  0010E6  C015  F001         	movff	itoa@val,___lwmod@dividend
  1452  0010EA  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1453  0010EE  EC33  F00A         	call	___lwmod	;wreg free
  1454  0010F2  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1455  0010F6  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1456  0010FA  0E00               	movlw	0
  1457  0010FC  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1458  0010FE  0E64               	movlw	100
  1459  001100  6E10               	movwf	___lwdiv@divisor^0,c
  1460  001102  ECC3  F009         	call	___lwdiv	;wreg free
  1461  001106  500E               	movf	?___lwdiv^0,w,c
  1462  001108  0F30               	addlw	48
  1463  00110A  6EDF               	movwf	indf2,c
  1464                           
  1465                           ;itoa.c: 31:   str[3]=((val%100)/10)+0x30;
  1466  00110C  EE20 F003          	lfsr	2,3
  1467  001110  5017               	movf	itoa@str^0,w,c
  1468  001112  26D9               	addwf	fsr2l,f,c
  1469  001114  5018               	movf	(itoa@str+1)^0,w,c
  1470  001116  22DA               	addwfc	fsr2h,f,c
  1471  001118  0E00               	movlw	0
  1472  00111A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1473  00111C  0E64               	movlw	100
  1474  00111E  6E03               	movwf	___lwmod@divisor^0,c
  1475  001120  C015  F001         	movff	itoa@val,___lwmod@dividend
  1476  001124  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1477  001128  EC33  F00A         	call	___lwmod	;wreg free
  1478  00112C  C001  F00E         	movff	?___lwmod,___lwdiv@dividend
  1479  001130  C002  F00F         	movff	?___lwmod+1,___lwdiv@dividend+1
  1480  001134  0E00               	movlw	0
  1481  001136  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1482  001138  0E0A               	movlw	10
  1483  00113A  6E10               	movwf	___lwdiv@divisor^0,c
  1484  00113C  ECC3  F009         	call	___lwdiv	;wreg free
  1485  001140  500E               	movf	?___lwdiv^0,w,c
  1486  001142  0F30               	addlw	48
  1487  001144  6EDF               	movwf	indf2,c
  1488                           
  1489                           ;itoa.c: 32:   str[4]=(val%10)+0x30;
  1490  001146  EE20 F004          	lfsr	2,4
  1491  00114A  5017               	movf	itoa@str^0,w,c
  1492  00114C  26D9               	addwf	fsr2l,f,c
  1493  00114E  5018               	movf	(itoa@str+1)^0,w,c
  1494  001150  22DA               	addwfc	fsr2h,f,c
  1495  001152  C015  F001         	movff	itoa@val,___lwmod@dividend
  1496  001156  C016  F002         	movff	itoa@val+1,___lwmod@dividend+1
  1497  00115A  0E00               	movlw	0
  1498  00115C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1499  00115E  0E0A               	movlw	10
  1500  001160  6E03               	movwf	___lwmod@divisor^0,c
  1501  001162  EC33  F00A         	call	___lwmod	;wreg free
  1502  001166  5001               	movf	?___lwmod^0,w,c
  1503  001168  0F30               	addlw	48
  1504  00116A  6EDF               	movwf	indf2,c
  1505  00116C                     
  1506                           ;itoa.c: 33:   str[5]=0;
  1507  00116C  EE20 F005          	lfsr	2,5
  1508  001170  5017               	movf	itoa@str^0,w,c
  1509  001172  26D9               	addwf	fsr2l,f,c
  1510  001174  5018               	movf	(itoa@str+1)^0,w,c
  1511  001176  22DA               	addwfc	fsr2h,f,c
  1512  001178  0E00               	movlw	0
  1513  00117A  6EDF               	movwf	indf2,c
  1514  00117C  0012               	return		;funcret
  1515  00117E                     __end_of_itoa:
  1516                           	callstack 0
  1517                           
  1518 ;; *************** function ___lwmod *****************
  1519 ;; Defined at:
  1520 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwmod.c"
  1521 ;; Parameters:    Size  Location     Type
  1522 ;;  dividend        2    0[COMRAM] unsigned int 
  1523 ;;  divisor         2    2[COMRAM] unsigned int 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  counter         1    4[COMRAM] unsigned char 
  1526 ;; Return value:  Size  Location     Type
  1527 ;;                  2    0[COMRAM] unsigned int 
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1535 ;;      Params:         4       0       0       0       0       0       0
  1536 ;;      Locals:         1       0       0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0
  1538 ;;      Totals:         5       0       0       0       0       0       0
  1539 ;;Total ram usage:        5 bytes
  1540 ;; Hardware stack levels used: 1
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_itoa
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text4
  1549  001466                     __ptext4:
  1550                           	callstack 0
  1551  001466                     ___lwmod:
  1552                           	callstack 28
  1553  001466  5003               	movf	___lwmod@divisor^0,w,c
  1554  001468  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  1555  00146A  B4D8               	btfsc	status,2,c
  1556  00146C  EF3A  F00A         	goto	u1201
  1557  001470  EF3C  F00A         	goto	u1200
  1558  001474                     u1201:
  1559  001474  EF60  F00A         	goto	l828
  1560  001478                     u1200:
  1561  001478  0E01               	movlw	1
  1562  00147A  6E05               	movwf	___lwmod@counter^0,c
  1563  00147C  EF44  F00A         	goto	l1690
  1564  001480                     l1688:
  1565  001480  90D8               	bcf	status,0,c
  1566  001482  3603               	rlcf	___lwmod@divisor^0,f,c
  1567  001484  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  1568  001486  2A05               	incf	___lwmod@counter^0,f,c
  1569  001488                     l1690:
  1570  001488  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  1571  00148A  EF49  F00A         	goto	u1211
  1572  00148E  EF4B  F00A         	goto	u1210
  1573  001492                     u1211:
  1574  001492  EF40  F00A         	goto	l1688
  1575  001496                     u1210:
  1576  001496                     l1692:
  1577  001496  5003               	movf	___lwmod@divisor^0,w,c
  1578  001498  5C01               	subwf	___lwmod@dividend^0,w,c
  1579  00149A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1580  00149C  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  1581  00149E  A0D8               	btfss	status,0,c
  1582  0014A0  EF54  F00A         	goto	u1221
  1583  0014A4  EF56  F00A         	goto	u1220
  1584  0014A8                     u1221:
  1585  0014A8  EF5A  F00A         	goto	l1696
  1586  0014AC                     u1220:
  1587  0014AC  5003               	movf	___lwmod@divisor^0,w,c
  1588  0014AE  5E01               	subwf	___lwmod@dividend^0,f,c
  1589  0014B0  5004               	movf	(___lwmod@divisor+1)^0,w,c
  1590  0014B2  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  1591  0014B4                     l1696:
  1592  0014B4  90D8               	bcf	status,0,c
  1593  0014B6  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  1594  0014B8  3203               	rrcf	___lwmod@divisor^0,f,c
  1595  0014BA  2E05               	decfsz	___lwmod@counter^0,f,c
  1596  0014BC  EF4B  F00A         	goto	l1692
  1597  0014C0                     l828:
  1598  0014C0  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1599  0014C4  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1600  0014C8  0012               	return		;funcret
  1601  0014CA                     __end_of___lwmod:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _adc_amostra *****************
  1605 ;; Defined at:
  1606 ;;		line 44 in file "adc.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  canal           1    wreg     unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  canal           1    6[COMRAM] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  2    0[COMRAM] unsigned int 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1620 ;;      Params:         2       0       0       0       0       0       0
  1621 ;;      Locals:         1       0       0       0       0       0       0
  1622 ;;      Temps:          4       0       0       0       0       0       0
  1623 ;;      Totals:         7       0       0       0       0       0       0
  1624 ;;Total ram usage:        7 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;;		_setTemperature
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text5
  1635  00117E                     __ptext5:
  1636                           	callstack 0
  1637  00117E                     _adc_amostra:
  1638                           	callstack 29
  1639                           
  1640                           ;incstack = 0
  1641                           ;adc_amostra@canal stored from wreg
  1642  00117E  6E07               	movwf	adc_amostra@canal^0,c
  1643  001180                     
  1644                           ;adc.c: 44: unsigned int adc_amostra(unsigned char canal);adc.c: 45: {;adc.c: 62:      s
      +                          witch(canal)
  1645  001180  EFCE  F008         	goto	l1776
  1646  001184                     l1768:
  1647                           
  1648                           ;adc.c: 65:         ADCON0=0x01;
  1649  001184  0E01               	movlw	1
  1650  001186  6EC2               	movwf	194,c	;volatile
  1651                           
  1652                           ;adc.c: 66:         break;
  1653  001188  EFE7  F008         	goto	l184
  1654  00118C                     l1770:
  1655                           
  1656                           ;adc.c: 68:         ADCON0=0x09;
  1657  00118C  0E09               	movlw	9
  1658  00118E  6EC2               	movwf	194,c	;volatile
  1659                           
  1660                           ;adc.c: 69:         break;
  1661  001190  EFE7  F008         	goto	l184
  1662  001194                     l1772:
  1663                           
  1664                           ;adc.c: 71:         ADCON0=0x11;
  1665  001194  0E11               	movlw	17
  1666  001196  6EC2               	movwf	194,c	;volatile
  1667                           
  1668                           ;adc.c: 72:         break;
  1669  001198  EFE7  F008         	goto	l184
  1670  00119C                     l1776:
  1671  00119C  5007               	movf	adc_amostra@canal^0,w,c
  1672  00119E  6E03               	movwf	??_adc_amostra^0,c
  1673  0011A0  6A04               	clrf	(??_adc_amostra+1)^0,c
  1674                           
  1675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1676                           ; Switch size 1, requested type "simple"
  1677                           ; Number of cases is 1, Range of values is 0 to 0
  1678                           ; switch strategies available:
  1679                           ; Name         Instructions Cycles
  1680                           ; simple_byte            4     3 (average)
  1681                           ;	Chosen strategy is simple_byte
  1682  0011A2  5004               	movf	(??_adc_amostra+1)^0,w,c
  1683  0011A4  0A00               	xorlw	0	; case 0
  1684  0011A6  B4D8               	btfsc	status,2,c
  1685  0011A8  EFD8  F008         	goto	l2070
  1686  0011AC  EFE7  F008         	goto	l184
  1687  0011B0                     l2070:
  1688                           
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 3, Range of values is 0 to 2
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte           10     6 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695  0011B0  5003               	movf	??_adc_amostra^0,w,c
  1696  0011B2  0A00               	xorlw	0	; case 0
  1697  0011B4  B4D8               	btfsc	status,2,c
  1698  0011B6  EFC2  F008         	goto	l1768
  1699  0011BA  0A01               	xorlw	1	; case 1
  1700  0011BC  B4D8               	btfsc	status,2,c
  1701  0011BE  EFC6  F008         	goto	l1770
  1702  0011C2  0A03               	xorlw	3	; case 2
  1703  0011C4  B4D8               	btfsc	status,2,c
  1704  0011C6  EFCA  F008         	goto	l1772
  1705  0011CA  EFE7  F008         	goto	l184
  1706  0011CE                     l184:
  1707                           
  1708                           ;adc.c: 77:     ADCON0bits.GO=1;
  1709  0011CE  82C2               	bsf	194,1,c	;volatile
  1710  0011D0                     l187:
  1711  0011D0  B2C2               	btfsc	194,1,c	;volatile
  1712  0011D2  EFED  F008         	goto	u1451
  1713  0011D6  EFEF  F008         	goto	u1450
  1714  0011DA                     u1451:
  1715  0011DA  EFE8  F008         	goto	l187
  1716  0011DE                     u1450:
  1717  0011DE                     
  1718                           ;adc.c: 80:    return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  1719  0011DE  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  1720  0011E2  0E06               	movlw	6
  1721  0011E4  6E04               	movwf	(??_adc_amostra+1)^0,c
  1722  0011E6                     u1465:
  1723  0011E6  90D8               	bcf	status,0,c
  1724  0011E8  3203               	rrcf	??_adc_amostra^0,f,c
  1725  0011EA  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  1726  0011EC  EFF3  F008         	goto	u1465
  1727  0011F0  5003               	movf	??_adc_amostra^0,w,c
  1728  0011F2  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  1729  0011F6  6A06               	clrf	(??_adc_amostra+3)^0,c
  1730  0011F8  90D8               	bcf	status,0,c
  1731  0011FA  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1732  0011FC  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1733  0011FE  90D8               	bcf	status,0,c
  1734  001200  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  1735  001202  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  1736  001204  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  1737  001206  6E01               	movwf	?_adc_amostra^0,c
  1738  001208  5006               	movf	(??_adc_amostra+3)^0,w,c
  1739  00120A  6E02               	movwf	(?_adc_amostra+1)^0,c
  1740  00120C  0012               	return		;funcret
  1741  00120E                     __end_of_adc_amostra:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _pwmSet1 *****************
  1745 ;; Defined at:
  1746 ;;		line 24 in file "pwm.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  porcento        1    wreg     unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  porcento        1   22[COMRAM] unsigned char 
  1751 ;;  val             2   23[COMRAM] unsigned int 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      void 
  1754 ;; Registers used:
  1755 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       0       0       0       0       0       0
  1762 ;;      Locals:         3       0       0       0       0       0       0
  1763 ;;      Temps:          2       0       0       0       0       0       0
  1764 ;;      Totals:         5       0       0       0       0       0       0
  1765 ;;Total ram usage:        5 bytes
  1766 ;; Hardware stack levels used: 1
  1767 ;; Hardware stack levels required when called: 1
  1768 ;; This function calls:
  1769 ;;		___lwdiv
  1770 ;;		___wmul
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777  0013FA                     __ptext6:
  1778                           	callstack 0
  1779  0013FA                     _pwmSet1:
  1780                           	callstack 29
  1781                           
  1782                           ;incstack = 0
  1783                           ;pwmSet1@porcento stored from wreg
  1784  0013FA  6E17               	movwf	pwmSet1@porcento^0,c
  1785  0013FC                     
  1786                           ;pwm.c: 24: void pwmSet1(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int v
      +                          al = ((unsigned int)porcento) *(PR2+1);
  1787  0013FC  0E01               	movlw	1
  1788  0013FE  24CB               	addwf	203,w,c	;volatile
  1789  001400  6E08               	movwf	___wmul@multiplier^0,c
  1790  001402  6A09               	clrf	(___wmul@multiplier+1)^0,c
  1791  001404  0E00               	movlw	0
  1792  001406  2209               	addwfc	(___wmul@multiplier+1)^0,f,c
  1793  001408  C017  F00A         	movff	pwmSet1@porcento,___wmul@multiplicand
  1794  00140C  6A0B               	clrf	(___wmul@multiplicand+1)^0,c
  1795  00140E  EC06  F00B         	call	___wmul	;wreg free
  1796  001412  C008  F018         	movff	?___wmul,pwmSet1@val
  1797  001416  C009  F019         	movff	?___wmul+1,pwmSet1@val+1
  1798  00141A                     
  1799                           ;pwm.c: 32:  val = val / 25;
  1800  00141A  C018  F00E         	movff	pwmSet1@val,___lwdiv@dividend
  1801  00141E  C019  F00F         	movff	pwmSet1@val+1,___lwdiv@dividend+1
  1802  001422  0E00               	movlw	0
  1803  001424  6E11               	movwf	(___lwdiv@divisor+1)^0,c
  1804  001426  0E19               	movlw	25
  1805  001428  6E10               	movwf	___lwdiv@divisor^0,c
  1806  00142A  ECC3  F009         	call	___lwdiv	;wreg free
  1807  00142E  C00E  F018         	movff	?___lwdiv,pwmSet1@val
  1808  001432  C00F  F019         	movff	?___lwdiv+1,pwmSet1@val+1
  1809  001436                     
  1810                           ;pwm.c: 34:  val &= 0x03ff;
  1811  001436  0EFF               	movlw	255
  1812  001438  1618               	andwf	pwmSet1@val^0,f,c
  1813  00143A  0E03               	movlw	3
  1814  00143C  1619               	andwf	(pwmSet1@val+1)^0,f,c
  1815  00143E                     
  1816                           ;pwm.c: 36:  CCPR1L = val >> 2;
  1817  00143E  C018  F015         	movff	pwmSet1@val,??_pwmSet1
  1818  001442  C019  F016         	movff	pwmSet1@val+1,??_pwmSet1+1
  1819  001446  90D8               	bcf	status,0,c
  1820  001448  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  1821  00144A  3215               	rrcf	??_pwmSet1^0,f,c
  1822  00144C  90D8               	bcf	status,0,c
  1823  00144E  3216               	rrcf	(??_pwmSet1+1)^0,f,c
  1824  001450  3215               	rrcf	??_pwmSet1^0,f,c
  1825  001452  5015               	movf	??_pwmSet1^0,w,c
  1826  001454  6EBE               	movwf	190,c	;volatile
  1827  001456                     
  1828                           ;pwm.c: 38:  CCP1CON |= (val & 0x0003) << 4;
  1829  001456  C018  F015         	movff	pwmSet1@val,??_pwmSet1	;volatile
  1830  00145A  0E03               	movlw	3
  1831  00145C  1615               	andwf	??_pwmSet1^0,f,c
  1832  00145E  3815               	swapf	??_pwmSet1^0,w,c
  1833  001460  0BF0               	andlw	240
  1834  001462  12BD               	iorwf	189,f,c	;volatile
  1835  001464  0012               	return		;funcret
  1836  001466                     __end_of_pwmSet1:
  1837                           	callstack 0
  1838                           
  1839 ;; *************** function ___wmul *****************
  1840 ;; Defined at:
  1841 ;;		line 15 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/Umul16.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  multiplier      2    7[COMRAM] unsigned int 
  1844 ;;  multiplicand    2    9[COMRAM] unsigned int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  product         2   11[COMRAM] unsigned int 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    7[COMRAM] unsigned int 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, prodl, prodh
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1856 ;;      Params:         4       0       0       0       0       0       0
  1857 ;;      Locals:         2       0       0       0       0       0       0
  1858 ;;      Temps:          0       0       0       0       0       0       0
  1859 ;;      Totals:         6       0       0       0       0       0       0
  1860 ;;Total ram usage:        6 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_pwmSet1
  1866 ;;		_main
  1867 ;;		_setTemperature
  1868 ;;		_pwmSet2
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text7
  1873  00160C                     __ptext7:
  1874                           	callstack 0
  1875  00160C                     ___wmul:
  1876                           	callstack 29
  1877  00160C  5008               	movf	___wmul@multiplier^0,w,c
  1878  00160E  020A               	mulwf	___wmul@multiplicand^0,c
  1879  001610  CFF3 F00C          	movff	prodl,___wmul@product
  1880  001614  CFF4 F00D          	movff	prodh,___wmul@product+1
  1881  001618  5008               	movf	___wmul@multiplier^0,w,c
  1882  00161A  020B               	mulwf	(___wmul@multiplicand+1)^0,c
  1883  00161C  50F3               	movf	243,w,c
  1884  00161E  260D               	addwf	(___wmul@product+1)^0,f,c
  1885  001620  5009               	movf	(___wmul@multiplier+1)^0,w,c
  1886  001622  020A               	mulwf	___wmul@multiplicand^0,c
  1887  001624  50F3               	movf	243,w,c
  1888  001626  260D               	addwf	(___wmul@product+1)^0,f,c
  1889  001628  C00C  F008         	movff	___wmul@product,?___wmul
  1890  00162C  C00D  F009         	movff	___wmul@product+1,?___wmul+1
  1891  001630  0012               	return		;funcret
  1892  001632                     __end_of___wmul:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function ___lwdiv *****************
  1896 ;; Defined at:
  1897 ;;		line 7 in file "/home/maissa/microchip/xc8/v2.32/pic/sources/c99/common/lwdiv.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  dividend        2   13[COMRAM] unsigned int 
  1900 ;;  divisor         2   15[COMRAM] unsigned int 
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;  quotient        2   17[COMRAM] unsigned int 
  1903 ;;  counter         1   19[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  2   13[COMRAM] unsigned int 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1913 ;;      Params:         4       0       0       0       0       0       0
  1914 ;;      Locals:         3       0       0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0
  1916 ;;      Totals:         7       0       0       0       0       0       0
  1917 ;;Total ram usage:        7 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_itoa
  1923 ;;		_pwmSet1
  1924 ;;		_main
  1925 ;;		_setTemperature
  1926 ;;		_pwmSet2
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text8
  1931  001386                     __ptext8:
  1932                           	callstack 0
  1933  001386                     ___lwdiv:
  1934                           	callstack 28
  1935  001386  0E00               	movlw	0
  1936  001388  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  1937  00138A  0E00               	movlw	0
  1938  00138C  6E12               	movwf	___lwdiv@quotient^0,c
  1939  00138E  5010               	movf	___lwdiv@divisor^0,w,c
  1940  001390  1011               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1941  001392  B4D8               	btfsc	status,2,c
  1942  001394  EFCE  F009         	goto	u1171
  1943  001398  EFD0  F009         	goto	u1170
  1944  00139C                     u1171:
  1945  00139C  EFF8  F009         	goto	l818
  1946  0013A0                     u1170:
  1947  0013A0  0E01               	movlw	1
  1948  0013A2  6E14               	movwf	___lwdiv@counter^0,c
  1949  0013A4  EFD8  F009         	goto	l1670
  1950  0013A8                     l1668:
  1951  0013A8  90D8               	bcf	status,0,c
  1952  0013AA  3610               	rlcf	___lwdiv@divisor^0,f,c
  1953  0013AC  3611               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1954  0013AE  2A14               	incf	___lwdiv@counter^0,f,c
  1955  0013B0                     l1670:
  1956  0013B0  AE11               	btfss	(___lwdiv@divisor+1)^0,7,c
  1957  0013B2  EFDD  F009         	goto	u1181
  1958  0013B6  EFDF  F009         	goto	u1180
  1959  0013BA                     u1181:
  1960  0013BA  EFD4  F009         	goto	l1668
  1961  0013BE                     u1180:
  1962  0013BE                     l1672:
  1963  0013BE  90D8               	bcf	status,0,c
  1964  0013C0  3612               	rlcf	___lwdiv@quotient^0,f,c
  1965  0013C2  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1966  0013C4  5010               	movf	___lwdiv@divisor^0,w,c
  1967  0013C6  5C0E               	subwf	___lwdiv@dividend^0,w,c
  1968  0013C8  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1969  0013CA  580F               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1970  0013CC  A0D8               	btfss	status,0,c
  1971  0013CE  EFEB  F009         	goto	u1191
  1972  0013D2  EFED  F009         	goto	u1190
  1973  0013D6                     u1191:
  1974  0013D6  EFF2  F009         	goto	l1680
  1975  0013DA                     u1190:
  1976  0013DA  5010               	movf	___lwdiv@divisor^0,w,c
  1977  0013DC  5E0E               	subwf	___lwdiv@dividend^0,f,c
  1978  0013DE  5011               	movf	(___lwdiv@divisor+1)^0,w,c
  1979  0013E0  5A0F               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1980  0013E2  8012               	bsf	___lwdiv@quotient^0,0,c
  1981  0013E4                     l1680:
  1982  0013E4  90D8               	bcf	status,0,c
  1983  0013E6  3211               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1984  0013E8  3210               	rrcf	___lwdiv@divisor^0,f,c
  1985  0013EA  2E14               	decfsz	___lwdiv@counter^0,f,c
  1986  0013EC  EFDF  F009         	goto	l1672
  1987  0013F0                     l818:
  1988  0013F0  C012  F00E         	movff	___lwdiv@quotient,?___lwdiv
  1989  0013F4  C013  F00F         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1990  0013F8  0012               	return		;funcret
  1991  0013FA                     __end_of___lwdiv:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _pwmInit *****************
  1995 ;; Defined at:
  1996 ;;		line 60 in file "pwm.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2010 ;;      Params:         0       0       0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; This function calls:
  2017 ;;		Nothing
  2018 ;; This function is called by:
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text9
  2024  00167C                     __ptext9:
  2025                           	callstack 0
  2026  00167C                     _pwmInit:
  2027                           	callstack 30
  2028  00167C                     
  2029                           ;pwm.c: 62:  ((TRISC) &= ~(1<<(1)));
  2030  00167C  9294               	bcf	148,1,c	;volatile
  2031                           
  2032                           ;pwm.c: 63:  ((TRISC) &= ~(1<<(2)));
  2033  00167E  9494               	bcf	148,2,c	;volatile
  2034  001680                     
  2035                           ;pwm.c: 65:  T2CON |= 0b00000011;
  2036  001680  0E03               	movlw	3
  2037  001682  12CA               	iorwf	202,f,c	;volatile
  2038  001684                     
  2039                           ;pwm.c: 66:  ((T2CON) |= (1<<(2)));
  2040  001684  84CA               	bsf	202,2,c	;volatile
  2041                           
  2042                           ;pwm.c: 69:  CCP1CON |= 0b00001100;
  2043  001686  0E0C               	movlw	12
  2044  001688  12BD               	iorwf	189,f,c	;volatile
  2045                           
  2046                           ;pwm.c: 70:  CCP2CON |= 0b00001100;
  2047  00168A  0E0C               	movlw	12
  2048  00168C  12BA               	iorwf	186,f,c	;volatile
  2049  00168E  0012               	return		;funcret
  2050  001690                     __end_of_pwmInit:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _lcd_str *****************
  2054 ;; Defined at:
  2055 ;;		line 127 in file "lcd.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  str             2    8[COMRAM] PTR const unsigned char 
  2058 ;;		 -> STR_8(2), STR_7(4), STR_6(13), STR_5(4), 
  2059 ;;		 -> STR_4(7), STR_3(13), STR_2(14), STR_1(15), 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  i               1   12[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         2       0       0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0       0       0
  2073 ;;      Temps:          2       0       0       0       0       0       0
  2074 ;;      Totals:         5       0       0       0       0       0       0
  2075 ;;Total ram usage:        5 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 2
  2078 ;; This function calls:
  2079 ;;		_lcdData
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text10
  2086  001582                     __ptext10:
  2087                           	callstack 0
  2088  001582                     _lcd_str:
  2089                           	callstack 28
  2090  001582                     
  2091                           ;lcd.c: 128:     unsigned char i=0;
  2092  001582  0E00               	movlw	0
  2093  001584  6E0D               	movwf	lcd_str@i^0,c
  2094                           
  2095                           ;lcd.c: 130:     while(str[i] != 0 ){
  2096  001586  EFD4  F00A         	goto	l1838
  2097  00158A                     l1834:
  2098                           
  2099                           ;lcd.c: 131:         lcdData(str[i]);
  2100  00158A  500D               	movf	lcd_str@i^0,w,c
  2101  00158C  2409               	addwf	lcd_str@str^0,w,c
  2102  00158E  6E0B               	movwf	??_lcd_str^0,c
  2103  001590  0E00               	movlw	0
  2104  001592  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2105  001594  6E0C               	movwf	(??_lcd_str+1)^0,c
  2106  001596  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2107  00159A  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2108  00159E                     	if	0	;tblptru may be non-zero
  2109  00159E                     	endif
  2110  00159E                     	if	0	;tblptru may be non-zero
  2111  00159E                     	endif
  2112  00159E  0008               	tblrd		*
  2113  0015A0  50F5               	movf	tablat,w,c
  2114  0015A2  EC97  F00A         	call	_lcdData
  2115  0015A6                     
  2116                           ;lcd.c: 132:         i++;
  2117  0015A6  2A0D               	incf	lcd_str@i^0,f,c
  2118  0015A8                     l1838:
  2119                           
  2120                           ;lcd.c: 130:     while(str[i] != 0 ){
  2121  0015A8  500D               	movf	lcd_str@i^0,w,c
  2122  0015AA  2409               	addwf	lcd_str@str^0,w,c
  2123  0015AC  6E0B               	movwf	??_lcd_str^0,c
  2124  0015AE  0E00               	movlw	0
  2125  0015B0  200A               	addwfc	(lcd_str@str+1)^0,w,c
  2126  0015B2  6E0C               	movwf	(??_lcd_str+1)^0,c
  2127  0015B4  C00B  FFF6         	movff	??_lcd_str,tblptrl
  2128  0015B8  C00C  FFF7         	movff	??_lcd_str+1,tblptrh
  2129  0015BC                     	if	0	;tblptru may be non-zero
  2130  0015BC                     	endif
  2131  0015BC                     	if	0	;tblptru may be non-zero
  2132  0015BC                     	endif
  2133  0015BC  0008               	tblrd		*
  2134  0015BE  50F5               	movf	tablat,w,c
  2135  0015C0  0900               	iorlw	0
  2136  0015C2  A4D8               	btfss	status,2,c
  2137  0015C4  EFE6  F00A         	goto	u1471
  2138  0015C8  EFE8  F00A         	goto	u1470
  2139  0015CC                     u1471:
  2140  0015CC  EFC5  F00A         	goto	l1834
  2141  0015D0                     u1470:
  2142  0015D0  0012               	return		;funcret
  2143  0015D2                     __end_of_lcd_str:
  2144                           	callstack 0
  2145                           
  2146 ;; *************** function _lcdData *****************
  2147 ;; Defined at:
  2148 ;;		line 74 in file "lcd.c"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  valor           1    wreg     unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  valor           1    6[COMRAM] unsigned char 
  2153 ;;  old_D           1    7[COMRAM] unsigned char 
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2163 ;;      Params:         0       0       0       0       0       0       0
  2164 ;;      Locals:         2       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0
  2166 ;;      Totals:         2       0       0       0       0       0       0
  2167 ;;Total ram usage:        2 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 1
  2170 ;; This function calls:
  2171 ;;		_Delay40us
  2172 ;;		_digitalWrite
  2173 ;; This function is called by:
  2174 ;;		_lcd_str
  2175 ;;		_main
  2176 ;;		_setTemperature
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text11
  2181  00152E                     __ptext11:
  2182                           	callstack 0
  2183  00152E                     _lcdData:
  2184                           	callstack 28
  2185                           
  2186                           ;incstack = 0
  2187                           ;lcdData@valor stored from wreg
  2188  00152E  6E07               	movwf	lcdData@valor^0,c
  2189  001530                     
  2190                           ;lcd.c: 74: void lcdData(unsigned char valor);lcd.c: 75: {;lcd.c: 77:     unsigned char 
      +                          old_D;;lcd.c: 78:     old_D = PORTD;
  2191  001530  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  2192  001534                     
  2193                           ;lcd.c: 80:     TRISD = 0x00;
  2194  001534  0E00               	movlw	0
  2195  001536  6E95               	movwf	149,c	;volatile
  2196  001538                     
  2197                           ;lcd.c: 81:  digitalWrite(PIN_E2, 1);
  2198  001538  0E00               	movlw	0
  2199  00153A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2200  00153C  0E22               	movlw	34
  2201  00153E  6E01               	movwf	digitalWrite@pin^0,c
  2202  001540  0E00               	movlw	0
  2203  001542  6E04               	movwf	(digitalWrite@value+1)^0,c
  2204  001544  0E01               	movlw	1
  2205  001546  6E03               	movwf	digitalWrite@value^0,c
  2206  001548  EC57  F006         	call	_digitalWrite	;wreg free
  2207  00154C                     
  2208                           ;lcd.c: 83:  PORTD = valor;
  2209  00154C  C007  FF83         	movff	lcdData@valor,3971	;volatile
  2210  001550                     
  2211                           ;lcd.c: 85:     digitalWrite(PIN_E1, 1);
  2212  001550  0E00               	movlw	0
  2213  001552  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2214  001554  0E21               	movlw	33
  2215  001556  6E01               	movwf	digitalWrite@pin^0,c
  2216  001558  0E00               	movlw	0
  2217  00155A  6E04               	movwf	(digitalWrite@value+1)^0,c
  2218  00155C  0E01               	movlw	1
  2219  00155E  6E03               	movwf	digitalWrite@value^0,c
  2220  001560  EC57  F006         	call	_digitalWrite	;wreg free
  2221  001564                     
  2222                           ;lcd.c: 86:  digitalWrite(PIN_E1, 0);
  2223  001564  0E00               	movlw	0
  2224  001566  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2225  001568  0E21               	movlw	33
  2226  00156A  6E01               	movwf	digitalWrite@pin^0,c
  2227  00156C  0E00               	movlw	0
  2228  00156E  6E04               	movwf	(digitalWrite@value+1)^0,c
  2229  001570  0E00               	movlw	0
  2230  001572  6E03               	movwf	digitalWrite@value^0,c
  2231  001574  EC57  F006         	call	_digitalWrite	;wreg free
  2232  001578                     
  2233                           ;lcd.c: 88:     PORTD= old_D;
  2234  001578  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  2235  00157C                     
  2236                           ;lcd.c: 90:  Delay40us();
  2237  00157C  EC27  F00B         	call	_Delay40us	;wreg free
  2238  001580  0012               	return		;funcret
  2239  001582                     __end_of_lcdData:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _lcdInit *****************
  2243 ;; Defined at:
  2244 ;;		line 95 in file "lcd.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;		None
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2258 ;;      Params:         0       0       0       0       0       0       0
  2259 ;;      Locals:         0       0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0
  2261 ;;      Totals:         0       0       0       0       0       0       0
  2262 ;;Total ram usage:        0 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 3
  2265 ;; This function calls:
  2266 ;;		_Delay2ms
  2267 ;;		_lcdCommand
  2268 ;;		_pinMode
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text12
  2275  00130E                     __ptext12:
  2276                           	callstack 0
  2277  00130E                     _lcdInit:
  2278                           	callstack 27
  2279  00130E                     
  2280                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  2281  00130E  0E00               	movlw	0
  2282  001310  6E02               	movwf	(pinMode@pin+1)^0,c
  2283  001312  0E22               	movlw	34
  2284  001314  6E01               	movwf	pinMode@pin^0,c
  2285  001316  0E00               	movlw	0
  2286  001318  6E04               	movwf	(pinMode@type+1)^0,c
  2287  00131A  0E00               	movlw	0
  2288  00131C  6E03               	movwf	pinMode@type^0,c
  2289  00131E  EC30  F005         	call	_pinMode	;wreg free
  2290                           
  2291                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  2292  001322  0E00               	movlw	0
  2293  001324  6E02               	movwf	(pinMode@pin+1)^0,c
  2294  001326  0E21               	movlw	33
  2295  001328  6E01               	movwf	pinMode@pin^0,c
  2296  00132A  0E00               	movlw	0
  2297  00132C  6E04               	movwf	(pinMode@type+1)^0,c
  2298  00132E  0E00               	movlw	0
  2299  001330  6E03               	movwf	pinMode@type^0,c
  2300  001332  EC30  F005         	call	_pinMode	;wreg free
  2301  001336                     
  2302                           ;lcd.c: 99:  TRISD = 0x00;
  2303  001336  0E00               	movlw	0
  2304  001338  6E95               	movwf	149,c	;volatile
  2305  00133A                     
  2306                           ;lcd.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2307  00133A  EC19  F00B         	call	_Delay2ms	;wreg free
  2308  00133E  EC19  F00B         	call	_Delay2ms	;wreg free
  2309  001342  EC19  F00B         	call	_Delay2ms	;wreg free
  2310  001346  EC19  F00B         	call	_Delay2ms	;wreg free
  2311  00134A  EC19  F00B         	call	_Delay2ms	;wreg free
  2312  00134E                     
  2313                           ;lcd.c: 104:     lcdCommand(0x38);
  2314  00134E  0E38               	movlw	56
  2315  001350  EC48  F009         	call	_lcdCommand
  2316  001354                     
  2317                           ;lcd.c: 105:     Delay2ms(); Delay2ms();
  2318  001354  EC19  F00B         	call	_Delay2ms	;wreg free
  2319  001358  EC19  F00B         	call	_Delay2ms	;wreg free
  2320  00135C                     
  2321                           ;lcd.c: 106:     lcdCommand(0x38);
  2322  00135C  0E38               	movlw	56
  2323  00135E  EC48  F009         	call	_lcdCommand
  2324  001362                     
  2325                           ;lcd.c: 107:     Delay2ms();
  2326  001362  EC19  F00B         	call	_Delay2ms	;wreg free
  2327  001366                     
  2328                           ;lcd.c: 108:     lcdCommand(0x38);
  2329  001366  0E38               	movlw	56
  2330  001368  EC48  F009         	call	_lcdCommand
  2331  00136C                     
  2332                           ;lcd.c: 110:     lcdCommand(0x38);
  2333  00136C  0E38               	movlw	56
  2334  00136E  EC48  F009         	call	_lcdCommand
  2335  001372                     
  2336                           ;lcd.c: 111:     lcdCommand(0x06);
  2337  001372  0E06               	movlw	6
  2338  001374  EC48  F009         	call	_lcdCommand
  2339  001378                     
  2340                           ;lcd.c: 114:     lcdCommand(0x0C);
  2341  001378  0E0C               	movlw	12
  2342  00137A  EC48  F009         	call	_lcdCommand
  2343  00137E                     
  2344                           ;lcd.c: 115:     lcdCommand(0x01);
  2345  00137E  0E01               	movlw	1
  2346  001380  EC48  F009         	call	_lcdCommand
  2347  001384  0012               	return		;funcret
  2348  001386                     __end_of_lcdInit:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _pinMode *****************
  2352 ;; Defined at:
  2353 ;;		line 54 in file "io.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  pin             2    0[COMRAM] int 
  2356 ;;  type            2    2[COMRAM] int 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      void 
  2361 ;; Registers used:
  2362 ;;		wreg, status,2, status,0
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2368 ;;      Params:         4       0       0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0
  2370 ;;      Temps:          2       0       0       0       0       0       0
  2371 ;;      Totals:         6       0       0       0       0       0       0
  2372 ;;Total ram usage:        6 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_lcdInit
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text13
  2382  000A60                     __ptext13:
  2383                           	callstack 0
  2384  000A60                     _pinMode:
  2385                           	callstack 29
  2386  000A60                     
  2387                           ;io.c: 56:     if(pin <8){
  2388  000A60  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2389  000A62  EF3E  F005         	goto	u1230
  2390  000A66  5002               	movf	(pinMode@pin+1)^0,w,c
  2391  000A68  E107               	bnz	u1231
  2392  000A6A  0E08               	movlw	8
  2393  000A6C  5C01               	subwf	pinMode@pin^0,w,c
  2394  000A6E  B0D8               	btfsc	status,0,c
  2395  000A70  EF3C  F005         	goto	u1231
  2396  000A74  EF3E  F005         	goto	u1230
  2397  000A78                     u1231:
  2398  000A78  EF68  F005         	goto	l1708
  2399  000A7C                     u1230:
  2400  000A7C                     
  2401                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  2402  000A7C  5003               	movf	pinMode@type^0,w,c
  2403  000A7E  1004               	iorwf	(pinMode@type+1)^0,w,c
  2404  000A80  B4D8               	btfsc	status,2,c
  2405  000A82  EF45  F005         	goto	u1241
  2406  000A86  EF47  F005         	goto	u1240
  2407  000A8A                     u1241:
  2408  000A8A  EF57  F005         	goto	l1706
  2409  000A8E                     u1240:
  2410  000A8E  C001  F005         	movff	pinMode@pin,??_pinMode
  2411  000A92  0E01               	movlw	1
  2412  000A94  6E06               	movwf	(??_pinMode+1)^0,c
  2413  000A96  2A05               	incf	??_pinMode^0,f,c
  2414  000A98  EF50  F005         	goto	u1254
  2415  000A9C                     u1255:
  2416  000A9C  90D8               	bcf	status,0,c
  2417  000A9E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2418  000AA0                     u1254:
  2419  000AA0  2E05               	decfsz	??_pinMode^0,f,c
  2420  000AA2  EF4E  F005         	goto	u1255
  2421  000AA6  5006               	movf	(??_pinMode+1)^0,w,c
  2422  000AA8  1292               	iorwf	146,f,c	;volatile
  2423  000AAA  EF56  F006         	goto	l76
  2424  000AAE                     l1706:
  2425  000AAE  C001  F005         	movff	pinMode@pin,??_pinMode
  2426  000AB2  0E01               	movlw	1
  2427  000AB4  6E06               	movwf	(??_pinMode+1)^0,c
  2428  000AB6  2A05               	incf	??_pinMode^0,f,c
  2429  000AB8  EF60  F005         	goto	u1264
  2430  000ABC                     u1265:
  2431  000ABC  90D8               	bcf	status,0,c
  2432  000ABE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2433  000AC0                     u1264:
  2434  000AC0  2E05               	decfsz	??_pinMode^0,f,c
  2435  000AC2  EF5E  F005         	goto	u1265
  2436  000AC6  5006               	movf	(??_pinMode+1)^0,w,c
  2437  000AC8  0AFF               	xorlw	255
  2438  000ACA  1692               	andwf	146,f,c	;volatile
  2439  000ACC  EF56  F006         	goto	l76
  2440  000AD0                     l1708:
  2441  000AD0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2442  000AD2  EF76  F005         	goto	u1270
  2443  000AD6  5002               	movf	(pinMode@pin+1)^0,w,c
  2444  000AD8  E107               	bnz	u1271
  2445  000ADA  0E10               	movlw	16
  2446  000ADC  5C01               	subwf	pinMode@pin^0,w,c
  2447  000ADE  B0D8               	btfsc	status,0,c
  2448  000AE0  EF74  F005         	goto	u1271
  2449  000AE4  EF76  F005         	goto	u1270
  2450  000AE8                     u1271:
  2451  000AE8  EFA4  F005         	goto	l1716
  2452  000AEC                     u1270:
  2453  000AEC                     
  2454                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  2455  000AEC  5003               	movf	pinMode@type^0,w,c
  2456  000AEE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2457  000AF0  B4D8               	btfsc	status,2,c
  2458  000AF2  EF7D  F005         	goto	u1281
  2459  000AF6  EF7F  F005         	goto	u1280
  2460  000AFA                     u1281:
  2461  000AFA  EF91  F005         	goto	l1714
  2462  000AFE                     u1280:
  2463  000AFE  C001  F005         	movff	pinMode@pin,??_pinMode
  2464  000B02  0EF8               	movlw	-8
  2465  000B04  2605               	addwf	??_pinMode^0,f,c
  2466  000B06  0E01               	movlw	1
  2467  000B08  6E06               	movwf	(??_pinMode+1)^0,c
  2468  000B0A  2A05               	incf	??_pinMode^0,f,c
  2469  000B0C  EF8A  F005         	goto	u1294
  2470  000B10                     u1295:
  2471  000B10  90D8               	bcf	status,0,c
  2472  000B12  3606               	rlcf	(??_pinMode+1)^0,f,c
  2473  000B14                     u1294:
  2474  000B14  2E05               	decfsz	??_pinMode^0,f,c
  2475  000B16  EF88  F005         	goto	u1295
  2476  000B1A  5006               	movf	(??_pinMode+1)^0,w,c
  2477  000B1C  1293               	iorwf	147,f,c	;volatile
  2478  000B1E  EF56  F006         	goto	l76
  2479  000B22                     l1714:
  2480  000B22  C001  F005         	movff	pinMode@pin,??_pinMode
  2481  000B26  0EF8               	movlw	-8
  2482  000B28  2605               	addwf	??_pinMode^0,f,c
  2483  000B2A  0E01               	movlw	1
  2484  000B2C  6E06               	movwf	(??_pinMode+1)^0,c
  2485  000B2E  2A05               	incf	??_pinMode^0,f,c
  2486  000B30  EF9C  F005         	goto	u1304
  2487  000B34                     u1305:
  2488  000B34  90D8               	bcf	status,0,c
  2489  000B36  3606               	rlcf	(??_pinMode+1)^0,f,c
  2490  000B38                     u1304:
  2491  000B38  2E05               	decfsz	??_pinMode^0,f,c
  2492  000B3A  EF9A  F005         	goto	u1305
  2493  000B3E  5006               	movf	(??_pinMode+1)^0,w,c
  2494  000B40  0AFF               	xorlw	255
  2495  000B42  1693               	andwf	147,f,c	;volatile
  2496  000B44  EF56  F006         	goto	l76
  2497  000B48                     l1716:
  2498  000B48  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2499  000B4A  EFB2  F005         	goto	u1310
  2500  000B4E  5002               	movf	(pinMode@pin+1)^0,w,c
  2501  000B50  E107               	bnz	u1311
  2502  000B52  0E18               	movlw	24
  2503  000B54  5C01               	subwf	pinMode@pin^0,w,c
  2504  000B56  B0D8               	btfsc	status,0,c
  2505  000B58  EFB0  F005         	goto	u1311
  2506  000B5C  EFB2  F005         	goto	u1310
  2507  000B60                     u1311:
  2508  000B60  EFE0  F005         	goto	l1724
  2509  000B64                     u1310:
  2510  000B64                     
  2511                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  2512  000B64  5003               	movf	pinMode@type^0,w,c
  2513  000B66  1004               	iorwf	(pinMode@type+1)^0,w,c
  2514  000B68  B4D8               	btfsc	status,2,c
  2515  000B6A  EFB9  F005         	goto	u1321
  2516  000B6E  EFBB  F005         	goto	u1320
  2517  000B72                     u1321:
  2518  000B72  EFCD  F005         	goto	l1722
  2519  000B76                     u1320:
  2520  000B76  C001  F005         	movff	pinMode@pin,??_pinMode
  2521  000B7A  0EF0               	movlw	-16
  2522  000B7C  2605               	addwf	??_pinMode^0,f,c
  2523  000B7E  0E01               	movlw	1
  2524  000B80  6E06               	movwf	(??_pinMode+1)^0,c
  2525  000B82  2A05               	incf	??_pinMode^0,f,c
  2526  000B84  EFC6  F005         	goto	u1334
  2527  000B88                     u1335:
  2528  000B88  90D8               	bcf	status,0,c
  2529  000B8A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2530  000B8C                     u1334:
  2531  000B8C  2E05               	decfsz	??_pinMode^0,f,c
  2532  000B8E  EFC4  F005         	goto	u1335
  2533  000B92  5006               	movf	(??_pinMode+1)^0,w,c
  2534  000B94  1294               	iorwf	148,f,c	;volatile
  2535  000B96  EF56  F006         	goto	l76
  2536  000B9A                     l1722:
  2537  000B9A  C001  F005         	movff	pinMode@pin,??_pinMode
  2538  000B9E  0EF0               	movlw	-16
  2539  000BA0  2605               	addwf	??_pinMode^0,f,c
  2540  000BA2  0E01               	movlw	1
  2541  000BA4  6E06               	movwf	(??_pinMode+1)^0,c
  2542  000BA6  2A05               	incf	??_pinMode^0,f,c
  2543  000BA8  EFD8  F005         	goto	u1344
  2544  000BAC                     u1345:
  2545  000BAC  90D8               	bcf	status,0,c
  2546  000BAE  3606               	rlcf	(??_pinMode+1)^0,f,c
  2547  000BB0                     u1344:
  2548  000BB0  2E05               	decfsz	??_pinMode^0,f,c
  2549  000BB2  EFD6  F005         	goto	u1345
  2550  000BB6  5006               	movf	(??_pinMode+1)^0,w,c
  2551  000BB8  0AFF               	xorlw	255
  2552  000BBA  1694               	andwf	148,f,c	;volatile
  2553  000BBC  EF56  F006         	goto	l76
  2554  000BC0                     l1724:
  2555  000BC0  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2556  000BC2  EFEE  F005         	goto	u1350
  2557  000BC6  5002               	movf	(pinMode@pin+1)^0,w,c
  2558  000BC8  E107               	bnz	u1351
  2559  000BCA  0E20               	movlw	32
  2560  000BCC  5C01               	subwf	pinMode@pin^0,w,c
  2561  000BCE  B0D8               	btfsc	status,0,c
  2562  000BD0  EFEC  F005         	goto	u1351
  2563  000BD4  EFEE  F005         	goto	u1350
  2564  000BD8                     u1351:
  2565  000BD8  EF1C  F006         	goto	l1732
  2566  000BDC                     u1350:
  2567  000BDC                     
  2568                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  2569  000BDC  5003               	movf	pinMode@type^0,w,c
  2570  000BDE  1004               	iorwf	(pinMode@type+1)^0,w,c
  2571  000BE0  B4D8               	btfsc	status,2,c
  2572  000BE2  EFF5  F005         	goto	u1361
  2573  000BE6  EFF7  F005         	goto	u1360
  2574  000BEA                     u1361:
  2575  000BEA  EF09  F006         	goto	l1730
  2576  000BEE                     u1360:
  2577  000BEE  C001  F005         	movff	pinMode@pin,??_pinMode
  2578  000BF2  0EE8               	movlw	-24
  2579  000BF4  2605               	addwf	??_pinMode^0,f,c
  2580  000BF6  0E01               	movlw	1
  2581  000BF8  6E06               	movwf	(??_pinMode+1)^0,c
  2582  000BFA  2A05               	incf	??_pinMode^0,f,c
  2583  000BFC  EF02  F006         	goto	u1374
  2584  000C00                     u1375:
  2585  000C00  90D8               	bcf	status,0,c
  2586  000C02  3606               	rlcf	(??_pinMode+1)^0,f,c
  2587  000C04                     u1374:
  2588  000C04  2E05               	decfsz	??_pinMode^0,f,c
  2589  000C06  EF00  F006         	goto	u1375
  2590  000C0A  5006               	movf	(??_pinMode+1)^0,w,c
  2591  000C0C  1295               	iorwf	149,f,c	;volatile
  2592  000C0E  EF56  F006         	goto	l76
  2593  000C12                     l1730:
  2594  000C12  C001  F005         	movff	pinMode@pin,??_pinMode
  2595  000C16  0EE8               	movlw	-24
  2596  000C18  2605               	addwf	??_pinMode^0,f,c
  2597  000C1A  0E01               	movlw	1
  2598  000C1C  6E06               	movwf	(??_pinMode+1)^0,c
  2599  000C1E  2A05               	incf	??_pinMode^0,f,c
  2600  000C20  EF14  F006         	goto	u1384
  2601  000C24                     u1385:
  2602  000C24  90D8               	bcf	status,0,c
  2603  000C26  3606               	rlcf	(??_pinMode+1)^0,f,c
  2604  000C28                     u1384:
  2605  000C28  2E05               	decfsz	??_pinMode^0,f,c
  2606  000C2A  EF12  F006         	goto	u1385
  2607  000C2E  5006               	movf	(??_pinMode+1)^0,w,c
  2608  000C30  0AFF               	xorlw	255
  2609  000C32  1695               	andwf	149,f,c	;volatile
  2610  000C34  EF56  F006         	goto	l76
  2611  000C38                     l1732:
  2612  000C38  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  2613  000C3A  EF2A  F006         	goto	u1390
  2614  000C3E  5002               	movf	(pinMode@pin+1)^0,w,c
  2615  000C40  E107               	bnz	u1391
  2616  000C42  0E28               	movlw	40
  2617  000C44  5C01               	subwf	pinMode@pin^0,w,c
  2618  000C46  B0D8               	btfsc	status,0,c
  2619  000C48  EF28  F006         	goto	u1391
  2620  000C4C  EF2A  F006         	goto	u1390
  2621  000C50                     u1391:
  2622  000C50  EF56  F006         	goto	l76
  2623  000C54                     u1390:
  2624  000C54                     
  2625                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  2626  000C54  5003               	movf	pinMode@type^0,w,c
  2627  000C56  1004               	iorwf	(pinMode@type+1)^0,w,c
  2628  000C58  B4D8               	btfsc	status,2,c
  2629  000C5A  EF31  F006         	goto	u1401
  2630  000C5E  EF33  F006         	goto	u1400
  2631  000C62                     u1401:
  2632  000C62  EF45  F006         	goto	l1738
  2633  000C66                     u1400:
  2634  000C66  C001  F005         	movff	pinMode@pin,??_pinMode
  2635  000C6A  0EE0               	movlw	-32
  2636  000C6C  2605               	addwf	??_pinMode^0,f,c
  2637  000C6E  0E01               	movlw	1
  2638  000C70  6E06               	movwf	(??_pinMode+1)^0,c
  2639  000C72  2A05               	incf	??_pinMode^0,f,c
  2640  000C74  EF3E  F006         	goto	u1414
  2641  000C78                     u1415:
  2642  000C78  90D8               	bcf	status,0,c
  2643  000C7A  3606               	rlcf	(??_pinMode+1)^0,f,c
  2644  000C7C                     u1414:
  2645  000C7C  2E05               	decfsz	??_pinMode^0,f,c
  2646  000C7E  EF3C  F006         	goto	u1415
  2647  000C82  5006               	movf	(??_pinMode+1)^0,w,c
  2648  000C84  1296               	iorwf	150,f,c	;volatile
  2649  000C86  EF56  F006         	goto	l76
  2650  000C8A                     l1738:
  2651  000C8A  C001  F005         	movff	pinMode@pin,??_pinMode
  2652  000C8E  0EE0               	movlw	-32
  2653  000C90  2605               	addwf	??_pinMode^0,f,c
  2654  000C92  0E01               	movlw	1
  2655  000C94  6E06               	movwf	(??_pinMode+1)^0,c
  2656  000C96  2A05               	incf	??_pinMode^0,f,c
  2657  000C98  EF50  F006         	goto	u1424
  2658  000C9C                     u1425:
  2659  000C9C  90D8               	bcf	status,0,c
  2660  000C9E  3606               	rlcf	(??_pinMode+1)^0,f,c
  2661  000CA0                     u1424:
  2662  000CA0  2E05               	decfsz	??_pinMode^0,f,c
  2663  000CA2  EF4E  F006         	goto	u1425
  2664  000CA6  5006               	movf	(??_pinMode+1)^0,w,c
  2665  000CA8  0AFF               	xorlw	255
  2666  000CAA  1696               	andwf	150,f,c	;volatile
  2667  000CAC                     l76:
  2668  000CAC  0012               	return		;funcret
  2669  000CAE                     __end_of_pinMode:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _lcdCommand *****************
  2673 ;; Defined at:
  2674 ;;		line 50 in file "lcd.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  cmd             1    wreg     unsigned char 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  cmd             1    7[COMRAM] unsigned char 
  2679 ;;  old_D           1    6[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, cstack
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2689 ;;      Params:         0       0       0       0       0       0       0
  2690 ;;      Locals:         2       0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0
  2692 ;;      Totals:         2       0       0       0       0       0       0
  2693 ;;Total ram usage:        2 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 2
  2696 ;; This function calls:
  2697 ;;		_Delay2ms
  2698 ;;		_Delay40us
  2699 ;;		_digitalWrite
  2700 ;; This function is called by:
  2701 ;;		_lcdInit
  2702 ;;		_lcdPosition
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text14
  2708  001290                     __ptext14:
  2709                           	callstack 0
  2710  001290                     _lcdCommand:
  2711                           	callstack 26
  2712                           
  2713                           ;incstack = 0
  2714                           ;lcdCommand@cmd stored from wreg
  2715  001290  6E08               	movwf	lcdCommand@cmd^0,c
  2716  001292                     
  2717                           ;lcd.c: 50: void lcdCommand(unsigned char cmd);lcd.c: 51: {;lcd.c: 52:     unsigned char
      +                           old_D;;lcd.c: 53:     old_D = PORTD;
  2718  001292  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  2719  001296                     
  2720                           ;lcd.c: 56:     TRISD = 0x00;
  2721  001296  0E00               	movlw	0
  2722  001298  6E95               	movwf	149,c	;volatile
  2723  00129A                     
  2724                           ;lcd.c: 58:     digitalWrite(PIN_E2, 0);
  2725  00129A  0E00               	movlw	0
  2726  00129C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2727  00129E  0E22               	movlw	34
  2728  0012A0  6E01               	movwf	digitalWrite@pin^0,c
  2729  0012A2  0E00               	movlw	0
  2730  0012A4  6E04               	movwf	(digitalWrite@value+1)^0,c
  2731  0012A6  0E00               	movlw	0
  2732  0012A8  6E03               	movwf	digitalWrite@value^0,c
  2733  0012AA  EC57  F006         	call	_digitalWrite	;wreg free
  2734  0012AE                     
  2735                           ;lcd.c: 59:     PORTD = cmd;
  2736  0012AE  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2737  0012B2                     
  2738                           ;lcd.c: 61:     digitalWrite(PIN_E1, 1);
  2739  0012B2  0E00               	movlw	0
  2740  0012B4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2741  0012B6  0E21               	movlw	33
  2742  0012B8  6E01               	movwf	digitalWrite@pin^0,c
  2743  0012BA  0E00               	movlw	0
  2744  0012BC  6E04               	movwf	(digitalWrite@value+1)^0,c
  2745  0012BE  0E01               	movlw	1
  2746  0012C0  6E03               	movwf	digitalWrite@value^0,c
  2747  0012C2  EC57  F006         	call	_digitalWrite	;wreg free
  2748  0012C6                     
  2749                           ;lcd.c: 62:     digitalWrite(PIN_E1, 0);
  2750  0012C6  0E00               	movlw	0
  2751  0012C8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2752  0012CA  0E21               	movlw	33
  2753  0012CC  6E01               	movwf	digitalWrite@pin^0,c
  2754  0012CE  0E00               	movlw	0
  2755  0012D0  6E04               	movwf	(digitalWrite@value+1)^0,c
  2756  0012D2  0E00               	movlw	0
  2757  0012D4  6E03               	movwf	digitalWrite@value^0,c
  2758  0012D6  EC57  F006         	call	_digitalWrite	;wreg free
  2759  0012DA                     
  2760                           ;lcd.c: 65:     PORTD = old_D;
  2761  0012DA  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2762  0012DE                     
  2763                           ;lcd.c: 67:     if ((cmd == 0x02) || (cmd == 0x01)) {
  2764  0012DE  0E02               	movlw	2
  2765  0012E0  1808               	xorwf	lcdCommand@cmd^0,w,c
  2766  0012E2  B4D8               	btfsc	status,2,c
  2767  0012E4  EF76  F009         	goto	u1151
  2768  0012E8  EF78  F009         	goto	u1150
  2769  0012EC                     u1151:
  2770  0012EC  EF80  F009         	goto	l1658
  2771  0012F0                     u1150:
  2772  0012F0  0408               	decf	lcdCommand@cmd^0,w,c
  2773  0012F2  A4D8               	btfss	status,2,c
  2774  0012F4  EF7E  F009         	goto	u1161
  2775  0012F8  EF80  F009         	goto	u1160
  2776  0012FC                     u1161:
  2777  0012FC  EF84  F009         	goto	l1660
  2778  001300                     u1160:
  2779  001300                     l1658:
  2780                           
  2781                           ;lcd.c: 68:         Delay2ms();
  2782  001300  EC19  F00B         	call	_Delay2ms	;wreg free
  2783                           
  2784                           ;lcd.c: 69:     } else {
  2785  001304  EF86  F009         	goto	l137
  2786  001308                     l1660:
  2787                           
  2788                           ;lcd.c: 70:         Delay40us();
  2789  001308  EC27  F00B         	call	_Delay40us	;wreg free
  2790  00130C                     l137:
  2791  00130C  0012               	return		;funcret
  2792  00130E                     __end_of_lcdCommand:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _digitalWrite *****************
  2796 ;; Defined at:
  2797 ;;		line 14 in file "io.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  pin             2    0[COMRAM] int 
  2800 ;;  value           2    2[COMRAM] int 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2812 ;;      Params:         4       0       0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0
  2814 ;;      Temps:          2       0       0       0       0       0       0
  2815 ;;      Totals:         6       0       0       0       0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_lcdCommand
  2822 ;;		_lcdData
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text15
  2827  000CAE                     __ptext15:
  2828                           	callstack 0
  2829  000CAE                     _digitalWrite:
  2830                           	callstack 27
  2831  000CAE                     
  2832                           ;io.c: 16:     if(pin <8){
  2833  000CAE  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2834  000CB0  EF65  F006         	goto	u950
  2835  000CB4  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2836  000CB6  E107               	bnz	u951
  2837  000CB8  0E08               	movlw	8
  2838  000CBA  5C01               	subwf	digitalWrite@pin^0,w,c
  2839  000CBC  B0D8               	btfsc	status,0,c
  2840  000CBE  EF63  F006         	goto	u951
  2841  000CC2  EF65  F006         	goto	u950
  2842  000CC6                     u951:
  2843  000CC6  EF8F  F006         	goto	l1608
  2844  000CCA                     u950:
  2845  000CCA                     
  2846                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2847  000CCA  5003               	movf	digitalWrite@value^0,w,c
  2848  000CCC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2849  000CCE  B4D8               	btfsc	status,2,c
  2850  000CD0  EF6C  F006         	goto	u961
  2851  000CD4  EF6E  F006         	goto	u960
  2852  000CD8                     u961:
  2853  000CD8  EF7E  F006         	goto	l1606
  2854  000CDC                     u960:
  2855  000CDC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2856  000CE0  0E01               	movlw	1
  2857  000CE2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2858  000CE4  2A05               	incf	??_digitalWrite^0,f,c
  2859  000CE6  EF77  F006         	goto	u974
  2860  000CEA                     u975:
  2861  000CEA  90D8               	bcf	status,0,c
  2862  000CEC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2863  000CEE                     u974:
  2864  000CEE  2E05               	decfsz	??_digitalWrite^0,f,c
  2865  000CF0  EF75  F006         	goto	u975
  2866  000CF4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2867  000CF6  1280               	iorwf	128,f,c	;volatile
  2868  000CF8  EF7D  F007         	goto	l42
  2869  000CFC                     l1606:
  2870  000CFC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2871  000D00  0E01               	movlw	1
  2872  000D02  6E06               	movwf	(??_digitalWrite+1)^0,c
  2873  000D04  2A05               	incf	??_digitalWrite^0,f,c
  2874  000D06  EF87  F006         	goto	u984
  2875  000D0A                     u985:
  2876  000D0A  90D8               	bcf	status,0,c
  2877  000D0C  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2878  000D0E                     u984:
  2879  000D0E  2E05               	decfsz	??_digitalWrite^0,f,c
  2880  000D10  EF85  F006         	goto	u985
  2881  000D14  5006               	movf	(??_digitalWrite+1)^0,w,c
  2882  000D16  0AFF               	xorlw	255
  2883  000D18  1680               	andwf	128,f,c	;volatile
  2884  000D1A  EF7D  F007         	goto	l42
  2885  000D1E                     l1608:
  2886  000D1E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2887  000D20  EF9D  F006         	goto	u990
  2888  000D24  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2889  000D26  E107               	bnz	u991
  2890  000D28  0E10               	movlw	16
  2891  000D2A  5C01               	subwf	digitalWrite@pin^0,w,c
  2892  000D2C  B0D8               	btfsc	status,0,c
  2893  000D2E  EF9B  F006         	goto	u991
  2894  000D32  EF9D  F006         	goto	u990
  2895  000D36                     u991:
  2896  000D36  EFCB  F006         	goto	l1616
  2897  000D3A                     u990:
  2898  000D3A                     
  2899                           ;io.c: 20:         pin -=8;
  2900  000D3A  0EF8               	movlw	248
  2901  000D3C  2601               	addwf	digitalWrite@pin^0,f,c
  2902  000D3E  0EFF               	movlw	255
  2903  000D40  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2904                           
  2905                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2906  000D42  5003               	movf	digitalWrite@value^0,w,c
  2907  000D44  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2908  000D46  B4D8               	btfsc	status,2,c
  2909  000D48  EFA8  F006         	goto	u1001
  2910  000D4C  EFAA  F006         	goto	u1000
  2911  000D50                     u1001:
  2912  000D50  EFBA  F006         	goto	l1614
  2913  000D54                     u1000:
  2914  000D54  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2915  000D58  0E01               	movlw	1
  2916  000D5A  6E06               	movwf	(??_digitalWrite+1)^0,c
  2917  000D5C  2A05               	incf	??_digitalWrite^0,f,c
  2918  000D5E  EFB3  F006         	goto	u1014
  2919  000D62                     u1015:
  2920  000D62  90D8               	bcf	status,0,c
  2921  000D64  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2922  000D66                     u1014:
  2923  000D66  2E05               	decfsz	??_digitalWrite^0,f,c
  2924  000D68  EFB1  F006         	goto	u1015
  2925  000D6C  5006               	movf	(??_digitalWrite+1)^0,w,c
  2926  000D6E  1281               	iorwf	129,f,c	;volatile
  2927  000D70  EF7D  F007         	goto	l42
  2928  000D74                     l1614:
  2929  000D74  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2930  000D78  0E01               	movlw	1
  2931  000D7A  6E06               	movwf	(??_digitalWrite+1)^0,c
  2932  000D7C  2A05               	incf	??_digitalWrite^0,f,c
  2933  000D7E  EFC3  F006         	goto	u1024
  2934  000D82                     u1025:
  2935  000D82  90D8               	bcf	status,0,c
  2936  000D84  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2937  000D86                     u1024:
  2938  000D86  2E05               	decfsz	??_digitalWrite^0,f,c
  2939  000D88  EFC1  F006         	goto	u1025
  2940  000D8C  5006               	movf	(??_digitalWrite+1)^0,w,c
  2941  000D8E  0AFF               	xorlw	255
  2942  000D90  1681               	andwf	129,f,c	;volatile
  2943  000D92  EF7D  F007         	goto	l42
  2944  000D96                     l1616:
  2945  000D96  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2946  000D98  EFD9  F006         	goto	u1030
  2947  000D9C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2948  000D9E  E107               	bnz	u1031
  2949  000DA0  0E18               	movlw	24
  2950  000DA2  5C01               	subwf	digitalWrite@pin^0,w,c
  2951  000DA4  B0D8               	btfsc	status,0,c
  2952  000DA6  EFD7  F006         	goto	u1031
  2953  000DAA  EFD9  F006         	goto	u1030
  2954  000DAE                     u1031:
  2955  000DAE  EF07  F007         	goto	l1624
  2956  000DB2                     u1030:
  2957  000DB2                     
  2958                           ;io.c: 24:         pin -=16;
  2959  000DB2  0EF0               	movlw	240
  2960  000DB4  2601               	addwf	digitalWrite@pin^0,f,c
  2961  000DB6  0EFF               	movlw	255
  2962  000DB8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2963                           
  2964                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2965  000DBA  5003               	movf	digitalWrite@value^0,w,c
  2966  000DBC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2967  000DBE  B4D8               	btfsc	status,2,c
  2968  000DC0  EFE4  F006         	goto	u1041
  2969  000DC4  EFE6  F006         	goto	u1040
  2970  000DC8                     u1041:
  2971  000DC8  EFF6  F006         	goto	l1622
  2972  000DCC                     u1040:
  2973  000DCC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2974  000DD0  0E01               	movlw	1
  2975  000DD2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2976  000DD4  2A05               	incf	??_digitalWrite^0,f,c
  2977  000DD6  EFEF  F006         	goto	u1054
  2978  000DDA                     u1055:
  2979  000DDA  90D8               	bcf	status,0,c
  2980  000DDC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2981  000DDE                     u1054:
  2982  000DDE  2E05               	decfsz	??_digitalWrite^0,f,c
  2983  000DE0  EFED  F006         	goto	u1055
  2984  000DE4  5006               	movf	(??_digitalWrite+1)^0,w,c
  2985  000DE6  1282               	iorwf	130,f,c	;volatile
  2986  000DE8  EF7D  F007         	goto	l42
  2987  000DEC                     l1622:
  2988  000DEC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2989  000DF0  0E01               	movlw	1
  2990  000DF2  6E06               	movwf	(??_digitalWrite+1)^0,c
  2991  000DF4  2A05               	incf	??_digitalWrite^0,f,c
  2992  000DF6  EFFF  F006         	goto	u1064
  2993  000DFA                     u1065:
  2994  000DFA  90D8               	bcf	status,0,c
  2995  000DFC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2996  000DFE                     u1064:
  2997  000DFE  2E05               	decfsz	??_digitalWrite^0,f,c
  2998  000E00  EFFD  F006         	goto	u1065
  2999  000E04  5006               	movf	(??_digitalWrite+1)^0,w,c
  3000  000E06  0AFF               	xorlw	255
  3001  000E08  1682               	andwf	130,f,c	;volatile
  3002  000E0A  EF7D  F007         	goto	l42
  3003  000E0E                     l1624:
  3004  000E0E  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3005  000E10  EF15  F007         	goto	u1070
  3006  000E14  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3007  000E16  E107               	bnz	u1071
  3008  000E18  0E20               	movlw	32
  3009  000E1A  5C01               	subwf	digitalWrite@pin^0,w,c
  3010  000E1C  B0D8               	btfsc	status,0,c
  3011  000E1E  EF13  F007         	goto	u1071
  3012  000E22  EF15  F007         	goto	u1070
  3013  000E26                     u1071:
  3014  000E26  EF43  F007         	goto	l1632
  3015  000E2A                     u1070:
  3016  000E2A                     
  3017                           ;io.c: 28:         pin -=24;
  3018  000E2A  0EE8               	movlw	232
  3019  000E2C  2601               	addwf	digitalWrite@pin^0,f,c
  3020  000E2E  0EFF               	movlw	255
  3021  000E30  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3022                           
  3023                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  3024  000E32  5003               	movf	digitalWrite@value^0,w,c
  3025  000E34  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3026  000E36  B4D8               	btfsc	status,2,c
  3027  000E38  EF20  F007         	goto	u1081
  3028  000E3C  EF22  F007         	goto	u1080
  3029  000E40                     u1081:
  3030  000E40  EF32  F007         	goto	l1630
  3031  000E44                     u1080:
  3032  000E44  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3033  000E48  0E01               	movlw	1
  3034  000E4A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3035  000E4C  2A05               	incf	??_digitalWrite^0,f,c
  3036  000E4E  EF2B  F007         	goto	u1094
  3037  000E52                     u1095:
  3038  000E52  90D8               	bcf	status,0,c
  3039  000E54  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3040  000E56                     u1094:
  3041  000E56  2E05               	decfsz	??_digitalWrite^0,f,c
  3042  000E58  EF29  F007         	goto	u1095
  3043  000E5C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3044  000E5E  1283               	iorwf	131,f,c	;volatile
  3045  000E60  EF7D  F007         	goto	l42
  3046  000E64                     l1630:
  3047  000E64  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3048  000E68  0E01               	movlw	1
  3049  000E6A  6E06               	movwf	(??_digitalWrite+1)^0,c
  3050  000E6C  2A05               	incf	??_digitalWrite^0,f,c
  3051  000E6E  EF3B  F007         	goto	u1104
  3052  000E72                     u1105:
  3053  000E72  90D8               	bcf	status,0,c
  3054  000E74  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3055  000E76                     u1104:
  3056  000E76  2E05               	decfsz	??_digitalWrite^0,f,c
  3057  000E78  EF39  F007         	goto	u1105
  3058  000E7C  5006               	movf	(??_digitalWrite+1)^0,w,c
  3059  000E7E  0AFF               	xorlw	255
  3060  000E80  1683               	andwf	131,f,c	;volatile
  3061  000E82  EF7D  F007         	goto	l42
  3062  000E86                     l1632:
  3063  000E86  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  3064  000E88  EF51  F007         	goto	u1110
  3065  000E8C  5002               	movf	(digitalWrite@pin+1)^0,w,c
  3066  000E8E  E107               	bnz	u1111
  3067  000E90  0E28               	movlw	40
  3068  000E92  5C01               	subwf	digitalWrite@pin^0,w,c
  3069  000E94  B0D8               	btfsc	status,0,c
  3070  000E96  EF4F  F007         	goto	u1111
  3071  000E9A  EF51  F007         	goto	u1110
  3072  000E9E                     u1111:
  3073  000E9E  EF7D  F007         	goto	l42
  3074  000EA2                     u1110:
  3075  000EA2                     
  3076                           ;io.c: 32:         pin -=32;
  3077  000EA2  0EE0               	movlw	224
  3078  000EA4  2601               	addwf	digitalWrite@pin^0,f,c
  3079  000EA6  0EFF               	movlw	255
  3080  000EA8  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  3081                           
  3082                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  3083  000EAA  5003               	movf	digitalWrite@value^0,w,c
  3084  000EAC  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  3085  000EAE  B4D8               	btfsc	status,2,c
  3086  000EB0  EF5C  F007         	goto	u1121
  3087  000EB4  EF5E  F007         	goto	u1120
  3088  000EB8                     u1121:
  3089  000EB8  EF6E  F007         	goto	l1638
  3090  000EBC                     u1120:
  3091  000EBC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3092  000EC0  0E01               	movlw	1
  3093  000EC2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3094  000EC4  2A05               	incf	??_digitalWrite^0,f,c
  3095  000EC6  EF67  F007         	goto	u1134
  3096  000ECA                     u1135:
  3097  000ECA  90D8               	bcf	status,0,c
  3098  000ECC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3099  000ECE                     u1134:
  3100  000ECE  2E05               	decfsz	??_digitalWrite^0,f,c
  3101  000ED0  EF65  F007         	goto	u1135
  3102  000ED4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3103  000ED6  1284               	iorwf	132,f,c	;volatile
  3104  000ED8  EF7D  F007         	goto	l42
  3105  000EDC                     l1638:
  3106  000EDC  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  3107  000EE0  0E01               	movlw	1
  3108  000EE2  6E06               	movwf	(??_digitalWrite+1)^0,c
  3109  000EE4  2A05               	incf	??_digitalWrite^0,f,c
  3110  000EE6  EF77  F007         	goto	u1144
  3111  000EEA                     u1145:
  3112  000EEA  90D8               	bcf	status,0,c
  3113  000EEC  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  3114  000EEE                     u1144:
  3115  000EEE  2E05               	decfsz	??_digitalWrite^0,f,c
  3116  000EF0  EF75  F007         	goto	u1145
  3117  000EF4  5006               	movf	(??_digitalWrite+1)^0,w,c
  3118  000EF6  0AFF               	xorlw	255
  3119  000EF8  1684               	andwf	132,f,c	;volatile
  3120  000EFA                     l42:
  3121  000EFA  0012               	return		;funcret
  3122  000EFC                     __end_of_digitalWrite:
  3123                           	callstack 0
  3124                           
  3125 ;; *************** function _Delay2ms *****************
  3126 ;; Defined at:
  3127 ;;		line 39 in file "lcd.c"
  3128 ;; Parameters:    Size  Location     Type
  3129 ;;		None
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  i               1    1[COMRAM] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3141 ;;      Params:         0       0       0       0       0       0       0
  3142 ;;      Locals:         1       0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0
  3144 ;;      Totals:         1       0       0       0       0       0       0
  3145 ;;Total ram usage:        1 bytes
  3146 ;; Hardware stack levels used: 1
  3147 ;; Hardware stack levels required when called: 1
  3148 ;; This function calls:
  3149 ;;		_Delay40us
  3150 ;; This function is called by:
  3151 ;;		_lcdCommand
  3152 ;;		_lcdInit
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text16
  3157  001632                     __ptext16:
  3158                           	callstack 0
  3159  001632                     _Delay2ms:
  3160                           	callstack 26
  3161  001632                     
  3162                           ;lcd.c: 41:  unsigned char i;;lcd.c: 42:  for(i=0; i < 50; i++)
  3163  001632  0E00               	movlw	0
  3164  001634  6E02               	movwf	Delay2ms@i^0,c
  3165  001636                     l1056:
  3166                           
  3167                           ;lcd.c: 43:  {;lcd.c: 44:   Delay40us();
  3168  001636  EC27  F00B         	call	_Delay40us	;wreg free
  3169  00163A                     
  3170                           ;lcd.c: 45:  }
  3171  00163A  2A02               	incf	Delay2ms@i^0,f,c
  3172  00163C  0E31               	movlw	49
  3173  00163E  6402               	cpfsgt	Delay2ms@i^0,c
  3174  001640  EF24  F00B         	goto	u221
  3175  001644  EF26  F00B         	goto	u220
  3176  001648                     u221:
  3177  001648  EF1B  F00B         	goto	l1056
  3178  00164C                     u220:
  3179  00164C  0012               	return		;funcret
  3180  00164E                     __end_of_Delay2ms:
  3181                           	callstack 0
  3182                           
  3183 ;; *************** function _Delay40us *****************
  3184 ;; Defined at:
  3185 ;;		line 33 in file "lcd.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  i               1    0[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3199 ;;      Params:         0       0       0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0
  3202 ;;      Totals:         1       0       0       0       0       0       0
  3203 ;;Total ram usage:        1 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; This function calls:
  3206 ;;		Nothing
  3207 ;; This function is called by:
  3208 ;;		_Delay2ms
  3209 ;;		_lcdCommand
  3210 ;;		_lcdData
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text17
  3215  00164E                     __ptext17:
  3216                           	callstack 0
  3217  00164E                     _Delay40us:
  3218                           	callstack 27
  3219  00164E                     
  3220                           ;lcd.c: 35:  unsigned char i;;lcd.c: 36:  for(i=0; i < 25; i++);
  3221  00164E  0E00               	movlw	0
  3222  001650  6E01               	movwf	Delay40us@i^0,c
  3223  001652                     l1006:
  3224  001652  2A01               	incf	Delay40us@i^0,f,c
  3225  001654  0E18               	movlw	24
  3226  001656  6401               	cpfsgt	Delay40us@i^0,c
  3227  001658  EF30  F00B         	goto	u11
  3228  00165C  EF32  F00B         	goto	u10
  3229  001660                     u11:
  3230  001660  EF29  F00B         	goto	l1006
  3231  001664                     u10:
  3232  001664  0012               	return		;funcret
  3233  001666                     __end_of_Delay40us:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _kpRead *****************
  3237 ;; Defined at:
  3238 ;;		line 35 in file "keypad.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  2    0[COMRAM] unsigned int 
  3245 ;; Registers used:
  3246 ;;		None
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3252 ;;      Params:         2       0       0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0       0
  3255 ;;      Totals:         2       0       0       0       0       0       0
  3256 ;;Total ram usage:        2 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; This function calls:
  3259 ;;		Nothing
  3260 ;; This function is called by:
  3261 ;;		_main
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	text18
  3266  00169E                     __ptext18:
  3267                           	callstack 0
  3268  00169E                     _kpRead:
  3269                           	callstack 30
  3270  00169E                     
  3271                           ;keypad.c: 36:     return valor;
  3272  00169E  C04D  F001         	movff	_valor,?_kpRead
  3273  0016A2  C04E  F002         	movff	_valor+1,?_kpRead+1
  3274  0016A6  0012               	return		;funcret
  3275  0016A8                     __end_of_kpRead:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _kpInit *****************
  3279 ;; Defined at:
  3280 ;;		line 87 in file "keypad.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3294 ;;      Params:         0       0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; This function calls:
  3301 ;;		Nothing
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text19
  3308  0016A8                     __ptext19:
  3309                           	callstack 0
  3310  0016A8                     _kpInit:
  3311                           	callstack 30
  3312  0016A8                     
  3313                           ;keypad.c: 89:     TRISB &= 0x07;
  3314  0016A8  0E07               	movlw	7
  3315  0016AA  1693               	andwf	147,f,c	;volatile
  3316                           
  3317                           ;keypad.c: 91:     TRISD |= 0x0f;
  3318  0016AC  0E0F               	movlw	15
  3319  0016AE  1295               	iorwf	149,f,c	;volatile
  3320  0016B0  0012               	return		;funcret
  3321  0016B2                     __end_of_kpInit:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _kpDebounce *****************
  3325 ;; Defined at:
  3326 ;;		line 39 in file "keypad.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  k               2    6[COMRAM] int 
  3331 ;;  i               1    9[COMRAM] unsigned char 
  3332 ;;  j               1    8[COMRAM] unsigned char 
  3333 ;;  old_D           1    5[COMRAM] unsigned char 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, prodl, prodh
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3343 ;;      Params:         0       0       0       0       0       0       0
  3344 ;;      Locals:         5       0       0       0       0       0       0
  3345 ;;      Temps:          5       0       0       0       0       0       0
  3346 ;;      Totals:        10       0       0       0       0       0       0
  3347 ;;Total ram usage:       10 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           
  3356                           	psect	text20
  3357  000EFC                     __ptext20:
  3358                           	callstack 0
  3359  000EFC                     _kpDebounce:
  3360                           	callstack 30
  3361  000EFC                     
  3362                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  3363  000EFC  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  3364  000F00                     
  3365                           ;keypad.c: 51:     TRISD |= 0x0f;
  3366  000F00  0E0F               	movlw	15
  3367  000F02  1295               	iorwf	149,f,c	;volatile
  3368  000F04                     
  3369                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  3370  000F04  0E00               	movlw	0
  3371  000F06  6E0A               	movwf	kpDebounce@i^0,c
  3372  000F08                     l1230:
  3373                           
  3374                           ;keypad.c: 55:         TRISB &= 0xF8;
  3375  000F08  0EF8               	movlw	248
  3376  000F0A  1693               	andwf	147,f,c	;volatile
  3377                           
  3378                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  3379  000F0C  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3380  000F10  0E01               	movlw	1
  3381  000F12  6E02               	movwf	(??_kpDebounce+1)^0,c
  3382  000F14  2A01               	incf	??_kpDebounce^0,f,c
  3383  000F16  EF8F  F007         	goto	u554
  3384  000F1A                     u555:
  3385  000F1A  90D8               	bcf	status,0,c
  3386  000F1C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3387  000F1E                     u554:
  3388  000F1E  2E01               	decfsz	??_kpDebounce^0,f,c
  3389  000F20  EF8D  F007         	goto	u555
  3390  000F24  5002               	movf	(??_kpDebounce+1)^0,w,c
  3391  000F26  1293               	iorwf	147,f,c	;volatile
  3392                           
  3393                           ;keypad.c: 59:         PORTB |= 0x07;
  3394  000F28  0E07               	movlw	7
  3395  000F2A  1281               	iorwf	129,f,c	;volatile
  3396                           
  3397                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  3398  000F2C  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  3399  000F30  0E01               	movlw	1
  3400  000F32  6E02               	movwf	(??_kpDebounce+1)^0,c
  3401  000F34  2A01               	incf	??_kpDebounce^0,f,c
  3402  000F36  EF9F  F007         	goto	u564
  3403  000F3A                     u565:
  3404  000F3A  90D8               	bcf	status,0,c
  3405  000F3C  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3406  000F3E                     u564:
  3407  000F3E  2E01               	decfsz	??_kpDebounce^0,f,c
  3408  000F40  EF9D  F007         	goto	u565
  3409  000F44  5002               	movf	(??_kpDebounce+1)^0,w,c
  3410  000F46  0AFF               	xorlw	255
  3411  000F48  1681               	andwf	129,f,c	;volatile
  3412  000F4A                     
  3413                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  3414  000F4A  0E00               	movlw	0
  3415  000F4C  6E08               	movwf	(kpDebounce@k+1)^0,c
  3416  000F4E  0E00               	movlw	0
  3417  000F50  6E07               	movwf	kpDebounce@k^0,c
  3418  000F52                     l1238:
  3419  000F52  4A07               	infsnz	kpDebounce@k^0,f,c
  3420  000F54  2A08               	incf	(kpDebounce@k+1)^0,f,c
  3421  000F56  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  3422  000F58  EFB7  F007         	goto	u571
  3423  000F5C  5008               	movf	(kpDebounce@k+1)^0,w,c
  3424  000F5E  E109               	bnz	u570
  3425  000F60  0E0A               	movlw	10
  3426  000F62  5C07               	subwf	kpDebounce@k^0,w,c
  3427  000F64  A0D8               	btfss	status,0,c
  3428  000F66  EFB7  F007         	goto	u571
  3429  000F6A  EFB9  F007         	goto	u570
  3430  000F6E                     u571:
  3431  000F6E  EFA9  F007         	goto	l1238
  3432  000F72                     u570:
  3433  000F72                     
  3434                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  3435  000F72  0E00               	movlw	0
  3436  000F74  6E09               	movwf	kpDebounce@j^0,c
  3437  000F76                     l1248:
  3438                           
  3439                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  3440  000F76  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  3441  000F7A  0E01               	movlw	1
  3442  000F7C  6E02               	movwf	(??_kpDebounce+1)^0,c
  3443  000F7E  2A01               	incf	??_kpDebounce^0,f,c
  3444  000F80  EFC4  F007         	goto	u584
  3445  000F84                     u585:
  3446  000F84  90D8               	bcf	status,0,c
  3447  000F86  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3448  000F88                     u584:
  3449  000F88  2E01               	decfsz	??_kpDebounce^0,f,c
  3450  000F8A  EFC2  F007         	goto	u585
  3451  000F8E  5002               	movf	(??_kpDebounce+1)^0,w,c
  3452  000F90  1483               	andwf	131,w,c	;volatile
  3453  000F92  0900               	iorlw	0
  3454  000F94  A4D8               	btfss	status,2,c
  3455  000F96  EFCF  F007         	goto	u591
  3456  000F9A  EFD1  F007         	goto	u590
  3457  000F9E                     u591:
  3458  000F9E  EFE9  F007         	goto	l1252
  3459  000FA2                     u590:
  3460  000FA2                     
  3461                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  3462  000FA2  500A               	movf	kpDebounce@i^0,w,c
  3463  000FA4  0D04               	mullw	4
  3464  000FA6  50F3               	movf	243,w,c
  3465  000FA8  2409               	addwf	kpDebounce@j^0,w,c
  3466  000FAA  6E01               	movwf	??_kpDebounce^0,c
  3467  000FAC  0E01               	movlw	1
  3468  000FAE  6E02               	movwf	(??_kpDebounce+1)^0,c
  3469  000FB0  0E00               	movlw	0
  3470  000FB2  6E03               	movwf	(??_kpDebounce+2)^0,c
  3471  000FB4  2A01               	incf	??_kpDebounce^0,f,c
  3472  000FB6  EFE0  F007         	goto	u604
  3473  000FBA                     u605:
  3474  000FBA  90D8               	bcf	status,0,c
  3475  000FBC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3476  000FBE  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3477  000FC0                     u604:
  3478  000FC0  2E01               	decfsz	??_kpDebounce^0,f,c
  3479  000FC2  EFDD  F007         	goto	u605
  3480  000FC6  5002               	movf	(??_kpDebounce+1)^0,w,c
  3481  000FC8  124B               	iorwf	kpDebounce@valorNovo^0,f,c
  3482  000FCA  5003               	movf	(??_kpDebounce+2)^0,w,c
  3483  000FCC  124C               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  3484                           
  3485                           ;keypad.c: 69:             } else {
  3486  000FCE  EF03  F008         	goto	l1254
  3487  000FD2                     l1252:
  3488                           
  3489                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  3490  000FD2  500A               	movf	kpDebounce@i^0,w,c
  3491  000FD4  0D04               	mullw	4
  3492  000FD6  50F3               	movf	243,w,c
  3493  000FD8  2409               	addwf	kpDebounce@j^0,w,c
  3494  000FDA  6E01               	movwf	??_kpDebounce^0,c
  3495  000FDC  0E01               	movlw	1
  3496  000FDE  6E02               	movwf	(??_kpDebounce+1)^0,c
  3497  000FE0  0E00               	movlw	0
  3498  000FE2  6E03               	movwf	(??_kpDebounce+2)^0,c
  3499  000FE4  2A01               	incf	??_kpDebounce^0,f,c
  3500  000FE6  EFF8  F007         	goto	u614
  3501  000FEA                     u615:
  3502  000FEA  90D8               	bcf	status,0,c
  3503  000FEC  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  3504  000FEE  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  3505  000FF0                     u614:
  3506  000FF0  2E01               	decfsz	??_kpDebounce^0,f,c
  3507  000FF2  EFF5  F007         	goto	u615
  3508  000FF6  1C02               	comf	(??_kpDebounce+1)^0,w,c
  3509  000FF8  6E04               	movwf	(??_kpDebounce+3)^0,c
  3510  000FFA  1C03               	comf	(??_kpDebounce+2)^0,w,c
  3511  000FFC  6E05               	movwf	(??_kpDebounce+4)^0,c
  3512  000FFE  5004               	movf	(??_kpDebounce+3)^0,w,c
  3513  001000  164B               	andwf	kpDebounce@valorNovo^0,f,c
  3514  001002  5005               	movf	(??_kpDebounce+4)^0,w,c
  3515  001004  164C               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  3516  001006                     l1254:
  3517                           
  3518                           ;keypad.c: 72:         }
  3519  001006  2A09               	incf	kpDebounce@j^0,f,c
  3520  001008  0E03               	movlw	3
  3521  00100A  6409               	cpfsgt	kpDebounce@j^0,c
  3522  00100C  EF0A  F008         	goto	u621
  3523  001010  EF0C  F008         	goto	u620
  3524  001014                     u621:
  3525  001014  EFBB  F007         	goto	l1248
  3526  001018                     u620:
  3527  001018                     
  3528                           ;keypad.c: 73:     }
  3529  001018  2A0A               	incf	kpDebounce@i^0,f,c
  3530  00101A  0E02               	movlw	2
  3531  00101C  640A               	cpfsgt	kpDebounce@i^0,c
  3532  00101E  EF13  F008         	goto	u631
  3533  001022  EF15  F008         	goto	u630
  3534  001026                     u631:
  3535  001026  EF84  F007         	goto	l1230
  3536  00102A                     u630:
  3537  00102A                     
  3538                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  3539  00102A  504B               	movf	kpDebounce@valorNovo^0,w,c
  3540  00102C  1849               	xorwf	kpDebounce@valorAntigo^0,w,c
  3541  00102E  E107               	bnz	u641
  3542  001030  504C               	movf	(kpDebounce@valorNovo+1)^0,w,c
  3543  001032  184A               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  3544  001034  A4D8               	btfss	status,2,c
  3545  001036  EF1F  F008         	goto	u641
  3546  00103A  EF21  F008         	goto	u640
  3547  00103E                     u641:
  3548  00103E  EF24  F008         	goto	l1266
  3549  001042                     u640:
  3550  001042                     
  3551                           ;keypad.c: 75:         tempo--;
  3552  001042  0654               	decf	kpDebounce@tempo^0,f,c
  3553                           
  3554                           ;keypad.c: 76:     } else {
  3555  001044  EF2A  F008         	goto	l107
  3556  001048                     l1266:
  3557                           
  3558                           ;keypad.c: 77:         tempo = 10;
  3559  001048  0E0A               	movlw	10
  3560  00104A  6E54               	movwf	kpDebounce@tempo^0,c
  3561  00104C                     
  3562                           ;keypad.c: 78:         valorAntigo = valorNovo;
  3563  00104C  C04B  F049         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  3564  001050  C04C  F04A         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  3565  001054                     l107:
  3566                           
  3567                           ;keypad.c: 80:     if (tempo == 0) {
  3568  001054  5054               	movf	kpDebounce@tempo^0,w,c
  3569  001056  A4D8               	btfss	status,2,c
  3570  001058  EF30  F008         	goto	u651
  3571  00105C  EF32  F008         	goto	u650
  3572  001060                     u651:
  3573  001060  EF36  F008         	goto	l108
  3574  001064                     u650:
  3575  001064                     
  3576                           ;keypad.c: 81:         valor = valorAntigo;
  3577  001064  C049  F04D         	movff	kpDebounce@valorAntigo,_valor
  3578  001068  C04A  F04E         	movff	kpDebounce@valorAntigo+1,_valor+1
  3579  00106C                     l108:
  3580                           
  3581                           ;keypad.c: 83:     PORTD = old_D;
  3582  00106C  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  3583  001070                     
  3584                           ;keypad.c: 84:     TRISD = 0x00;
  3585  001070  0E00               	movlw	0
  3586  001072  6E95               	movwf	149,c	;volatile
  3587  001074  0012               	return		;funcret
  3588  001076                     __end_of_kpDebounce:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _atraso_ms *****************
  3592 ;; Defined at:
  3593 ;;		line 3 in file "atraso.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  t               2    0[COMRAM] unsigned int 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  i               2    2[COMRAM] volatile unsigned int 
  3598 ;;  k               1    5[COMRAM] volatile unsigned char 
  3599 ;;  j               1    4[COMRAM] volatile unsigned char 
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1    wreg      void 
  3602 ;; Registers used:
  3603 ;;		wreg, status,2, status,0
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 0/0
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3609 ;;      Params:         2       0       0       0       0       0       0
  3610 ;;      Locals:         4       0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0
  3612 ;;      Totals:         6       0       0       0       0       0       0
  3613 ;;Total ram usage:        6 bytes
  3614 ;; Hardware stack levels used: 1
  3615 ;; This function calls:
  3616 ;;		Nothing
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text21
  3623  0014CA                     __ptext21:
  3624                           	callstack 0
  3625  0014CA                     _atraso_ms:
  3626                           	callstack 30
  3627  0014CA                     
  3628                           ;atraso.c: 4:     volatile unsigned char j, k;;atraso.c: 5:     volatile unsigned int i;
      +                          ;atraso.c: 6:     for (i = 0; i < t; i++) {
  3629  0014CA  0E00               	movlw	0
  3630  0014CC  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3631  0014CE  0E00               	movlw	0
  3632  0014D0  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3633  0014D2  EF8B  F00A         	goto	l1864
  3634  0014D6                     l1842:
  3635                           
  3636                           ;atraso.c: 7:         for (j = 0; j < 41; j++) {
  3637  0014D6  0E00               	movlw	0
  3638  0014D8  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3639  0014DA                     l1844:
  3640  0014DA  0E28               	movlw	40
  3641  0014DC  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3642  0014DE  EF73  F00A         	goto	u1481
  3643  0014E2  EF75  F00A         	goto	u1480
  3644  0014E6                     u1481:
  3645  0014E6  EF77  F00A         	goto	l1848
  3646  0014EA                     u1480:
  3647  0014EA  EF89  F00A         	goto	l1862
  3648  0014EE                     l1848:
  3649                           
  3650                           ;atraso.c: 8:             for (k = 0; k < 3; k++);
  3651  0014EE  0E00               	movlw	0
  3652  0014F0  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3653  0014F2                     l1850:
  3654  0014F2  0E02               	movlw	2
  3655  0014F4  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3656  0014F6  EF7F  F00A         	goto	u1491
  3657  0014FA  EF81  F00A         	goto	u1490
  3658  0014FE                     u1491:
  3659  0014FE  EF83  F00A         	goto	l1854
  3660  001502                     u1490:
  3661  001502  EF86  F00A         	goto	l1858
  3662  001506                     l1854:
  3663  001506  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3664  001508  EF79  F00A         	goto	l1850
  3665  00150C                     l1858:
  3666                           
  3667                           ;atraso.c: 9:         }
  3668  00150C  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3669  00150E  EF6D  F00A         	goto	l1844
  3670  001512                     l1862:
  3671                           
  3672                           ;atraso.c: 10:     }
  3673  001512  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3674  001514  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3675  001516                     l1864:
  3676  001516  5001               	movf	atraso_ms@t^0,w,c
  3677  001518  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3678  00151A  5002               	movf	(atraso_ms@t+1)^0,w,c
  3679  00151C  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3680  00151E  A0D8               	btfss	status,0,c
  3681  001520  EF94  F00A         	goto	u1501
  3682  001524  EF96  F00A         	goto	u1500
  3683  001528                     u1501:
  3684  001528  EF6B  F00A         	goto	l1842
  3685  00152C                     u1500:
  3686  00152C  0012               	return		;funcret
  3687  00152E                     __end_of_atraso_ms:
  3688                           	callstack 0
  3689                           
  3690 ;; *************** function _adc_init *****************
  3691 ;; Defined at:
  3692 ;;		line 30 in file "adc.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;		None
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  1    wreg      void 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3706 ;;      Params:         0       0       0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0
  3709 ;;      Totals:         0       0       0       0       0       0       0
  3710 ;;Total ram usage:        0 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_main
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text22
  3720  001690                     __ptext22:
  3721                           	callstack 0
  3722  001690                     _adc_init:
  3723                           	callstack 30
  3724  001690                     
  3725                           ;adc.c: 36:   ADCON0=0x01;
  3726  001690  0E01               	movlw	1
  3727  001692  6EC2               	movwf	194,c	;volatile
  3728                           
  3729                           ;adc.c: 37:   ADCON1=0x0B;
  3730  001694  0E0B               	movlw	11
  3731  001696  6EC1               	movwf	193,c	;volatile
  3732                           
  3733                           ;adc.c: 38:   ADCON2=0x01;
  3734  001698  0E01               	movlw	1
  3735  00169A  6EC0               	movwf	192,c	;volatile
  3736  00169C  0012               	return		;funcret
  3737  00169E                     __end_of_adc_init:
  3738                           	callstack 0
  3739                           
  3740                           	psect	rparam
  3741  0000                     
  3742                           	psect	idloc
  3743                           
  3744                           ;Config register IDLOC0 @ 0x200000
  3745                           ;	unspecified, using default values
  3746  200000                     	org	2097152
  3747  200000  FF                 	db	255
  3748                           
  3749                           ;Config register IDLOC1 @ 0x200001
  3750                           ;	unspecified, using default values
  3751  200001                     	org	2097153
  3752  200001  FF                 	db	255
  3753                           
  3754                           ;Config register IDLOC2 @ 0x200002
  3755                           ;	unspecified, using default values
  3756  200002                     	org	2097154
  3757  200002  FF                 	db	255
  3758                           
  3759                           ;Config register IDLOC3 @ 0x200003
  3760                           ;	unspecified, using default values
  3761  200003                     	org	2097155
  3762  200003  FF                 	db	255
  3763                           
  3764                           ;Config register IDLOC4 @ 0x200004
  3765                           ;	unspecified, using default values
  3766  200004                     	org	2097156
  3767  200004  FF                 	db	255
  3768                           
  3769                           ;Config register IDLOC5 @ 0x200005
  3770                           ;	unspecified, using default values
  3771  200005                     	org	2097157
  3772  200005  FF                 	db	255
  3773                           
  3774                           ;Config register IDLOC6 @ 0x200006
  3775                           ;	unspecified, using default values
  3776  200006                     	org	2097158
  3777  200006  FF                 	db	255
  3778                           
  3779                           ;Config register IDLOC7 @ 0x200007
  3780                           ;	unspecified, using default values
  3781  200007                     	org	2097159
  3782  200007  FF                 	db	255
  3783                           
  3784                           	psect	config
  3785                           
  3786                           ; Padding undefined space
  3787  300000                     	org	3145728
  3788  300000  FF                 	db	255
  3789                           
  3790                           ;Config register CONFIG1H @ 0x300001
  3791                           ;	Oscillator Selection bits
  3792                           ;	OSC = HS, HS oscillator
  3793                           ;	Fail-Safe Clock Monitor Enable bit
  3794                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3795                           ;	Internal/External Oscillator Switchover bit
  3796                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3797  300001                     	org	3145729
  3798  300001  02                 	db	2
  3799                           
  3800                           ;Config register CONFIG2L @ 0x300002
  3801                           ;	Power-up Timer Enable bit
  3802                           ;	PWRT = OFF, PWRT disabled
  3803                           ;	Brown-out Reset Enable bits
  3804                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3805                           ;	Brown Out Reset Voltage bits
  3806                           ;	BORV = 0x2E, user specified literal
  3807  300002                     	org	3145730
  3808  300002  71                 	db	369
  3809                           
  3810                           ;Config register CONFIG2H @ 0x300003
  3811                           ;	Watchdog Timer Enable bit
  3812                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3813                           ;	Watchdog Timer Postscale Select bits
  3814                           ;	WDTPS = 1, 1:1
  3815  300003                     	org	3145731
  3816  300003  00                 	db	0
  3817                           
  3818                           ; Padding undefined space
  3819  300004                     	org	3145732
  3820  300004  FF                 	db	255
  3821                           
  3822                           ;Config register CONFIG3H @ 0x300005
  3823                           ;	CCP2 MUX bit
  3824                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3825                           ;	PORTB A/D Enable bit
  3826                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3827                           ;	Low-Power Timer1 Oscillator Enable bit
  3828                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3829                           ;	MCLR Pin Enable bit
  3830                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3831  300005                     	org	3145733
  3832  300005  83                 	db	131
  3833                           
  3834                           ;Config register CONFIG4L @ 0x300006
  3835                           ;	Stack Full/Underflow Reset Enable bit
  3836                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3837                           ;	Single-Supply ICSP Enable bit
  3838                           ;	LVP = OFF, Single-Supply ICSP disabled
  3839                           ;	Extended Instruction Set Enable bit
  3840                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3841                           ;	Background Debugger Enable bit
  3842                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3843  300006                     	org	3145734
  3844  300006  80                 	db	128
  3845                           
  3846                           ; Padding undefined space
  3847  300007                     	org	3145735
  3848  300007  FF                 	db	255
  3849                           
  3850                           ;Config register CONFIG5L @ 0x300008
  3851                           ;	Code Protection bit
  3852                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3853                           ;	Code Protection bit
  3854                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3855                           ;	Code Protection bit
  3856                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3857                           ;	Code Protection bit
  3858                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3859  300008                     	org	3145736
  3860  300008  0F                 	db	15
  3861                           
  3862                           ;Config register CONFIG5H @ 0x300009
  3863                           ;	Boot Block Code Protection bit
  3864                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3865                           ;	Data EEPROM Code Protection bit
  3866                           ;	CPD = OFF, Data EEPROM not code-protected
  3867  300009                     	org	3145737
  3868  300009  C0                 	db	192
  3869                           
  3870                           ;Config register CONFIG6L @ 0x30000A
  3871                           ;	Write Protection bit
  3872                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3873                           ;	Write Protection bit
  3874                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3875                           ;	Write Protection bit
  3876                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3877                           ;	Write Protection bit
  3878                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3879  30000A                     	org	3145738
  3880  30000A  0F                 	db	15
  3881                           
  3882                           ;Config register CONFIG6H @ 0x30000B
  3883                           ;	Configuration Register Write Protection bit
  3884                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3885                           ;	Boot Block Write Protection bit
  3886                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3887                           ;	Data EEPROM Write Protection bit
  3888                           ;	WRTD = OFF, Data EEPROM not write-protected
  3889  30000B                     	org	3145739
  3890  30000B  E0                 	db	224
  3891                           
  3892                           ;Config register CONFIG7L @ 0x30000C
  3893                           ;	Table Read Protection bit
  3894                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3895                           ;	Table Read Protection bit
  3896                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3897                           ;	Table Read Protection bit
  3898                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3899                           ;	Table Read Protection bit
  3900                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3901  30000C                     	org	3145740
  3902  30000C  0F                 	db	15
  3903                           
  3904                           ;Config register CONFIG7H @ 0x30000D
  3905                           ;	Boot Block Table Read Protection bit
  3906                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3907  30000D                     	org	3145741
  3908  30000D  40                 	db	64
  3909                           tosu	equ	0xFFF
  3910                           tosh	equ	0xFFE
  3911                           tosl	equ	0xFFD
  3912                           stkptr	equ	0xFFC
  3913                           pclatu	equ	0xFFB
  3914                           pclath	equ	0xFFA
  3915                           pcl	equ	0xFF9
  3916                           tblptru	equ	0xFF8
  3917                           tblptrh	equ	0xFF7
  3918                           tblptrl	equ	0xFF6
  3919                           tablat	equ	0xFF5
  3920                           prodh	equ	0xFF4
  3921                           prodl	equ	0xFF3
  3922                           indf0	equ	0xFEF
  3923                           postinc0	equ	0xFEE
  3924                           postdec0	equ	0xFED
  3925                           preinc0	equ	0xFEC
  3926                           plusw0	equ	0xFEB
  3927                           fsr0h	equ	0xFEA
  3928                           fsr0l	equ	0xFE9
  3929                           wreg	equ	0xFE8
  3930                           indf1	equ	0xFE7
  3931                           postinc1	equ	0xFE6
  3932                           postdec1	equ	0xFE5
  3933                           preinc1	equ	0xFE4
  3934                           plusw1	equ	0xFE3
  3935                           fsr1h	equ	0xFE2
  3936                           fsr1l	equ	0xFE1
  3937                           bsr	equ	0xFE0
  3938                           indf2	equ	0xFDF
  3939                           postinc2	equ	0xFDE
  3940                           postdec2	equ	0xFDD
  3941                           preinc2	equ	0xFDC
  3942                           plusw2	equ	0xFDB
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8

Data Sizes:
    Strings     68
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     72      84
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    itoa@str	PTR unsigned char  size(2) Largest target is 6
		 -> setTemperature@str(COMRAM[6]), main@str(COMRAM[6]), main@tempoRelogio(COMRAM[6]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[13]), STR_5(CODE[4]), 
		 -> STR_4(CODE[7]), STR_3(CODE[13]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_setTemperature
    _setTemperature->_itoa
    _lcdPosition->_lcdCommand
    _itoa->___lwdiv
    _pwmSet1->___lwdiv
    ___wmul->_adc_amostra
    ___lwdiv->___wmul
    _lcd_str->_lcdData
    _lcdData->_digitalWrite
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   28651
                                             37 COMRAM    35    35      0
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                           _adc_init
                          _atraso_ms
                               _itoa
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_str
                            _pwmInit
                            _pwmSet1
                     _setTemperature
 ---------------------------------------------------------------------------------
 (1) _setTemperature                                      15    13      2    9400
                                             24 COMRAM    13    11      2
                            ___lwdiv
                             ___wmul
                        _adc_amostra
                               _itoa
                            _lcdData
                        _lcdPosition
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          3     2      1    2332
                                              8 COMRAM     3     2      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 4     0      4    2843
                                             20 COMRAM     4     0      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _pwmSet1                                              5     5      0    2692
                                             20 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1223
                                              7 COMRAM     6     2      4
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1378
                                             13 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
                        _adc_amostra (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2    2129
                                              8 COMRAM     5     3      2
                            _lcdData
 ---------------------------------------------------------------------------------
 (2) _lcdData                                              2     2      0    1431
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    2339
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4     744
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    1535
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _atraso_ms                                            6     4      2     290
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
     ___wmul (ARG)
       _adc_amostra (ARG)
     _adc_amostra (ARG)
   ___wmul
   _adc_amostra
   _adc_init
   _atraso_ms
   _itoa
     ___lwdiv
     ___lwmod
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
     _lcdCommand
   _lcd_str
     _lcdData
   _pwmInit
   _pwmSet1
     ___lwdiv
     ___wmul
   _setTemperature
     ___lwdiv
     ___wmul
     _adc_amostra
     _itoa
     _lcdData
     _lcdPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     48      54       1       66.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      54      15        0.0%
DATA                 0      0      54       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Jul 30 13:34:50 2021

                        _i 0053                         l42 0EFA                         l76 0CAC  
                       l89 16A6                         u10 1664                         u11 1660  
      ___wmul@multiplicand 000A       __size_of_adc_amostra 0090                        l112 16B0  
                      l130 164C                        l107 1054                        l108 106C  
                      l140 1580                        l109 1074                        l125 1664  
                      l302 0842                        l143 1384                        l137 130C  
                      l154 15D0                        l146 15EE                        l164 152C  
                      l148 160A                        l324 128E                        l229 1464  
                      l238 168E                        l190 120C                        l327 1630  
                      l184 11CE                        l193 117C                        l290 0834  
                      l179 169C                        l187 11D0                        l291 07CC  
                      l295 0802                        l825 13F8                        l818 13F0  
                      l835 14C8                        l828 14C0                        u220 164C  
                      u221 1648                        _PR2 000FCB                        u620 1018  
                      u604 0FC0                        u621 1014                        u605 0FBA  
                      u630 102A                        u614 0FF0                        u631 1026  
                      u615 0FEA                        u640 1042                        u641 103E  
                      u650 1064                        u570 0F72                        u554 0F1E  
                      u651 1060                        u571 0F6E                        u555 0F1A  
                      u564 0F3E                        u565 0F3A                        u590 0FA2  
                      u591 0F9E                        u584 0F88                        u585 0F84  
                      u950 0CCA                        u951 0CC6                        u960 0CDC  
                      u961 0CD8                        u990 0D3A                        u974 0CEE  
                      u991 0D36                        u975 0CEA                        u984 0D0E  
                      u985 0D0A                        _cnt 0052                        wreg 000FE8  
                     l1000 164E                       l1006 1652                       l1008 1654  
                     l2000 089E                       l1050 1632                       l2010 08CE  
                     l2002 08A8                       l1220 0EFC                       l1060 163C  
                     l2020 094A                       l2012 08DA                       l2004 08BC  
                     l1230 0F08                       l1222 0F00                       l2030 0976  
                     l2022 095E                       l2014 08E0                       l2006 08C2  
                     l1240 0F56                       l1232 0F4A                       l1224 0F04  
                     l1056 1636                       l2040 09CA                       l2032 097C  
                     l2024 0964                       l2016 0908                       l2008 08C8  
                     l1250 0FA2                       l1242 0F72                       l1058 163A  
                     l2050 0A18                       l2042 09CC                       l2034 0988  
                     l2026 096A                       l2018 0940                       l1260 101A  
                     l1252 0FD2                       l2060 0A4E                       l2044 09F6  
                     l2036 0994                       l2028 0970                       l2052 0A24  
                     l1270 1064                       l1262 102A                       l1254 1006  
                     l1238 0F52                       l2070 11B0                       l2062 0A50  
                     l2054 0A32                       l2046 09F8                       l2038 09BE  
                     l1344 1690                       l1272 1070                       l1264 1042  
                     l1256 1008                       l1248 0F76                       l1600 0CAE  
                     l1360 1684                       l2064 0A52                       l2048 09FC  
                     l2056 0A44                       l1266 1048                       l1258 1018  
                     l1274 16A8                       l1610 0D3A                       l1602 0CCA  
                     l2058 0A48                       l1268 104C                       l1620 0DCC  
                     l1612 0D54                       l1604 0CDC                       l1700 0A60  
                     l1356 167C                       l1630 0E64                       l1622 0DEC  
                     l1614 0D74                       l1606 0CFC                       l1710 0AEC  
                     l1702 0A7C                       l1358 1680                       l1632 0E86  
                     l1624 0E0E                       l1616 0D96                       l1608 0D1E  
                     l1640 1292                       l1720 0B76                       l1712 0AFE  
                     l1704 0A8E                       l1800 1336                       l1634 0EA2  
                     l1626 0E2A                       l1618 0DB2                       l1650 12C6  
                     l1642 1296                       l1730 0C12                       l1722 0B9A  
                     l1714 0B22                       l1706 0AAE                       l1810 134A  
                     l1802 133A                       l1636 0EBC                       l1628 0E44  
                     l1660 1308                       l1652 12DA                       l1644 129A  
                     l1732 0C38                       l1724 0BC0                       l1716 0B48  
                     l1708 0AD0                       l1820 1362                       l1812 134E  
                     l1804 133E                       l1740 1530                       l1638 0EDC  
                     l1654 12DE                       l1646 12AE                       l1734 0C54  
                     l1726 0BDC                       l1718 0B64                       l1830 137E  
                     l1822 1366                       l1814 1354                       l1806 1342  
                     l1750 1564                       l1742 1534                       l1670 13B0  
                     l1662 1386                       l1910 068E                       l1840 14CA  
                     l1656 12F0                       l1648 12B2                       l1736 0C66  
                     l1728 0BEE                       l1824 136C                       l1816 1358  
                     l1808 1346                       l1752 1578                       l1744 1538  
                     l1832 1582                       l1680 13E4                       l1672 13BE  
                     l1664 138E                       l1760 15E8                       l1920 06C6  
                     l1912 069A                       l1904 0646                       l1850 14F2  
                     l1842 14D6                       l1658 1300                       l1738 0C8A  
                     l1826 1372                       l1818 135C                       l1754 157C  
                     l1746 154C                       l1834 158A                       l1682 13EA  
                     l1674 13C4                       l1666 13A0                       l1770 118C  
                     l1690 1488                       l1762 15FE                       l1930 070A  
                     l1922 06CA                       l1914 06A4                       l1906 0686  
                     l1844 14DA                       l1828 1378                       l1748 1550  
                     l1836 15A6                       l1676 13DA                       l1668 13A8  
                     l1772 1194                       l1692 1496                       l1684 1466  
                     l1764 1604                       l1756 15D4                       l1940 0742  
                     l1932 0714                       l1924 06E6                       l1916 06B0  
                     l1908 068A                       l1854 1506                       l1862 1512  
                     l1838 15A8                       l1678 13E2                       l1790 160C  
                     l1870 1436                       l1766 1180                       l1694 14AC  
                     l1686 1478                       l1758 15D8                       l1950 076A  
                     l1942 074C                       l1934 0720                       l1926 06F2  
                     l1918 06BA                       l1848 14EE                       l1864 1516  
                     l1792 1628                       l1872 143E                       l1768 1184  
                     l1776 119C                       l1696 14B4                       l1688 1480  
                     l1880 1258                       l1960 07B6                       l1952 076E  
                     l1944 0752                       l1936 072C                       l1928 0700  
                     l1858 150C                       l1874 1456                       l1866 13FC  
                     l1778 11DE                       l1698 14BA                       l1786 1076  
                     l1890 1286                       l1882 126A                       l1970 07F4  
                     l1962 07BE                       l1954 078A                       l1946 0758  
                     l1938 0736                       l1796 169E                       l1868 141A  
                     l1788 116C                       l1884 1274                       l1876 120E  
                     l1972 07F6                       l1964 07C0                       l1956 0796  
                     l1948 075E                       l1980 0834                       l1798 130E  
                     l1886 127A                       l1878 1240                       l1990 0872  
                     l1982 0850                       l1974 0810                       l1966 07DA  
                     l1958 07A4                       l1888 1280                       l1992 0876  
                     l1984 0856                       l1976 0822                       l1968 07EC  
                     l1994 087C                       l1986 085A                       l1978 082A  
                     l1996 0882                       l1988 0866                       l1998 0892  
                     STR_1 0601                       STR_2 0610                       STR_3 062B  
                     STR_4 0638                       STR_5 063F                       STR_6 061E  
                     STR_7 063F                       STR_8 0643                       u1000 0D54  
                     u1001 0D50                       u1110 0EA2                       u1030 0DB2  
                     u1014 0D66                       u1111 0E9E                       u1031 0DAE  
                     u1015 0D62                       u1120 0EBC                       u1104 0E76  
                     u1040 0DCC                       u1024 0D86                       u1200 1478  
                     u1121 0EB8                       u1105 0E72                       u1041 0DC8  
                     u1025 0D82                       u1201 1474                       u1210 1496  
                     u1211 1492                       u1220 14AC                       u1221 14A8  
                     u1134 0ECE                       u1070 0E2A                       u1054 0DDE  
                     u1150 12F0                       u1310 0B64                       u1230 0A7C  
                     u1135 0ECA                       u1071 0E26                       u1055 0DDA  
                     u1151 12EC                       u1311 0B60                       u1231 0A78  
                     u1144 0EEE                       u1080 0E44                       u1064 0DFE  
                     u1160 1300                       u1400 0C66                       u1320 0B76  
                     u1304 0B38                       u1240 0A8E                       u1145 0EEA  
                     u1081 0E40                       u1065 0DFA                       u1161 12FC  
                     u1401 0C62                       u1321 0B72                       u1305 0B34  
                     u1241 0A8A                       u1170 13A0                       u1171 139C  
                     u1500 152C                       u1180 13BE                       u1501 1528  
                     u1181 13BA                       u1094 0E56                       u1414 0C7C  
                     u1350 0BDC                       u1334 0B8C                       u1270 0AEC  
                     u1254 0AA0                       u1190 13DA                       u1430 15E8  
                     u1510 06E6                       u1095 0E52                       u1415 0C78  
                     u1351 0BD8                       u1335 0B88                       u1271 0AE8  
                     u1255 0A9C                       u1191 13D6                       u1431 15E4  
                     u1511 06E2                       u1424 0CA0                       u1360 0BEE  
                     u1344 0BB0                       u1280 0AFE                       u1264 0AC0  
                     u1440 15FE                       u1600 0842                       u1520 0700  
                     u1425 0C9C                       u1361 0BEA                       u1345 0BAC  
                     u1281 0AFA                       u1265 0ABC                       u1441 15FA  
                     u1601 083E                       u1521 06FC                       u1450 11DE  
                     u1610 0850                       u1530 078A                       u1451 11DA  
                     u1611 084C                       u1531 0786                       u1620 09BE  
                     u1540 07A4                       u1621 09BA                       u1541 07A0  
                     u1390 0C54                       u1374 0C04                       u1294 0B14  
                     u1470 15D0                       u1630 09F6                       u1550 07B6  
                     u1391 0C50                       u1375 0C00                       u1295 0B10  
                     u1471 15CC                       u1631 09F2                       u1551 07B2  
                     u1480 14EA                       u1384 0C28                       u1640 0A18  
                     u1560 07DA                       u1481 14E6                       u1385 0C24  
                     u1465 11E6                       u1641 0A14                       u1561 07D6  
                     u1490 1502                       u1650 0A32                       u1570 07EC  
                     u1491 14FE                       u1651 0A2E                       u1571 07E8  
                     u1660 0A44                       u1580 0810                       u1661 0A40  
                     u1581 080C                       u1590 0822                       u1591 081E  
                     _main 0646                       _itoa 1076                       _perc 0051  
                     _tmax 0050                       _tmin 004F                       fsr2h 000FDA  
                     indf2 000FDF                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0000               ___param_bank 000000  
  __size_of_setTemperature 0082                      ?_main 0001                      ?_itoa 0015  
                    _T2CON 000FCA            __end_of___lwdiv 13FA            __end_of___lwmod 14CA  
                    _PORTA 000F80                      _PORTB 000F81                      _PORTC 000F82  
                    _PORTD 000F83                      _PORTE 000F84                      _TRISA 000F92  
                    _TRISB 000F93                      _TRISC 000F94                      _TRISD 000F95  
                    _TRISE 000F96            __end_of_lcdData 1582            __end_of_lcdInit 1386  
          __end_of_lcd_str 15D2         main@temperaturaLcd 0043            __end_of_pinMode 0CAE  
                    _valor 004D                      tablat 000FF5            __end_of_pwmSet1 1466  
          __end_of_pwmInit 1690                      status 000FD8           __end_of_Delay2ms 164E  
     __end_of_digitalWrite 0EFC            __initialization 1666               __end_of_main 0A60  
             __end_of_itoa 117E         __size_of_Delay40us 0018                     ??_main 0026  
                   ??_itoa 0019              __activetblptr 000002                     _ADCON0 000FC2  
                   _ADCON1 000FC1                     _ADCON2 000FC0                     _ADRESH 000FC4  
                   _ADRESL 000FC3                     _CCPR1L 000FBE                     _CCPR2L 000FBB  
         __end_of_adc_init 169E       __size_of_lcdPosition 003A          lcdPosition@coluna 0009  
                   ___wmul 160C                  ??___lwdiv 0012                  ??___lwmod 0005  
                   _kpInit 16A8                     _kpRead 169E                     clear_0 166C  
                ??_lcdData 0007                     isa$std 000001                  ??_lcdInit 0009  
                ??_lcd_str 000B                  ??_pinMode 0005               __mediumconst 0000  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_pwmSet1 0015                  ??_pwmInit 0001          __end_of_Delay40us 1666  
               __accesstop 0080    __end_of__initialization 1672              ___rparam_used 000001  
           _setTemperature 120E                pinMode@type 0003             __pcstackCOMRAM 0001  
                ?_Delay2ms 0001         __size_of_atraso_ms 0064      __size_of_digitalWrite 024E  
        main@minutosDezena 0041     __end_of_setTemperature 1290                 _lcdCommand 1290  
                  ?___wmul 0008              ??_adc_amostra 0003                    ?_kpInit 0001  
                  ?_kpRead 0001                    _CCP1CON 000FBD                    _CCP2CON 000FBA  
               _kpDebounce 0EFC                  ?_adc_init 0001                 ??_Delay2ms 0002  
             _digitalWrite 0CAE            ?_setTemperature 0019                    __Hparam 0000  
                  __Lparam 0000            kpDebounce@old_D 0006         lcdPosition@comando 000A  
          kpDebounce@tempo 0054            __size_of___wmul 0026                    ___lwdiv 1386  
                  ___lwmod 1466          __end_of_atraso_ms 152E               __psmallconst 0600  
          __size_of_kpInit 000A            __size_of_kpRead 000A                    __pcinit 1666  
                  _lcdData 152E                    __ramtop 0600                    _lcdInit 130E  
               ??_adc_init 0001                    __ptext0 0646                    __ptext1 120E  
                  __ptext2 15D2                    __ptext3 1076                    __ptext4 1466  
                  __ptext5 117E                    __ptext6 13FA                    __ptext7 160C  
                  __ptext8 1386                    __ptext9 167C                    _lcd_str 1582  
      __end_of_adc_amostra 120E                    _pinMode 0A60                    _pwmSet1 13FA  
                  _pwmInit 167C                  Delay2ms@i 0002                    main@str 0038  
      kpDebounce@valorNovo 004B             main@tempoTotal 0045       end_of_initialization 1672  
                  itoa@val 0015              __Lmediumconst 0000                    itoa@str 0017  
              ?_lcdCommand 0001                    postinc0 000FEE                ?_kpDebounce 0001  
                _PORTCbits 000F82                  _TRISCbits 000F94              ??_lcdPosition 000A  
                _Delay40us 164E                 lcd_str@str 0009                _adc_amostra 117E  
               atraso_ms@i 0003                 atraso_ms@j 0005                 atraso_ms@k 0006  
               atraso_ms@t 0001             __end_of___wmul 1632             __end_of_kpInit 16B2  
           __end_of_kpRead 16A8        start_initialization 1666          __size_of_Delay2ms 001C  
      __size_of_lcdCommand 007E  setTemperature@temperatura 0024        __size_of_kpDebounce 017A  
               ?_Delay40us 0001        __end_of_lcdPosition 160C          setTemperature@tmp 0023  
        setTemperature@str 001D           lcdPosition@linha 000B                   ??___wmul 000C  
                 ??_kpInit 0001                   ??_kpRead 0003          __size_of_adc_init 000E  
              __pbssCOMRAM 0049                 pinMode@pin 0001         main@minutosCentena 0040  
         ??_setTemperature 001B         main@minutosUnidade 0042           ___lwdiv@dividend 000E  
                 ?___lwdiv 000E                   ?___lwmod 0001                   ?_lcdData 0001  
                 ?_lcdInit 0001                   ?_lcd_str 0009              lcdCommand@cmd 0008  
                _atraso_ms 14CA                __smallconst 0600                   ?_pinMode 0001  
                 ?_pwmSet1 0001                   ?_pwmInit 0001           ___lwdiv@quotient 0012  
              _lcdPosition 15D2                ??_Delay40us 0001             ___wmul@product 000C  
             ??_lcdCommand 0007                 pwmSet1@val 0018               ??_kpDebounce 0001  
               _ADCON0bits 000FC2          ___wmul@multiplier 0008                 ?_atraso_ms 0001  
          lcdCommand@old_D 0007      kpDebounce@valorAntigo 0049                   _Delay2ms 1632  
                main@tecla 0047           main@tempoRelogio 002C         __end_of_lcdCommand 130E  
             lcdData@old_D 0008               lcdData@valor 0007         __end_of_kpDebounce 1076  
                 __Hrparam 0000                   __Lrparam 0000               ?_adc_amostra 0001  
         __size_of___lwdiv 0074           __size_of___lwmod 0064            pwmSet1@porcento 0017  
                 _adc_init 1690           __size_of_lcdData 0054           __size_of_lcdInit 0078  
         __size_of_lcd_str 0050           __size_of_pinMode 024E            ___lwdiv@divisor 0010  
          ___lwdiv@counter 0014                   __ptext10 1582                   __ptext11 152E  
                 __ptext20 0EFC                   __ptext12 130E                   __ptext21 14CA  
                 __ptext13 0A60                   __ptext22 1690                   __ptext14 1290  
                 __ptext15 0CAE                   __ptext16 1632                   __ptext17 164E  
                 __ptext18 169E                   __ptext19 16A8           __size_of_pwmSet1 006C  
         __size_of_pwmInit 0014              __size_of_main 041A              __size_of_itoa 0108  
    main@temperaturaMaxima 0032      main@temperaturaMinima 0034                 Delay40us@i 0001  
                 isa$xinst 000000                   main@cont 0028                   lcd_str@i 000D  
                 main@tmpi 0036            main@temperatura 003E                ??_atraso_ms 0003  
            ?_digitalWrite 0001          digitalWrite@value 0003           ___lwmod@dividend 0001  
          ___lwmod@divisor 0003                kpDebounce@i 000A                kpDebounce@j 0009  
              kpDebounce@k 0007            ___lwmod@counter 0005             ??_digitalWrite 0005  
         adc_amostra@canal 0007               ?_lcdPosition 0009            digitalWrite@pin 0001  
